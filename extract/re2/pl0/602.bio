.version 2
init
{
    init_00()
    {
        if (bits[4][145] == 1)
        {
            door_aot_se(3, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, -21113, 0, -23396, -2048, 5, 1, 0, 0, 39, 0, 0, 0, UNLOCKED, 0);
        }
        else
        {
            aot_set(3, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, 9, 0, 0, 0, 255, 255);
        }
        door_aot_se(4, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -13436, -23732, 5900, 1080, -23437, -5400, -4400, 4712, 5, 3, 0, 3, 38, 0, 0, 0, UNLOCKED, 0);
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 0, -11282, 0, -583, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 0, -10324, -18000, -9930, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 0, -10214, 0, -15119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        if (bits[4][254] == 1)
        {
            bits[3][106] = 0;
            bits[34][43] = 1;
            bits[7][17] = 0;
        }
        main_15();
        if (game.scenario == 1)
        {
            if (bits[34][43] == 1)
            {
                if (bits[3][106] == 0)
                {
                    sce_em_set(0, 0, ENEMY_ANNETTEBIRKIN1, 0, 8, 0, 0, 0, 255, 10817, 0, 7278, 1032, 777, 0);
                    obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 16, -25039, -18000, -9116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                    sce_em_set(0, 1, ENEMY_TYRANT1, 2, 64, 0, 18, 0, 17, 10324, -7200, -9930, 1024, 0, 0);
                    item_aot_set(0, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 195, -900, -900, 1800, 1800, ITEM_MAGNUMAMMO, 8, 73, 255, 1);
                    aot_reset(0, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 0, 0);
                    aot_set(5, SCE_NORMAL, SAT_PL | SAT_UNDER, 0, 0, -13796, -18182, 6460, 4880, 0, 0, 0, 0, 0, 0);
                    work_set(WK_OBJECT, 1);
                    pos_set(0, -10324, -5700, -9930);
                    work_set(WK_OBJECT, 2);
                    pos_set(0, -10324, -5700, -9930);
                }
                else
                {
                    if (bits[7][17] == 1)
                    {
                        if (bits[34][73] == 0)
                        {
                            item_aot_set(0, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12200, -12600, 1800, 1800, ITEM_MAGNUMAMMO, 8, 73, 4, 1);
                            obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -11300, 0, -11700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                        }
                    }
                }
            }
            else
            {
                work_set(WK_OBJECT, 1);
                pos_set(0, -10324, -5700, -9930);
                work_set(WK_OBJECT, 2);
                pos_set(0, -10324, -5700, -9930);
            }
        }
        if (bits[7][17] == 1)
        {
            bits[5][0] = 1;
        }
        return 0;
    }

    main_01()
    {
        if (game.scenario == 1)
        {
            if (bits[3][106] == 0)
            {
                if (bits[34][43] == 1)
                {
                    work_set(WK_PLAYER, 0);
                    if (&9 == 5)
                    {
                        bits[3][106] = 1;
                        evt_exec(255, I_GOSUB, main_03);
                    }
                }
            }
        }
        main_18();
        if (bits[7][17] == 1)
        {
            if (bits[5][0] == 0)
            {
                bits[5][0] = 1;
                sce_bgm_control(0, 5, 0, 0, 0);
                evt_exec(255, I_GOSUB, main_02);
            }
        }
        return 0;
    }

    main_02()
    {
        sleep(10, 151);
        aot_reset(0, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 22, 0, 8, 0, 73, 0);
        return 0;
    }

    main_03()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        main_04();
        main_05();
        main_06();
        main_07();
        main_08();
        main_09();
        main_0A();
        main_0B();
        main_0C();
        main_0F();
        main_10();
        main_11();
        aot_reset(3, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 10, 0, 0, 0, 255, 255);
        aot_reset(1, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 0, 0);
        sce_bgmtbl_set(0, 2, 6, 8222, 32832);
        work_set(WK_PLAYER, 0);
        plc_ret();
        cut_chg(2);
        cut_auto(1);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_04()
    {
        work_set(WK_PLAYER, 0);
        plc_dest(0, 4, 32, -10458, -21227);
        se_on(2, 266, 0, -10075, -1800, -5574);
        sleep(10, 2);
        sce_espr_on(0, 24, 0, 8192, -10546, 0, -11540, 0);
        se_on(2, 267, 0, -10546, 0, -11540);
        nop_8a(0, 2, 0, 0, 0);
        nop_8b(255, 2, 0, 1, 0);
        sleep(10, 5);
        sce_bgm_control(2, 1, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_stop();
        sleep(10, 30);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 9, 32, -10075, -5574);
        plc_rot(0, 200);
        main_1C();
        return 0;
    }

    main_05()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10075, 0, -5574);
        dir_set(0, 0, -31792, 0);
        work_set(WK_OBJECT, 3);
        super_set(0, 130, 142, 0, 177, 0, 0, 0, 1024);
        cut_chg(2);
        evt_next();
        xa_on(0, 1);
        work_set(WK_ENEMY, 0);
        plc_motion(0, 15, 0);
        plc_cnt(2);
        sleep(10, 30);
        wsleep();
        wsleeping();
        return 0;
    }

    main_06()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10098, -100, -6995);
        dir_set(0, 0, 1104, 0);
        cut_chg(5);
        evt_next();
        xa_on(0, 2);
        message_on(0, 0, 0, 0, 0);
        evt_next();
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, -128, 1024, 8, 8);
        sleep(10, 30);
        plc_motion(0, 15, 144);
        sleep(10, 20);
        plc_neck(5, 1, 0, 0, 60, 60);
        plc_motion(0, 15, 8);
        plc_cnt(10);
        sleep(10, 40);
        plc_motion(0, 19, 16);
        plc_cnt(5);
        plc_neck(2, 0, 128, 1024, 32, 32);
        sleep(10, 8);
        plc_neck(2, 0, -128, 1024, 32, 32);
        sleep(10, 16);
        plc_neck(2, 0, 128, 1024, 32, 32);
        sleep(10, 16);
        plc_neck(2, 0, -128, 1024, 32, 32);
        sleep(10, 30);
        plc_motion(0, 15, 8);
        plc_neck(5, 1, 0, 0, 96, 96);
        sleep(10, 30);
        plc_neck(2, 0, -360, 1024, 20, 20);
        sleep(10, 20);
        plc_neck(5, 1, 0, 0, 20, 20);
        sleep(10, 30);
        plc_neck(2, 0, 1024, 0, 16, 32);
        sleep(10, 25);
        plc_neck(2, 0, -1024, 0, 16, 32);
        sleep(10, 25);
        plc_neck(2, 0, 1024, 0, 32, 64);
        sleep(10, 6);
        plc_neck(2, 0, -1024, 0, 32, 64);
        sleep(10, 6);
        plc_motion(0, 18, 0);
        for 10 times
        {
            plc_neck(2, 0, -20, 1024, 200, 8);
            evt_next();
            plc_neck(2, 0, 20, 1024, 200, 8);
            evt_next();
        }
        for 15 times
        {
            plc_motion(0, 18, 0);
            plc_cnt(18);
            plc_neck(2, 0, 128, 1024, 16, 8);
            evt_next();
            plc_neck(2, 0, -128, 1024, 8, 8);
            evt_next();
        }
        plc_motion(0, 17, 0);
        plc_neck(5, 1, 0, 0, 200, 200);
        wsleep();
        wsleeping();
        return 0;
    }

    main_07()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10714, 0, -7261);
        dir_set(0, 0, 816, 0);
        cut_chg(8);
        evt_next();
        xa_on(0, 3);
        message_on(0, 1, 0, 0, 0);
        evt_next();
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, 0, 1024, 32, 32);
        plc_motion(0, 23, 0);
        sleep(10, 42);
        plc_motion(0, 16, 0);
        sleep(10, 20);
        plc_neck(5, 1, 0, 0, 32, 32);
        plc_neck(2, 0, 128, 1024, 8, 8);
        sleep(10, 25);
        plc_neck(5, 1, 0, 0, 8, 8);
        sleep(10, 25);
        plc_motion(0, 16, 144);
        sleep(10, 40);
        plc_motion(0, 15, 0);
        plc_neck(2, 0, 0, 1024, 8, 8);
        sleep(10, 20);
        plc_motion(0, 19, 0);
        plc_cnt(5);
        sleep(10, 5);
        plc_neck(2, 0, 0, -128, 32, 32);
        wsleep();
        wsleeping();
        return 0;
    }

    main_08()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10075, 0, -5574);
        dir_set(0, 0, -31792, 0);
        cut_chg(2);
        evt_next();
        xa_on(0, 4);
        message_on(0, 2, 0, 0, 0);
        evt_next();
        work_set(WK_PLAYER, 0);
        plc_motion(0, 18, 0);
        wsleep();
        wsleeping();
        return 0;
    }

    main_09()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -1024, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10714, 0, -7261);
        dir_set(0, 0, 816, 0);
        cut_chg(8);
        evt_next();
        xa_on(0, 5);
        message_on(0, 3, 0, 0, 0);
        evt_next();
        work_set(WK_ENEMY, 0);
        plc_motion(0, 15, 16);
        plc_neck(2, 0, 128, 1024, 16, 4);
        sleep(10, 20);
        plc_neck(2, 0, -128, 1024, 16, 4);
        sleep(10, 20);
        plc_neck(2, 0, 128, 1024, 16, 4);
        sleep(10, 20);
        plc_neck(2, 0, -128, 1024, 16, 4);
        sleep(10, 18);
        plc_motion(0, 24, 0);
        plc_cnt(5);
        sleep(10, 42);
        plc_motion(0, 15, 16);
        plc_cnt(5);
        plc_neck(5, 1, 0, 0, 32, 32);
        sleep(10, 50);
        plc_motion(0, 16, 16);
        sleep(10, 70);
        plc_motion(0, 16, 128);
        sleep(10, 10);
        plc_motion(0, 16, 0);
        plc_cnt(20);
        sleep(10, 30);
        plc_motion(0, 15, 16);
        sleep(10, 40);
        for 10 times
        {
            plc_motion(0, 15, 0);
            plc_cnt(18);
            plc_neck(2, 0, 128, 1024, 16, 8);
            evt_next();
            plc_neck(2, 0, -128, 1024, 8, 8);
            evt_next();
        }
        plc_motion(0, 15, 144);
        sleep(10, 20);
        plc_motion(0, 15, 8);
        plc_cnt(10);
        plc_neck(5, 1, 0, 0, 64, 64);
        wsleep();
        wsleeping();
        return 0;
    }

    main_0A()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10075, 0, -5574);
        dir_set(0, 0, -31792, 0);
        cut_chg(2);
        evt_next();
        xa_on(0, 6);
        message_on(0, 4, 0, 0, 0);
        evt_next();
        work_set(WK_PLAYER, 0);
        plc_motion(0, 20, 0);
        plc_neck(2, 0, 1024, 0, 200, 64);
        sleep(10, 4);
        plc_neck(2, 0, -1024, 0, 200, 64);
        sleep(10, 8);
        plc_neck(2, 0, 1024, 0, 200, 64);
        sleep(10, 8);
        plc_neck(5, 3, 0, 0, 200, 32);
        wsleep();
        wsleeping();
        cut_chg(5);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10098, -100, -6995);
        dir_set(0, 0, 1104, 0);
        evt_next();
        xa_on(0, 7);
        message_on(0, 5, 0, 0, 0);
        evt_next();
        work_set(WK_ENEMY, 0);
        plc_motion(0, 15, 0);
        plc_neck(2, 0, -1024, 0, 16, 8);
        sleep(10, 10);
        plc_neck(2, 0, 1024, 0, 16, 8);
        sleep(10, 28);
        plc_neck(5, 1, 0, 0, 32, 32);
        sleep(10, 12);
        plc_motion(0, 18, 16);
        plc_cnt(12);
        sleep(10, 25);
        plc_motion(0, 16, 0);
        sleep(10, 30);
        plc_motion(0, 16, 128);
        sleep(10, 10);
        plc_motion(0, 16, 16);
        plc_cnt(20);
        sleep(10, 30);
        plc_motion(0, 15, 16);
        plc_cnt(10);
        sleep(10, 40);
        plc_motion(0, 16, 16);
        sleep(10, 40);
        plc_neck(2, 0, 1024, 0, 16, 32);
        sleep(10, 20);
        plc_neck(2, 0, -1024, 0, 16, 32);
        sleep(10, 20);
        plc_motion(0, 15, 0);
        sleep(10, 25);
        plc_neck(2, 0, -400, 1024, 16, 8);
        sleep(10, 20);
        plc_neck(5, 1, 0, 0, 32, 32);
        wsleep();
        wsleeping();
        return 0;
    }

    main_0B()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10195, 0, -16245);
        dir_set(0, 0, -29688, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10075, 0, -5574);
        dir_set(0, 0, -31792, 0);
        cut_chg(6);
        evt_next();
        xa_on(0, 8);
        message_on(0, 6, 0, 0, 0);
        evt_next();
        work_set(WK_PLAYER, 0);
        plc_neck(2, 0, 1024, 1024, 64, 64);
        for 5 times
        {
            plc_motion(0, 20, 0);
            plc_cnt(8);
            sleep(10, 2);
        }
        plc_neck(5, 3, 0, 0, 96, 96);
        sleep(10, 20);
        plc_motion(0, 21, 8);
        sleep(10, 10);
        plc_motion(0, 22, 0);
        plc_cnt(5);
        sleep(10, 12);
        plc_neck(2, 0, 0, 1024, 32, 24);
        sleep(10, 4);
        plc_neck(5, 3, 0, 0, 32, 32);
        sleep(10, 12);
        plc_motion(0, 18, 0);
        plc_neck(2, 0, 1024, 0, 32, 32);
        sleep(10, 10);
        plc_neck(2, 0, -1024, 0, 32, 32);
        sleep(10, 18);
        plc_neck(2, 0, 1024, 0, 64, 64);
        sleep(10, 7);
        plc_neck(2, 0, -1024, 0, 64, 64);
        sleep(10, 5);
        plc_neck(2, 0, 0, 124, 16, 16);
        for 5 times
        {
            plc_motion(0, 18, 0);
            plc_cnt(18);
            sleep(10, 2);
        }
        plc_motion(0, 20, 0);
        sleep(10, 2);
        plc_neck(5, 3, 0, 0, 32, 32);
        sleep(10, 28);
        for 5 times
        {
            plc_motion(0, 20, 0);
            plc_cnt(28);
            sleep(10, 2);
        }
        wsleep();
        wsleeping();
        return 0;
    }

    main_0C()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10098, -100, -6995);
        dir_set(0, 0, 1104, 0);
        cut_chg(5);
        evt_next();
        xa_on(0, 9);
        message_on(0, 7, 0, 0, 0);
        evt_next();
        work_set(WK_ENEMY, 0);
        plc_motion(0, 23, 0);
        plc_neck(2, 0, -128, 128, 8, 8);
        sleep(10, 30);
        plc_neck(2, 0, 128, 128, 8, 8);
        plc_motion(0, 20, 0);
        sleep(10, 30);
        plc_neck(2, 0, -128, 128, 8, 8);
        sleep(10, 15);
        plc_motion(0, 15, 0);
        plc_neck(5, 1, 0, 0, 32, 32);
        sleep(10, 20);
        plc_motion(0, 17, 0);
        sleep(10, 25);
        plc_motion(2, 9, 0);
        plc_neck(2, 0, -128, 128, 64, 64);
        sleep(10, 10);
        plc_neck(2, 0, -128, 256, 64, 32);
        se_on(2, 273, 0, -10098, -2100, -6995);
        sleep(10, 5);
        plc_neck(2, 0, -128, 128, 64, 32);
        wsleep();
        wsleeping();
        sleep(10, 30);
        return 0;
    }

    main_0D()
    {
        bits[1][29] = 1;
        se_on(2, 271, 0, -10324, -5700, -9930);
        sleep(10, 5);
        bits[1][29] = 0;
        sleep(10, 3);
        se_on(2, 16, 0, -11324, -5700, -11900);
        sce_espr_on(0, 25, 0, 5120, -11324, -5700, -11900, 0);
        bits[1][28] = 1;
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -10324, -5700, -11800, 0);
        sce_espr_on(0, 25, 0, 5120, -11324, -5700, -11900, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -11000, -5700, -11591, 0);
        sce_espr_on(0, 25, 0, 5120, -10324, -5700, -11800, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -11000, -5700, -11591, 0);
        sce_espr_on(0, 25, 0, 5120, -9200, -5700, -11391, 0);
        sce_espr_on(0, 25, 0, 5120, -10902, -5700, -11997, 0);
        bits[1][28] = 0;
        sce_espr_on(0, 25, 0, 5120, -12084, -5700, -13195, 0);
        sce_espr_on(0, 25, 0, 5120, -9200, -5700, -11391, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -9000, -5700, -11991, 0);
        sce_espr_on(0, 25, 0, 5120, -12084, -5700, -13195, 0);
        sleep(10, 3);
        sce_espr_on(0, 25, 0, 5120, -10184, -5700, -12195, 0);
        sce_espr_on(0, 25, 0, 5120, -9000, -5700, -11991, 0);
        sleep(10, 3);
        sce_espr_on(0, 25, 0, 5120, -12300, -5700, -12898, 0);
        sce_espr_on(0, 25, 0, 5120, -10184, -5700, -12195, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -12300, -5700, -12898, 0);
        sleep(10, 1);
        sce_espr_on(0, 25, 0, 5120, -13184, -5700, -11995, 0);
        sleep(10, 3);
        sce_espr_on(0, 25, 0, 5120, -12002, -5700, -13091, 0);
        sleep(10, 1);
        sce_espr_on(0, 25, 0, 5120, -9002, -5700, -11091, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 5120, -10100, -5700, -11898, 0);
        return 0;
    }

    main_0E()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10159, 0, -15180);
        dir_set(0, 0, -29528, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10714, 0, -7261);
        dir_set(0, 0, 816, 0);
        cut_chg(8);
        evt_next();
        evt_exec(255, I_GOSUB, main_0D);
        xa_on(0, 10);
        message_on(0, 8, 0, 0, 0);
        evt_next();
        work_set(WK_PLAYER, 0);
        plc_neck(2, 0, 0, -1024, 32, 200);
        sleep(10, 5);
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, 0, -1024, 32, 200);
        sleep(10, 30);
        plc_neck(2, 0, -1024, -1024, 64, 32);
        sleep(10, 5);
        plc_neck(2, 0, 1024, -1024, 64, 32);
        sleep(10, 5);
        plc_neck(2, 0, -1024, -1024, 64, 32);
        work_set(WK_ENEMY, 0);
        plc_motion(1, 1, 0);
        sleep(10, 5);
        plc_stop();
        wsleep();
        wsleeping();
        evt_exec(255, I_GOSUB, main_12);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_motion(1, 1, 0);
        plc_neck(2, 0, 0, 0, 200, 200);
        sleep(10, 5);
        plc_stop();
        work_set(WK_ENEMY, 0);
        plc_motion(1, 1, 0);
        plc_neck(2, 0, 0, 0, 200, 200);
        sleep(10, 5);
        plc_stop();
        sleep(10, 30);
        work_set(WK_PLAYER, 0);
        plc_motion(1, 1, 144);
        plc_cnt(29);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 4, 32, -10589, -3030);
        return 0;
    }

    main_0F()
    {
        sleep(10, 5);
        evt_exec(255, I_GOSUB, main_13);
        sleep(10, 3);
        cut_chg(7);
        work_set(WK_PLAYER, 0);
        pos_set(0, -10214, 0, -13527);
        dir_set(0, 0, 3275, 0);
        plc_neck(5, 3, 1, 0, 96, 96);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10075, 0, -5574);
        dir_set(0, 0, -31792, 0);
        work_set(WK_ENEMY, 1);
        member_set(23, 1, 0);
        pos_set(0, -10214, 0, -15119);
        dir_set(0, 0, 0, 0);
        sleep(10, 10);
        bits[1][29] = 1;
        se_on(2, 269, 0, -10214, 0, -15119);
        nop_8a(0, 5, 0, 0, 0);
        nop_8b(255, 5, 0, 1, 0);
        nop_8c(0, 255, 50, 15, 0, 6, 0);
        nop_8c(0, 50, 0, 35, 0, 21, 0);
        sleep(10, 5);
        bits[1][29] = 0;
        sce_bgm_control(2, 2, 0, 0, 0);
        sce_bgm_control(0, 1, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 9, 32, -10686, -22432);
        plc_rot(0, 200);
        work_set(WK_ENEMY, 0);
        plc_motion(1, 1, 0);
        plc_cnt(10);
        plc_stop();
        sleep(10, 5);
        work_set(WK_PLAYER, 0);
        dir_set(0, 0, 1024, 0);
        plc_motion(1, 1, 0);
        plc_cnt(10);
        sleep(10, 5);
        plc_stop();
        sleep(10, 30);
        return 0;
    }

    main_10()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -10718, 0, -11895);
        dir_set(0, 0, 1024, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -10277, 0, -7093);
        dir_set(0, 0, 816, 0);
        work_set(WK_ENEMY, 1);
        pos_set(0, -10355, 0, -14147);
        cut_chg(1);
        sleep(10, 10);
        work_set(WK_ENEMY, 0);
        plc_dest(0, 8, 35, -10848, -158);
        sleep(10, 20);
        work_set(WK_ENEMY, 0);
        plc_dest(0, 5, 35, -10848, -158);
        plc_rot(0, 200);
        sleep(10, 15);
        return 0;
    }

    main_11()
    {
        work_set(WK_PLAYER, 0);
        plc_neck(5, 3, 1, 0, 32, 32);
        sleep(10, 10);
        plc_dest(0, 8, 32, -10539, 296);
        sleep(10, 15);
        work_set(WK_ENEMY, 1);
        member_set(24, 1, 0);
        work_set(WK_ENEMY, 0);
        plc_dest(0, 6, 35, -10848, -158);
        pos_set(0, 0, 0, 0);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_neck(2, 0, 0, 0, 200, 200);
        return 0;
    }

    main_12()
    {
        work_set(WK_OBJECT, 1);
        pos_set(0, -10324, -5700, -9930);
        dir_set(0, 0, 0, 0);
        save(5, 0);
        for 8 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            copy(16, 5);
            var_10 += B4;
            copy(5, 16);
            evt_next();
        }
        member_set(12, 0, 0);
        se_on(2, 270, 0, -10324, -5700, -9930);
        member_set(16, 10, 0);
        evt_next();
        bits[1][28] = 1;
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 246, 255);
        evt_next();
        member_set(16, 5, 0);
        evt_next();
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 251, 255);
        evt_next();
        bits[1][28] = 0;
        sce_espr_on(0, 25, 0, 5120, -9324, -5700, -12903, 0);
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 2, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 5120, -13324, -5700, -12830, 0);
        sce_espr_on(0, 25, 0, 5120, -9324, -5700, -11903, 0);
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 254, 255);
        evt_next();
        member_set(16, 0, 0);
        sce_espr_on(0, 25, 0, 5120, -13324, -5700, -11830, 0);
        sleep(10, 4);
        sce_espr_on(0, 25, 0, 5120, -11324, -5700, -10783, 0);
        return 0;
    }

    main_13()
    {
        work_set(WK_OBJECT, 2);
        pos_set(0, -10214, -5700, -15119);
        dir_set(0, 0, 0, 0);
        save(5, 0);
        for 8 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            copy(16, 5);
            var_10 += B4;
            copy(5, 16);
            evt_next();
        }
        member_set(12, 0, 0);
        member_set(16, 10, 0);
        evt_next();
        bits[1][28] = 1;
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 246, 255);
        evt_next();
        member_set(16, 5, 0);
        evt_next();
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 251, 255);
        evt_next();
        bits[1][28] = 0;
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 2, 0);
        evt_next();
        member_set(16, 0, 0);
        evt_next();
        member_set(16, 254, 255);
        evt_next();
        member_set(16, 0, 0);
        return 0;
    }

    main_14()
    {
        do
        {
            evt_next();
        } while (bits[5][35] == 0);
        return 0;
    }

    main_15()
    {
        if (game.last_room == 0x600)
        {
            evt_exec(255, I_GOSUB, main_19);
        }
        save(6, 16);
        main_18();
        if (bits[4][145] == 1)
        {
            aot_set(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, 255, 0, I_GOSUB, main_16, 0, 0);
        }
        aot_set(2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -13436, -23732, 5900, 1080, 255, 0, I_GOSUB, main_17, 0, 0);
        return 0;
    }

    main_16()
    {
        aot_on(3);
        return 0;
    }

    main_17()
    {
        aot_on(4);
        return 0;
    }

    main_18()
    {
        if ()
        {
            work_copy(6, 4, 1);
            switch (var_1A)
            {
            case 0:
                sce_bgm_control(1, 0, 1, 60, 64);
                break;
            case 1:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 2:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 3:
                sce_bgm_control(1, 0, 1, 40, 64);
                break;
            case 4:
                sce_bgm_control(1, 0, 1, 40, 64);
                break;
            case 5:
                sce_bgm_control(1, 0, 1, 40, 20);
                break;
            case 6:
                sce_bgm_control(1, 0, 1, 60, 64);
                break;
            case 7:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 8:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            }
            copy(6, 26);
        }
        return 0;
    }

    main_19()
    {
        evt_next();
        bits[2][7] = 1;
        game.cutscene = 1;
        cut_chg(3);
        work_set(WK_PLAYER, 0);
        pos_set(0, -10105, -6000, -583);
        dir_set(0, 0, -1912, 0);
        plc_motion(0, 15, 0);
        evt_exec(255, I_GOSUB, main_1B);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_1A);
        save(4, 0);
        for 10 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 4);
            member_set2(12, 16);
            copy(16, 4);
            var_10 += 5A;
            copy(4, 16);
            evt_next();
        }
        plc_motion(0, 16, 0);
        se_on(2, 29, 0, -10105, 0, -583);
        nop_8a(0, 3, 0, 0, 0);
        nop_8b(255, 5, 0, 0, 0);
        member_copy(16, 12);
        calc2(OP_ADD, 16, 4);
        member_set2(12, 16);
        copy(16, 4);
        var_10 += 5A;
        copy(4, 16);
        evt_next();
        member_copy(16, 12);
        calc2(OP_ADD, 16, 4);
        member_set2(12, 16);
        copy(16, 4);
        var_10 += 5A;
        copy(4, 16);
        evt_next();
        pos_set(0, -10105, 0, -583);
        sleep(10, 25);
        plc_neck(2, 0, 0, -1024, 96, 96);
        sleep(10, 23);
        plc_motion(0, 17, 0);
        sleep(10, 30);
        plc_neck(2, 0, 0, 128, 16, 16);
        plc_motion(0, 17, 128);
        sleep(10, 20);
        se_on(2, 12, 0, -10214, 0, -15119);
        sleep(10, 10);
        plc_neck(2, 0, 0, 0, 96, 96);
        sleep(10, 20);
        plc_neck(2, 0, 1024, 0, 32, 32);
        sleep(10, 20);
        plc_neck(2, 0, -1024, 0, 32, 32);
        sleep(10, 20);
        plc_neck(2, 0, 1024, 0, 32, 32);
        sleep(10, 40);
        plc_dest(0, 9, 32, -5000, -367);
        plc_rot(0, 200);
        plc_neck(2, 0, 0, 0, 32, 32);
        sleep(10, 40);
        plc_neck(2, 0, 0, -1024, 32, 32);
        sleep(10, 40);
        sce_bgm_control(1, 2, 0, 0, 0);
        evt_next();
        movie_on(7);
        evt_next();
        sce_bgm_control(1, 1, 1, 40, 64);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 5, 32, -5000, -367);
        sleep(10, 8);
        plc_dest(0, 6, 32, -5000, -367);
        sleep(10, 30);
        plc_neck(2, 0, 0, 0, 32, 32);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_ret();
        cut_auto(1);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_1A()
    {
        se_on(2, 16, 0, -10105, -6000, -583);
        sce_espr_on(0, 25, 0, 4096, -10105, -6000, -583, 0);
        sleep(10, 3);
        sce_espr_on(0, 25, 0, 4096, -10105, -6000, -583, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 4096, -11105, -6000, -583, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 4096, -11105, -6000, -583, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 4096, -9305, -6000, -1583, 0);
        sleep(10, 4);
        return 0;
    }

    main_1B()
    {
        work_set(WK_OBJECT, 0);
        pos_set(0, -10805, -5700, -583);
        dir_set(0, 0, 0, 0);
        save(5, 0);
        for 9 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 16);
            var_10 += 28;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        for 2 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 16);
            var_10 -= 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        se_on(2, 270, 0, -10805, -5700, -583);
        nop_8a(0, 5, 0, 0, 0);
        nop_8b(250, 5, 0, 0, 0);
        nop_8c(0, 200, 50, 10, 0, 5, 0);
        member_set(12, 0, 0);
        member_copy(16, 11);
        var_10 -= 32;
        member_set2(11, 16);
        member_copy(16, 16);
        var_10 -= 50;
        member_set2(16, 16);
        evt_next();
        save(5, -320);
        for 6 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 11);
            var_10 -= 32;
            member_set2(11, 16);
            member_copy(16, 16);
            var_10 -= 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        for 2 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 11);
            var_10 -= 28;
            member_set2(11, 16);
            member_copy(16, 16);
            var_10 += 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        member_set(16, 0, 0);
        member_set(12, 0, 0);
        evt_next();
        member_copy(16, 16);
        var_10 += 50;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 00;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 -= 50;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 28;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 00;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 -= 28;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 14;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 02;
        member_set2(11, 16);
        evt_next();
        member_set(16, 0, 0);
        return 0;
    }

    main_1C()
    {
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        return 0;
        db(0xC8, 0xC8);
    }
}
