#version 2

proc init
{
    door_aot_se(ID_AOT_0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, 20000, 20000, 1, 1, -2651, 0, -14679, 2056, 5, 3, 7, 0, 40, 4, 0, 0, UNLOCKED, 0);
    sce_em_set(0, ID_EM_0, ENEMY_LICKER_GREY, 0, AI_DEFAULT, 0, SBK_51, 0, 49, -12871, 0, -7014, 1183, 0, 0);
    sce_em_set(0, ID_EM_1, ENEMY_LICKER_GREY, 0, AI_DEFAULT, 0, SBK_51, 0, 50, -10516, 0, -15903, 2149, 0, 0);
    obj_model_set(ID_OBJ_0, 0, 0, 0, 0, 4, 0, 10, 16, -25030, 0, -23196, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    sce_espr_on(0, 2063, 0, 5120, -4400, 3300, -11700, 0);
    sce_espr_on(0, 2063, 0, 4992, -2600, 3300, -11700, 0);
    sce_espr_on(0, 2063, 0, 4864, -3700, 3300, -13600, 0);
    sce_espr_on(0, 2063, 0, 6144, -800, 3300, -14600, 0);
    sce_espr_on(0, 2063, 0, 7168, -1200, 3300, -16200, 0);
    sce_espr_on(0, 2063, 0, 6400, -3500, 3300, -16500, 0);
    sce_espr_on(0, 2063, 0, 7424, -3600, 3300, -18800, 0);
    sce_espr_on(0, 2063, 0, 6272, -900, 3300, -16900, 0);
    sce_espr_on(0, 2063, 0, 6144, -4300, 3300, -11700, 0);
    sce_espr_on(0, 2063, 0, 5120, -2700, 3300, -11700, 0);
    sce_espr_on(0, 2063, 0, 4096, -3700, 3300, -13500, 0);
    sce_espr_on(0, 2063, 0, 6144, -800, 3300, -14700, 0);
    sce_espr_on(0, 2063, 0, 4608, -1100, 3300, -16200, 0);
    sce_espr_on(0, 2063, 0, 7168, -3600, 3300, -16500, 0);
    sce_espr_on(0, 2063, 0, 6656, -3600, 3300, -18700, 0);
    sce_espr_on(0, 2063, 0, 5632, -900, 3300, -17000, 0);
}

proc main
{
    aot_set(ID_AOT_1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, -25620, -24161, 2010, 2020, 255, 0, I_GOSUB, main_0D, 0, 0);
    aot_set(ID_AOT_2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 6411, -7611, 1940, 2320, 255, 0, I_GOSUB, main_05, 0, 0);
    aot_set(ID_AOT_3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -7720, -18280, 1800, 5200, 255, 0, I_GOSUB, main_08, 0, 0);
    fork main_09;
    fork main_11;
}

proc aot
{
}

proc main_02
{
    aot_reset(ID_AOT_5, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
    if (ck(FG_ENEMY_2, 49, 0))
    {
        work_set(WK_ENEMY, ID_EM_1);
        member_set(M_SCE_FREE0, 1);
    }
}

proc main_03
{
    aot_reset(ID_AOT_6, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
    if (ck(FG_ENEMY_2, 50, 0))
    {
        work_set(WK_ENEMY, ID_EM_2);
        member_set(M_SCE_FREE0, 1);
    }
}

proc main_04
{
    evt_next();

off_1BD1:
    work_set(WK_ENEMY, ID_EM_0);
    if (ck(FG_ROOM, 32, 1))
    {
        member_set(M_SCE_FREE0, 1);
    }
    else
    {
        member_set(M_SCE_FREE0, 0);
    }
    evt_next();
    goto off_1BD1;
}

proc main_05
{
    aot_reset(ID_AOT_2, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
    set(FG_STOP, 0, 1);
    set(FG_STOP, 7, 1);
    set(FG_STOP, 2, 1);
    if (ck(FG_COMMON, 145, 0))
    {
        cut_chg(9);
        message_on(0, ID_MSG_0, 0, 0, 255);
        evt_next();
        if (ck(FG_MESSAGE, F_QUESTION, 0))
        {
            set(FG_COMMON, 145, 1);
            set(FG_PBF09, 1, 0);
            se_on(2, 266, 1, 0, 0, 0);
            sleep(10, 2);
            se_on(2, 267, 1, 0, 0, 0);
            sleep(10, 28);
        }
        else
        {
            se_on(4, 5, 0, 0, 0, 0);
        }
        cut_old();
    }
    else
    {
        message_on(0, ID_MSG_1, 0, 0, 255);
        evt_next();
    }
    set(FG_STOP, 2, 0);
    set(FG_STOP, 0, 0);
    set(FG_STOP, 7, 0);
    aot_reset(ID_AOT_2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_05, 0, 0);
}

proc main_06
{
    if (ck(FG_ENEMY_2, 49, 0))
    {
        work_set(WK_ENEMY, ID_EM_1);
        member_copy(V_TEMP, M_TYPE);
        calc(0, OP_OR, V_TEMP, -32768);
        member_set2(M_TYPE, V_TEMP);
    }
    if (ck(FG_ENEMY_2, 50, 0))
    {
        work_set(WK_ENEMY, ID_EM_2);
        member_copy(V_TEMP, M_TYPE);
        calc(0, OP_OR, V_TEMP, -32768);
        member_set2(M_TYPE, V_TEMP);
    }
    set(FG_ROOM, 31, 1);
}

proc main_07
{
    if (ck(FG_ENEMY_2, 49, 0))
    {
        work_set(WK_ENEMY, ID_EM_1);
        member_copy(V_TEMP, M_TYPE);
        calc(0, OP_XOR, V_TEMP, -32768);
        member_set2(M_TYPE, V_TEMP);
    }
    if (ck(FG_ENEMY_2, 50, 0))
    {
        work_set(WK_ENEMY, ID_EM_2);
        member_copy(V_TEMP, M_TYPE);
        calc(0, OP_XOR, V_TEMP, -32768);
        member_set2(M_TYPE, V_TEMP);
    }
    set(FG_ROOM, 31, 0);
}

proc main_08
{
    cut_auto(1);
    aot_reset(ID_AOT_3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
    message_on(0, ID_MSG_2, 0, 0, 239);
    evt_next();
    aot_reset(ID_AOT_3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_08, 0, 0);
}

proc main_09
{
    set(FG_STOP, 7, 1);
    evt_next();
    fork main_0A;
    fork main_0B;
    sleep(10, 90);
    set(FG_STOP, 7, 0);
}

proc main_0A
{
    work_set(WK_OBJECT, ID_OBJ_0);
    member_set(M_Y_POS, -2400);
    speed_set(1, 40);
    repeat (2)
    {
        add_speed();
        evt_next();
    }
    nop_8b(100, 90, 0, 0, 0);
    nop_8c(0, 160, 80, 20, 0, 87, 0);
    nop_8a(0, 3, 0, 85, 0);
    se_on(0, 1, 0, 0, 0, 0);
    repeat (8)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 35);
    repeat (20)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 30);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 25);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 20);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 15);
    repeat (10)
    {
        add_speed();
        evt_next();
    }
    member_copy(V_TEMP, M_Y_POS);
    calc(0, OP_SUB, V_TEMP, 10);
    member_set2(M_Y_POS, V_TEMP);
    sleep(10, 5);
    member_copy(V_TEMP, M_Y_POS);
    calc(0, OP_ADD, V_TEMP, 35);
    member_set2(M_Y_POS, V_TEMP);
}

proc main_0B
{
    work_set(WK_PLAYER, 0);
    pos_set(0, -24990, -2400, -23090);
    member_set(M_Y_DIR, 0);
    member_copy(V_TEMP, M_POINTER);
    calc(0, OP_OR, V_TEMP, 1024);
    member_set2(M_POINTER, V_TEMP);
    main_0C();
    member_copy(V_TEMP, M_POINTER);
    calc(0, OP_AND, V_TEMP, -1025);
    member_set2(M_POINTER, V_TEMP);
}

proc main_0C
{
    speed_set(1, 40);
    repeat (10)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 35);
    repeat (20)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 30);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 25);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 20);
    repeat (15)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, 15);
    repeat (10)
    {
        add_speed();
        evt_next();
    }
    member_copy(V_TEMP, M_Y_POS);
    calc(0, OP_SUB, V_TEMP, 10);
    member_set2(M_Y_POS, V_TEMP);
    sleep(10, 5);
    member_copy(V_TEMP, M_Y_POS);
    calc(0, OP_ADD, V_TEMP, 35);
    member_set2(M_Y_POS, V_TEMP);
}

proc main_0D
{
    aot_on(ID_AOT_0);
}

proc main_0E
{
    work_set(WK_PLAYER, 0);
    pos_set(0, -27329, 0, -23540);
    member_copy(V_TEMP, M_POINTER);
    calc(0, OP_OR, V_TEMP, 1024);
    member_set2(M_POINTER, V_TEMP);
    main_10();
    member_copy(V_TEMP, M_POINTER);
    calc(0, OP_AND, V_TEMP, -1025);
    member_set2(M_POINTER, V_TEMP);
}

proc main_0F
{
    work_set(WK_OBJECT, ID_OBJ_0);
    member_set(M_Y_POS, 0);
    speed_set(1, -40);
    repeat (2)
    {
        add_speed();
        evt_next();
    }
    repeat (8)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, -35);
    repeat (20)
    {
        add_speed();
        evt_next();
    }
}

proc main_10
{
    speed_set(1, -40);
    repeat (10)
    {
        add_speed();
        evt_next();
    }
    speed_set(1, -35);
    repeat (20)
    {
        add_speed();
        evt_next();
    }
}

proc main_11
{
    evt_next();
    switch (V_CUT)
    {
    case 0:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 60, 64);
        break;
    case 1:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 2:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 100, 64);
        break;
    case 3:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 100, 64);
        break;
    case 4:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 100, 64);
        break;
    case 5:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 100, 64);
        break;
    case 6:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 120, 64);
        break;
    case 7:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 8:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 9:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 10:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 100, 64);
        break;
    case 11:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 12:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    case 13:
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG0_VOL, 90, 64);
        sce_bgm_control(BGM_CHANNEL_SUB0, BGM_OP_NOP, BGM_TYPE_PROG1_VOL, 80, 64);
        break;
    }
    do
    {
        evt_next();
    } while (ck(FG_STATUS, 11, 0));
    goto off_1F07;
}
