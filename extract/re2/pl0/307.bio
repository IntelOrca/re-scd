.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -4572, -10039, 1270, 2160, -13550, 0, -16032, 14368, 2, 13, 0, 0, 8, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 7, 0, -3382, -18666, 2110, 1000, -24880, 0, -10636, 4104, 1, 18, 4, 0, 22, 4, 0, 0, UNLOCKED, 0);
        door_aot_se(2, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, -18180, 6850, 2310, 2700, 2200, -5400, -25006, 6104, 2, 5, 0, 3, 40, 4, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        main_02();
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 16, -15749, 0, 5205, 0, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(3, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -16122, 4587, 1000, 1420, ITEM_SHOTGUNAMMO, 7, 194, 2, 1);
        return 0;
    }

    main_01()
    {
        return 0;
    }

    main_02()
    {
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 16, -17100, 0, 7450, 0, -6144, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (game.last_room == 0x305)
        {
            if (bits[3][130] == 1 && bits[3][131] == 0)
            {
                goto off_1154;
            }
            evt_exec(5, I_GOSUB, main_03);
        }

off_1154:
        aot_set(6, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -15480, -7050, 1100, 2600, 19, 0, 0, 0, 255, 255);
        bits[16][1] = 0;
        aot_set(7, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -14000, -3400, 450, 1100, 20, 0, 0, 0, 255, 255);
        aot_set(8, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -3382, -18666, 2110, 1000, 255, 0, I_GOSUB, main_09, 0, 0);
        return 0;
    }

    main_03()
    {
        bits[2][7] = 1;
        evt_exec(255, I_GOSUB, main_04);
        evt_exec(255, I_GOSUB, main_05);
        main_08();
        sleep(10, 5);
        bits[2][7] = 0;
        return 0;
    }

    main_04()
    {
        work_set(WK_OBJECT, 1);
        member_set(11, 52, 189);
        member_set(12, 160, 246);
        member_set(13, 26, 29);
        member_set(15, 0, 232);
        main_06();
        return 0;
    }

    main_05()
    {
        work_set(WK_PLAYER, 0);
        member_copy(16, 0);
        var_10 |= 400;
        member_set2(0, 16);
        member_set(11, 174, 189);
        member_set(12, 160, 246);
        member_set(13, 32, 30);
        member_set(15, 47, 20);
        main_06();
        if (bits[5][1] == 1)
        {
            member_copy(16, 0);
            var_10 -= 400;
            member_set2(0, 16);
        }
        return 0;
    }

    main_06()
    {
        speed_set(1, 40);
        for 2 times
        {
            add_speed();
            evt_next();
        }
        nop_8b(100, 90, 0, 0, 0);
        nop_8c(0, 160, 80, 20, 0, 87, 0);
        nop_8a(0, 3, 0, 85, 0);
        se_on(0, 1, 0, 0, 0, 0);
        for 8 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, 35);
        for 20 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, 30);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, 25);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, 20);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, 15);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        member_copy(16, 12);
        var_10 -= 0A;
        member_set2(12, 16);
        sleep(10, 5);
        member_copy(16, 12);
        var_10 += 23;
        member_set2(12, 16);
        bits[5][1] = 1;
        return 0;
    }

    main_07()
    {
        do
        {
            evt_next();
        } while (bits[5][0] == 0);
        bits[5][0] = 0;
        return 0;
    }

    main_08()
    {
        do
        {
            evt_next();
        } while (bits[5][1] == 0);
        bits[5][1] = 0;
        return 0;
    }

    main_09()
    {
        message_on(0, 22, 0, 255, 239);
        evt_next();
        if (input.question == 0)
        {
            aot_on(1);
        }
        return 0;
        db(0x00, 0x00);
    }
}
