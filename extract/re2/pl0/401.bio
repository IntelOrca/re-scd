.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27580, -16397, 1000, 2000, -7827, 0, -25064, 2192, 3, 15, 0, 0, 30, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -18680, -24197, 2300, 1000, -22447, -1800, -14990, 616, 3, 0, 9, 1, 6, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(2, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -21411, -23995, 2460, 800, -25690, -9000, -15339, 1048, 3, 0, 4, 5, 6, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(3, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_UNDER, 4, 0, -14711, -14695, 2500, 2500, -12217, 0, -26718, 3056, 3, 4, 6, 0, 40, 5, 0, 0, UNLOCKED, 0);
        door_aot_se(20, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, 20000, 20000, 1, 1, -12136, 0, -18578, 2123, 3, 1, 4, 0, 22, 5, 0, 0, UNLOCKED, 0);
        door_aot_se(21, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, 20000, 20000, 1, 1, -12136, -7200, -18578, 2123, 3, 1, 2, 4, 22, 4, 0, 0, UNLOCKED, 0);
        aot_set(4, SCE_ITEMBOX, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -27090, -21710, 1700, 2200, 0, 0, 1, 0, 0, 0);
        obj_model_set(0, 0, 0, 0, 0, 4, 0, 10, 16, -26799, -8680, -20184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 4, 0, 10, 16, -12465, -7200, -17144, 0, -2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(3, 0, 0, 0, 0, 4, 0, 10, 16, -13315, -7200, -13694, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        aot_set(5, SCE_SAVE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -23354, -26204, 1000, 1400, 5, 0, 0, 0, 0, 0);
        bits[15][2] = 0;
        bits[15][4] = 0;
        return 0;
        db(0x8E, 0x1C);
    }
}

main
{
    main_00()
    {
        if (bits[4][52] == 1 && bits[4][77] == 0)
        {
            work_set(WK_PLAYER, 0);
            if (&17 == 4)
            {
                sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 12, 4, 31, 0, 255, -15265, -7200, -14790, 0, 0, 0);
            }
            else
            {
                sce_em_set(0, 0, ENEMY_ZOMBIEGUY2, 0, 16, 0, 6, 2, 4, -21479, 0, -17442, 3285, 0, 0);
            }
            aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0E, 0, 0);
            aot_reset(2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0F, 0, 0);
        }
        else
        {
            work_set(WK_PLAYER, 0);
            if (&17 == 0)
            {
                sce_em_set(0, 0, ENEMY_ZOMBIEGUY2, 0, 16, 0, 6, 2, 4, -21479, 0, -17442, 3285, 0, 0);
            }
        }
        main_03();
        item_aot_set(12, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -17033, -17326, 1600, 2100, ITEM_HANDGUNAMMO, 15, 130, 255, 0);
        obj_model_set(6, 0, 0, 0, 0, 0, 0, 10, 16, -24673, -350, -25837, 0, -1664, 64, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(13, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -26139, -26597, 1900, 1600, ITEM_SHOTGUNAMMO, 7, 131, 6, 0);
        obj_model_set(7, 0, 0, 0, 0, 0, 0, 10, 16, -17373, -2600, -19987, -3072, -4096, 1024, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(14, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -18439, -20837, 1400, 2000, ITEM_MAGNUMAMMO, 8, 169, 7, 160);
        obj_model_set(8, 0, 0, 0, 0, 0, 0, 10, 16, -14033, -7200, -22976, 0, 1856, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(15, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -14633, -23526, 1200, 1200, ITEM_HERBG, 1, 178, 8, 1);
        obj_model_set(9, 0, 0, 0, 0, 0, 0, 10, 16, -13483, -7200, -22876, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(16, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -14133, -23526, 1200, 1200, ITEM_HERBG, 1, 179, 9, 1);
        obj_model_set(10, 0, 0, 0, 0, 0, 0, 10, 16, -13083, -7200, -22426, 0, -896, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(17, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -13533, -23426, 1200, 1200, ITEM_HERBG, 1, 168, 10, 1);
        aot_set(23, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -12765, -19899, 1800, 2800, 255, 0, I_GOSUB, main_0A, 0, 0);
        aot_set(25, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -12185, -19899, 1400, 900, 255, 0, I_GOSUB, main_0A, 0, 0);
        aot_set(24, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12185, -19899, 1400, 900, 255, 0, I_GOSUB, main_08, 0, 0);
        if (game.scenario == 1)
        {
            aot_reset(0, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 5, 0, 0, 0, 0, 255);
        }
        else
        {
            aot_reset(0, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        }
        main_04();
        if (bits[4][34] == 0)
        {
            aot_reset(23, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_06, 0, 0);
            sca_id_set(0, 128, 254);
        }
        else
        {
            aot_reset(23, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            work_set(WK_OBJECT, 2);
            pos_set(0, 20000, 20000, 20000);
            sca_id_set(0, 0, 0);
        }
        evt_exec(255, I_GOSUB, main_05);
        aot_reset(0, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        if (game.last_room == 0x404)
        {
            bits[5][5] = 1;
            evt_exec(255, I_GOSUB, main_10);
            bits[5][0] = 1;
            bits[5][2] = 0;
            bits[2][2] = 1;
            bits[2][1] = 0;
        }
        else
        {
            bits[5][3] = 1;
        }
        evt_exec(255, I_GOSUB, main_0C);
        return 0;
    }

    main_01()
    {
        return 0;
    }

    main_02()
    {
        if (bits[8][62] == 1)
        {
            aot_reset(11, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 27, 0, 100, 0, 129, 0);
        }
        else
        {
            aot_reset(11, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 20, 0, 30, 0, 129, 0);
        }
        se_on(2, 296, 1, 0, 0, 0);
        aot_on(11);
        evt_next();
        if (bits[8][129] == 0)
        {
            aot_reset(11, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_02, 0, 0);
        }
        return 0;
    }

    main_03()
    {
        obj_model_set(4, 0, 0, 0, 0, 4, 0, 10, 16, -21733, -8650, -26126, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(9, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -22433, -26226, 1200, 1500, ITEM_INKRIBBON, 3, 128, 4, 0);
        return 0;
    }

    main_04()
    {
        aot_set(26, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -27523, -19258, 2900, 6800, 8, 0, 0, 0, 0, 255);
        aot_set(27, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19273, -18726, 2500, 1400, 11, 0, 0, 0, 0, 255);
        aot_set(28, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -23903, -19196, 1200, 2600, 12, 0, 0, 0, 0, 255);
        aot_set(29, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -22913, -19226, 700, 6800, 11, 0, 0, 0, 0, 255);
        aot_set(30, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -17033, -17326, 1200, 1200, 9, 0, 0, 0, 0, 255);
        aot_set(31, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -27339, -26597, 3200, 1600, 10, 0, 0, 0, 0, 255);
        return 0;
    }

    main_05()
    {
        evt_next();
        if (game.last_room == 0x404)
        {
            sce_bgm_control(0, 1, 0, 85, 64);
        }
        else
        {
            work_set(WK_PLAYER, 0);
            if (&17 == 4)
            {
                sce_bgm_control(0, 1, 0, 85, 64);
            }
        }
        return 0;
    }

    main_06()
    {
        aot_reset(23, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[2][7] = 1;
        if (game.player == 0)
        {
            if ()
            {
                keep_item_ck(31);
                bits[5][32] = 1;
            }
        }
        else
        {
            bits[5][32] = 1;
        }
        if (bits[5][32] == 1)
        {
            message_on(0, 2, 0, 0, 255);
            evt_next();
            if (input.question == 0)
            {
                se_on(4, 262, 1, 0, 0, 0);
                if (game.player == 0)
                {
                    sce_item_ck_lost(31, 1);
                    message_on(0, 13, 0, 0, 255);
                }
                else
                {
                    message_on(0, 14, 0, 0, 255);
                }
                evt_next();
                bits[4][34] = 1;
                se_on(2, 293, 1, 0, 0, 0);
                main_07();
            }
            else
            {
                se_on(4, 261, 1, 0, 0, 0);
                aot_reset(23, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_06, 0, 0);
            }
        }
        else
        {
            aot_reset(23, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_06, 0, 0);
            message_on(0, 0, 0, 0, 255);
            se_on(2, 278, 1, 0, 0, 0);
            evt_next();
        }
        bits[2][7] = 0;
        return 0;
    }

    main_07()
    {
        bits[15][2] = 1;
        nop_8c(0, 80, 70, 55, 0, 13, 0);
        nop_8b(120, 5, 0, 67, 0);
        sleep(10, 17);
        work_set(WK_OBJECT, 2);
        speed_set(2, 0);
        speed_set(8, -20);
        se_on(2, 266, 516, 0, 0, 0);
        for 3 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        for 45 times
        {
            add_speed();
            evt_next();
        }
        aot_reset(23, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        pos_set(0, 20000, 20000, 20000);
        bits[15][2] = 0;
        sca_id_set(0, 0, 0);
        return 0;
    }

    main_08()
    {
        bits[2][7] = 1;
        aot_reset(24, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        message_on(0, 4, 0, 0, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(4, 262, 1, 0, 0, 0);
            main_09();
        }
        else
        {
            se_on(4, 261, 1, 0, 0, 0);
            aot_reset(24, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_08, 0, 0);
        }
        bits[2][7] = 0;
        return 0;
    }

    main_09()
    {
        aot_reset(24, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        if (bits[4][52] == 1 && bits[4][77] == 0)
        {
            bits[1][3] = 1;
        }
        aot_on(21);
        return 0;
    }

    main_0A()
    {
        bits[2][7] = 1;
        aot_reset(25, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        message_on(0, 3, 0, 0, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(4, 262, 1, 0, 0, 0);
            main_0B();
        }
        else
        {
            se_on(4, 261, 1, 0, 0, 0);
            aot_reset(25, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0A, 0, 0);
        }
        bits[2][7] = 0;
        return 0;
    }

    main_0B()
    {
        aot_reset(25, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[1][3] = 0;
        sce_bgm_control(0, 2, 0, 1, 64);
        aot_on(20);
        return 0;
    }

    main_0C()
    {
        evt_next();

off_294F:
        work_set(WK_PLAYER, 0);
        if (&17 == 0)
        {
            if (bits[5][2] == 0)
            {
                bits[5][2] = 1;
                evt_exec(255, I_GOSUB, main_0D);
            }
            bits[2][2] = 0;
            bits[2][1] = 1;
            bits[9][132] = 1;
            bits[35][8] = 1;
        }
        else
        {
            bits[5][0] = 1;
            bits[5][2] = 0;
            bits[2][2] = 1;
            bits[2][1] = 0;
            bits[9][131] = 1;
            bits[35][7] = 1;
        }
        evt_next();
        goto off_294F;
        return 0;
    }

    main_0D()
    {
        while (
        {
            copy(4, 29);
            copy(16, 4);
            var_10 &= 1FFF;
            copy(4, 16);
            copy(16, 4);
            var_10 -= 55F0;
            copy(4, 16);
            sce_rnd();
            copy(5, 29);
            copy(16, 5);
            var_10 &= 1FFF;
            copy(5, 16);
            copy(16, 5);
            var_10 -= 55F0;
            copy(5, 16);
            work_copy(5, 16, 1);
            work_copy(4, 8, 1);
            sce_espr_on(0, 5376, 0, 2048, 0, -4500, 0, 0);
            sleep(10, 30);
            work_copy(5, 14, 1);
            work_copy(4, 6, 1);
            se_on(2, 267, 0, 0, -4500, 0);
            copy(5, 29);
            if (arr[5] >= 0)
            {
                if (arr[5] >= 15000)
                {
                    sleep(10, 20);
                }
                else
                {
                    sleep(10, 40);
                }
            }
            else
            {
                if (arr[5] >= -15000)
                {
                    sleep(10, 25);
                }
                else
                {
                    sleep(10, 15);
                }
            }
        }
        return 0;
    }

    main_0E()
    {
        bits[2][7] = 1;
        aot_reset(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 81, 168, 248, 248, 114, 197);
        bits[1][3] = 0;
        aot_on(1);
        bits[2][7] = 0;
        return 0;
    }

    main_0F()
    {
        bits[2][7] = 1;
        aot_reset(2, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 166, 155, 216, 220, 21, 196);
        bits[1][3] = 0;
        aot_on(2);
        bits[2][7] = 0;
        return 0;
    }

    main_10()
    {
        bits[2][7] = 1;
        bits[15][4] = 1;
        evt_exec(255, I_GOSUB, main_11);
        evt_exec(255, I_GOSUB, main_12);
        if (bits[4][52] == 1 && bits[4][77] == 0)
        {
            evt_exec(255, I_GOSUB, main_13);
        }
        sleep(10, 90);
        bits[5][5] = 0;
        bits[2][7] = 0;
        bits[15][4] = 0;
        return 0;
    }

    main_11()
    {
        work_set(WK_OBJECT, 3);
        member_set(12, 64, 237);
        speed_set(1, -40);
        for 2 times
        {
            add_speed();
            evt_next();
        }
        nop_8b(100, 90, 0, 0, 0);
        nop_8c(0, 160, 80, 20, 0, 87, 0);
        nop_8a(0, 3, 0, 85, 0);
        se_on(0, 1, 0, 0, 0, 0);
        for 8 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -35);
        for 20 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -30);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -25);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -20);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -15);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        member_copy(16, 12);
        var_10 += 0A;
        member_set2(12, 16);
        sleep(10, 5);
        member_copy(16, 12);
        var_10 -= 23;
        member_set2(12, 16);
        return 0;
    }

    main_12()
    {
        work_set(WK_PLAYER, 0);
        pos_set(0, -13629, -4800, -12997);
        member_set(15, 0, 8);
        member_copy(16, 0);
        var_10 |= 400;
        member_set2(0, 16);
        main_14();
        member_copy(16, 0);
        var_10 &= FBFF;
        member_set2(0, 16);
        return 0;
    }

    main_13()
    {
        work_set(WK_SPLAYER, 0);
        pos_set(0, -13349, -4800, -13749);
        member_set(15, 0, 8);
        member_copy(16, 0);
        var_10 |= 400;
        member_set2(0, 16);
        main_14();
        member_copy(16, 0);
        var_10 &= FBFF;
        member_set2(0, 16);
        return 0;
    }

    main_14()
    {
        speed_set(1, -40);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -35);
        for 20 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -30);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -25);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -20);
        for 15 times
        {
            add_speed();
            evt_next();
        }
        speed_set(1, -15);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        member_copy(16, 12);
        var_10 += 0A;
        member_set2(12, 16);
        sleep(10, 5);
        member_copy(16, 12);
        var_10 -= 23;
        member_set2(12, 16);
        return 0;
        db(0x18, 0x00);
    }
}
