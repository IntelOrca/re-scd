.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -22884, -21968, 4300, 1800, 14320, 0, -20070, 3072, 4, 1, 1, 0, 44, 1, 0, 0, UNLOCKED, 0);
        bits[4][103] = 1;
        return 0;
    }
}

main
{
    main_00()
    {
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 0, -32000, 0, -25100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        aot_set(2, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -15610, -23910, 1800, 2200, 0, 0, 0, 0, 255, 255);
        save(4, 0);
        save(5, 0);
        save(6, 0);
        save(7, 0);
        save(8, 0);
        save(9, 0);
        save(10, 0);
        save(11, 0);
        if (bits[3][192] == 0)
        {
            sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 8, 0, 0, 0, 255, -20650, 0, -23060, 437, 0, 0);
            sce_em_set(0, 0, ENEMY_49, 2, 0, 0, 35, 0, 24, -20000, -5000, -24000, 0, 0, 0);
            aot_reset(0, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 52, 175, 0, 0, 230, 174);
            aot_set(3, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -22884, -21968, 4300, 1800, 1, 0, 0, 0, 255, 255);
            evt_exec(255, I_GOSUB, main_02);
        }
        else
        {
            sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 4, 0, 31, 0, 255, -20650, 0, -23060, 437, 0, 0);
        }
        bits[13][1] = 0;
        bits[13][2] = 0;
        bits[13][3] = 0;
        bits[13][4] = 0;
        bits[13][5] = 0;
        bits[13][6] = 0;
        bits[14][5] = 0;
        bits[14][6] = 0;
        bits[14][7] = 0;
        bits[14][8] = 0;
        bits[14][9] = 0;
        bits[14][10] = 0;
        return 0;
    }

    main_01()
    {
        main_11();
        return 0;
    }

    main_02()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_PLAYER, 0);
        pos_set(0, -19720, 0, -22800);
        dir_set(0, 0, 150, 0);
        cut_auto(0);
        evt_next();
        evt_exec(255, I_GOSUB, main_04);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_03);
        cut_chg(0);
        evt_next();
        do
        {
            evt_next();
        } while (arr[4] != 2);
    }
    sce_bgm_control(0, 1, 0, 0, 0);
    main_1E();
    evt_exec(255, I_GOSUB, main_20);
    cut_chg(0);
    work_set(WK_PLAYER, 0);
    pos_set(0, -17000, 0, -22900);
    work_set(WK_SPLAYER, 0);
    pos_set(0, -16080, 0, -24360);
    sleep(10, 20);
    copy(16, 4);
    var_10 += 01;
    copy(4, 16);
    work_set(WK_ENEMY, 0);
    member_set(23, 18, 0);
    evt_next();
    member_copy(16, 23);
    var_10 &= F0;
    member_set2(23, 16);
    sleep(10, 7);
    sce_bgm_control(1, 1, 0, 0, 0);
    save(7, 2);
    se_on(2, 11, 0, -16020, -4500, -23040);
    evt_exec(255, I_GOSUB, main_0D);
    main_0F();
    do
    {
        evt_next();
    } while (arr[4] != 3);
}
cut_auto(0);
bits[5][5] = 1;
cut_chg(1);
work_set(WK_PLAYER, 0);
nop_8c(0, 150, 50, 35, 0, 0, 0);
nop_8c(0, 150, 50, 20, 0, 15, 0);
plc_neck(2, 0, 0, -300, 0, 60);
plc_motion(10, 15, 0);
member_copy(16, 12);
var_10 -= 22;
member_set2(12, 16);
for 40 times
{
    member_copy(16, 11);
    var_10 -= 0F;
    member_set2(11, 16);
    evt_next();
}
plc_ret();
cut_auto(1);
evt_exec(255, I_GOSUB, main_19);
bits[2][7] = 0;
game.cutscene = 0;
evt_next();
main_07();
bits[2][7] = 1;
game.cutscene = 1;
work_set(WK_PLAYER, 0);
plc_motion(2, 2, 4);
evt_next();
cut_auto(0);
if (bits[5][4] == 1 && bits[5][8] == 1)
{
    cut_chg(4);
}
else
{
    if (bits[5][4] == 1)
    {
        cut_chg(6);
    }
    else
    {
        if (bits[5][8] == 1)
        {
            cut_chg(5);
        }
        else
        {
            cut_chg(7);
        }
    }
}
work_set(WK_PLAYER, 0);
pos_set(0, -20400, 0, -25265);
dir_set(0, 0, 3600, 0);
work_set(WK_SPLAYER, 0);
dir_set(0, 0, 2756, 0);
unk(130, 6, 0);
work_set(WK_SPLAYER, 0);
plc_motion(2, 2, 68);
work_set(WK_PLAYER, 0);
plc_dest(0, 9, 32, -16605, -26092);
do
{
    evt_next();
} while (bits[5][32] == 0);
plc_neck(1, -16605, 0, -26092, 50, 50);
bits[5][2] = 1;
plc_neck(2, 0, 0, 0, 50, 50);
sleep(10, 30);
evt_exec(255, I_GOSUB, main_05);
work_set(WK_ENEMY, 0);
member_set(23, 50, 0);
bits[5][9] = 1;
evt_next();
member_copy(16, 23);
var_10 &= F0;
member_set2(23, 16);
sleep(10, 7);
se_on(3, 0, 3, 0, 0, 0);
sleep(10, 30);
work_set(WK_PLAYER, 0);
plc_neck(1, -16020, -4500, -23040, 50, 50);
work_set(WK_ENEMY, 0);
do
{
    evt_next();
} while (&23 != 32);
}
bits[5][9] = 0;
work_set(WK_PLAYER, 0);
plc_neck(2, 0, 480, -320, 240, 160);
sleep(10, 20);
bits[5][10] = 1;
sce_bgm_control(1, 5, 0, 0, 0);
cut_chg(1);
work_set(WK_PLAYER, 0);
pos_set(0, -18600, 0, -23355);
dir_set(0, 0, 150, 0);
member_copy(16, 7);
var_10 &= FFF;
copy(11, 16);
if (arr[11] != 0)
{
    plc_motion(2, 9, 192);
}
work_set(WK_SPLAYER, 0);
pos_set(0, -17740, 0, -25715);
dir_set(0, 0, 2756, 0);
plc_motion(2, 9, 64);
plc_cnt(9);
evt_next();
if (arr[11] != 0)
{
    work_set(WK_PLAYER, 0);
    plc_stop();
}
sleep(10, 9);
evt_exec(255, I_GOSUB, main_06);
work_set(WK_PLAYER, 0);
plc_neck(2, 0, -240, -320, 20, 0);
sleep(10, 48);
if (arr[11] != 0)
{
    plc_motion(2, 9, 144);
}
plc_neck(2, 0, 480, -320, 20, 0);
sleep(10, 48);
plc_neck(2, 0, -240, -320, 20, 0);
sleep(10, 48);
plc_neck(2, 0, 480, -320, 20, 0);
sleep(10, 33);
se_on(2, 18, 1, 0, 0, 0);
main_22();
evt_exec(255, I_GOSUB, main_18);
sleep(10, 15);
plc_neck(2, 0, 0, -320, 20, 0);
sleep(10, 24);
plc_neck(2, 0, 240, -320, 40, 0);
sleep(10, 16);
main_1B();
cut_chg(1);
work_set(WK_PLAYER, 0);
pos_set(0, -18600, 0, -23355);
dir_set(0, 0, 150, 0);
plc_neck(6, 0, 0, 0, 0, 0);
work_set(WK_SPLAYER, 0);
pos_set(0, -17740, 0, -25715);
dir_set(0, 0, 2756, 0);
plc_neck(6, 0, 0, 0, 0, 0);
sleep(10, 15);
main_21();
evt_exec(255, I_GOSUB, main_18);
sce_bgmtbl_set(0, 0, 5, 65308, 0);
sce_bgm_control(0, 2, 1, 0, 0);
se_on(2, 12, 1, 0, 0, 0);
sleep(10, 30);
aot_reset(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 240, 55, 0, 0, 154, 177);
aot_reset(2, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 0, 0);
bits[3][192] = 1;
cut_auto(1);
sleep(10, 15);
work_set(WK_PLAYER, 0);
plc_ret();
work_set(WK_SPLAYER, 0);
splc_ret();
bits[2][7] = 0;
game.cutscene = 0;
return 0;
}

    main_03()
    {
        work_set(WK_PLAYER, 0);
        plc_dest(0, 4, 32, -17000, -22900);
        plc_neck(2, 0, 0, 0, 30, 30);
        sleep(10, 10);
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        plc_neck(2, 0, 0, 200, 0, 30);
        sleep(10, 20);
        copy(16, 4);
        var_10 += 01;
        copy(4, 16);
        return 0;
    }

    main_04()
    {
        work_set(WK_SPLAYER, 0);
        pos_set(0, -18550, 0, -24100);
        dir_set(0, 0, 0, 0);
        plc_dest(0, 4, 33, -16080, -24360);
        do
        {
            evt_next();
        } while (bits[5][33] == 0);
        plc_neck(2, 0, -240, 0, 30, 0);
        sleep(10, 20);
        copy(16, 4);
        var_10 += 01;
        copy(4, 16);
        do
        {
            evt_next();
        } while (arr[4] != 3);
    }
    plc_motion(0, 21, 0);
    sleep(10, 12);
    dir_set(0, 0, 3072, 0);
    plc_motion(10, 22, 0);
    sleep(10, 20);
    se_on(2, 14, 2, 0, 0, 0);
    sleep(10, 10);
    member_copy(16, 11);
    var_10 += 1000;
    member_set2(11, 16);
    member_copy(16, 13);
    var_10 -= C8;
    member_set2(13, 16);
    dir_set(0, 0, 2600, 0);
    plc_motion(0, 23, 0);
    sleep(10, 79);
    plc_motion(0, 25, 0);
    member_copy(16, 0);
    var_10 += 04;
    member_set2(0, 16);
    sleep(10, 40);
    plc_motion(2, 2, 4);
    plc_neck(2, 0, 0, -512, 0, 30);
    sleep(10, 18);
    plc_neck(2, 0, 128, -512, 10, 0);
    sleep(10, 18);
    plc_neck(2, 0, -512, -512, 10, 0);
    sleep(10, 40);
    plc_neck(5, 3, 0, 0, 0, 0);
    member_copy(16, 15);
    var_10 += 514;
    copy(10, 16);
    for 4 times
    {
        plc_neck(6, 0, 0, 0, 0, 0);
        main_08();
        plc_neck(5, 3, 0, 0, 0, 0);
        plc_motion(2, 9, 0);
        for 5 times
        {
            if (bits[5][9] == 0)
            {
                goto off_1C4C;
            }
            evt_next();
        }
        plc_motion(2, 13, 4);
        for 30 times
        {
            if (bits[5][9] == 0)
            {
                goto off_1C4C;
            }
            evt_next();
        }
        if (bits[5][9] == 1)
        {
            main_0A();
            sleep(10, 4);
            main_0A();
            sce_espr_on(0, 0, 197, 8192, -720, 360, 0, 0);
            sleep(10, 34);
        }

off_1C4C:
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 11, 4);
        sleep(10, 5);
    }
    return 0;
}

    main_05()
    {
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 9, 0);
        sleep(10, 10);
        plc_neck(1, -16020, -4500, -23040, 50, 50);
        sleep(10, 30);
        plc_motion(2, 13, 4);
        sleep(10, 10);
        do
        {
            evt_next();
        } while (bits[5][9] == 0);
        main_0A();
        sleep(10, 4);
        sce_espr_on(0, 0, 197, 8192, -720, 360, 0, 0);
        main_09();
        sleep(10, 4);
        sce_espr_on(0, 0, 198, 8192, -720, -360, 0, 0);
        if (bits[5][4] == 1)
        {
            cut_chg(3);
        }
        else
        {
            cut_chg(2);
        }
        main_09();
        sleep(10, 4);
        sce_espr_on(0, 0, 199, 8192, -720, -360, 0, 0);
        work_set(WK_ENEMY, 0);
        sce_parts_down(7, 220, 10, 20, 0, 100, 0, 10, 0, 0, 0, 0, 4, 0, 12);
        sce_espr_on(0, 768, 197, 8192, -720, 360, 0, 0);
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 9, 128);
        sleep(10, 10);
        sce_espr_on(0, 768, 197, 8192, -720, 360, 0, 0);
        sleep(10, 2);
        se_on(2, 16, 3, 0, 1800, 0);
        sleep(10, 8);
        sce_espr_on(0, 768, 197, 8192, -720, 360, 0, 0);
        return 0;
    }

    main_06()
    {
        plc_motion(2, 9, 144);
        plc_neck(2, 0, -320, -320, 16, 20);
        sleep(10, 20);
        plc_neck(2, 0, 320, -320, 16, 20);
        sleep(10, 4);
        plc_motion(2, 2, 4);
        sleep(10, 36);
        plc_neck(2, 0, -400, -320, 16, 20);
        sleep(10, 48);
        plc_neck(2, 0, 400, -320, 16, 20);
        sleep(10, 48);
        plc_neck(2, 0, 240, 0, 16, 20);
        sleep(10, 40);
        sleep(10, 15);
        plc_neck(2, 0, -240, 0, 40, 0);
        sleep(10, 8);
        sleep(10, 15);
        return 0;
    }

    main_07()
    {
        for 4 times
        {

off_1DB4:
            sleep(10, 45);
            work_set(WK_PLAYER, 0);
            for 2 times
            {
                if (&13 >= -24300)
                {
                    if (&11 <= -22815)
                    {
                        save(6, 16);
                    }
                    else
                    {
                        if (&11 <= -18297)
                        {
                            save(6, 17);
                        }
                        else
                        {
                            save(6, 18);
                        }
                    }
                }
                else
                {
                    if (&11 <= -23517)
                    {
                        save(6, 19);
                    }
                    else
                    {
                        if (&11 <= -18981)
                        {
                            save(6, 20);
                        }
                        else
                        {
                            save(6, 21);
                        }
                    }
                }
                if ()
                {
                    work_copy(6, 4, 1);
                    goto off_1E4C;
                }
            }
            save(9, 0);
            goto off_1DB4;

off_1E4C:
            copy(16, 6);
            var_10 &= 0F;
            copy(7, 16);
            main_0C();
            work_set(WK_ENEMY, 0);
            member_set2(23, 6);
            member_copy(9, 23);
            member_copy(16, 23);
            var_10 &= 0F;
            copy(5, 16);
            copy(16, 5);
            var_10 += 01;
            copy(11, 16);
            bits[5][9] = 1;
            sleep(10, 8);
            copy(16, 5);
            var_10 += 03;
            copy(5, 16);
            if ()
            {
                work_copy(5, 2, 0);
                se_on(2, 11, 3, 0, 0, 0);
                copy(16, 6);
                var_10 &= 0F;
                copy(7, 16);
                evt_exec(255, I_GOSUB, main_0D);
                main_0F();
                work_copy(5, 2, 0);
                bits[5][0] = 1;
            }
            else
            {
                se_on(3, 0, 3, 0, 0, 0);
            }
            member_copy(16, 23);
            var_10 &= F0;
            member_set2(23, 16);
            do
            {
                evt_next();
            } while (&23 != 0);
        }
        bits[5][9] = 0;
    }
    return 0;
}

    main_08()
    {
        if (arr[11] >= 1)
        {
            switch (var_0B)
            {
            case 1:
                save(11, 2253);
                break;
            case 2:
                save(11, 2445);
                break;
            case 3:
                save(11, 2893);
                break;
            case 4:
                save(11, 2125);
                break;
            case 5:
                save(11, 2125);
                break;
            case 6:
                save(11, 2253);
                break;
            }
        }
        else
        {
            evt_next();
            goto off_1F04;
        }
        work_set(WK_SPLAYER, 0);
        work_copy(11, 4, 1);
        plc_dest(0, 21, 33, 0, 30);
        do
        {
            evt_next();
        } while (bits[5][33] == 0);
        save(11, 0);
        return 0;
    }

    main_09()
    {
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 10, 8);
        evt_next();
        se_on(2, 13, 2, 0, 0, 0);
        sce_espr_on(0, 24, 171, 3584, 138, 615, 8, 0);
        sce_espr_on(0, 2563, 171, 3584, 138, 615, 8, 0);
        sleep(10, 3);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        work_copy(10, 14, 1);
        sce_espr_on(0, 2, 171, 1792, 260, 200, 60, 0);
        return 0;
    }

    main_0A()
    {
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 12, 8);
        evt_next();
        se_on(2, 13, 2, 0, 0, 0);
        sce_espr_on(0, 24, 171, 3584, 138, 615, 8, 0);
        sce_espr_on(0, 2563, 171, 3584, 138, 615, 8, 0);
        sleep(10, 3);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        work_copy(10, 14, 1);
        sce_espr_on(0, 2, 171, 1792, 260, 200, 60, 0);
        return 0;
    }

    main_0B()
    {
        work_set(WK_SPLAYER, 0);
        plc_motion(2, 14, 8);
        evt_next();
        se_on(2, 13, 2, 0, 0, 0);
        sce_espr_on(0, 24, 171, 3584, 138, 615, 8, 0);
        sce_espr_on(0, 2563, 171, 3584, 138, 615, 8, 0);
        sleep(10, 3);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        sce_espr_on(0, 2051, 171, 2304, 260, 200, 60, 0);
        work_copy(10, 14, 1);
        sce_espr_on(0, 2, 171, 1792, 260, 200, 60, 0);
        return 0;
    }

    main_0C()
    {
        main_0E();
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 25, 0, 4096, 0, -4500, 0, 0);
        sleep(10, 5);
        copy(16, 7);
        var_10 += 12C;
        copy(7, 16);
        copy(16, 8);
        var_10 -= C8;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 25, 0, 4096, 0, -4500, 0, 0);
        sleep(10, 10);
        copy(16, 7);
        var_10 -= 1F4;
        copy(7, 16);
        copy(16, 7);
        var_10 += 1F4;
        copy(7, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 25, 0, 4096, 0, -4500, 0, 0);
        sleep(10, 30);
        return 0;
    }

    main_0D()
    {
        main_0E();
        copy(16, 7);
        var_10 -= 21C;
        copy(7, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3076, 0, 16384, 0, -4200, 0, 0);
        copy(16, 7);
        var_10 += 384;
        copy(7, 16);
        copy(16, 8);
        var_10 += 168;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3076, 0, 16384, 0, -4200, 0, 0);
        copy(16, 8);
        var_10 -= 2D0;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3076, 0, 16384, 0, -4200, 0, 0);
        sleep(10, 1);
        copy(16, 7);
        var_10 -= 384;
        copy(7, 16);
        copy(16, 8);
        var_10 += 168;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 281, 0, 8192, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
        copy(16, 7);
        var_10 += 384;
        copy(7, 16);
        copy(16, 8);
        var_10 += 168;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 281, 0, 8192, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
        copy(16, 8);
        var_10 -= 2D0;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 281, 0, 8192, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
        sleep(10, 2);
        for 3 times
        {
            copy(16, 7);
            var_10 -= 384;
            copy(7, 16);
            copy(16, 8);
            var_10 += 168;
            copy(8, 16);
            work_copy(8, 16, 1);
            work_copy(7, 8, 1);
            sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
            copy(16, 7);
            var_10 += 384;
            copy(7, 16);
            copy(16, 8);
            var_10 += 168;
            copy(8, 16);
            work_copy(8, 16, 1);
            work_copy(7, 8, 1);
            sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
            copy(16, 8);
            var_10 -= 2D0;
            copy(8, 16);
            work_copy(8, 16, 1);
            work_copy(7, 8, 1);
            sce_espr_on(0, 3843, 0, 16384, 0, -3900, 0, 0);
            sleep(10, 2);
        }
        copy(16, 7);
        var_10 -= 5A0;
        copy(7, 16);
        copy(16, 8);
        var_10 += 168;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        sleep(10, 3);
        copy(16, 7);
        var_10 += 21C;
        copy(7, 16);
        copy(16, 8);
        var_10 -= 21C;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        copy(16, 8);
        var_10 += 5A0;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 25, 0, 8192, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        copy(16, 7);
        var_10 += 21C;
        copy(7, 16);
        copy(16, 8);
        var_10 += 21C;
        copy(8, 16);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 25, 0, 8192, 0, -4200, 0, 0);
        work_copy(8, 16, 1);
        work_copy(7, 8, 1);
        sce_espr_on(0, 3843, 0, 16384, 0, -4200, 0, 0);
        sleep(10, 10);
        return 0;
    }

    main_0E()
    {
        switch (var_07)
        {
        case 0:
            save(7, -25056);
            save(8, -22878);
            break;
        case 1:
            save(7, -20574);
            save(8, -23130);
            break;
        case 2:
            save(7, -16020);
            save(8, -23040);
            break;
        case 3:
            save(7, -25020);
            save(8, -25344);
            break;
        case 4:
            save(7, -22014);
            save(8, -25200);
            break;
        case 5:
            save(7, -15948);
            save(8, -25596);
            break;
        }
        return 0;
    }

    main_0F()
    {
        nop_8a(0, 5, 0, 0, 0);
        nop_8b(255, 7, 0, 0, 0);
        for 2 times
        {
            sce_shake_on(0, 5);
            evt_next();
        }
        evt_next();
        for 2 times
        {
            sce_shake_on(0, 5);
            evt_next();
        }
        return 0;
    }

    main_10()
    {
        se_on(2, 10, 0, -18000, -4500, -23500);
        for 5 times
        {
            sce_shake_on(0, 5);
            evt_next();
        }
        sleep(10, 10);
        return 0;
    }

    main_11()
    {
        main_12();
        main_13();
        main_14();
        main_15();
        main_16();
        main_17();
        return 0;
    }

    main_12()
    {
        if (bits[5][3] == 1)
        {
            bits[14][2] = 0;
            bits[14][10] = 1;
        }
        return 0;
    }

    main_13()
    {
        if (bits[5][4] == 1)
        {
            bits[14][4] = 0;
            bits[14][5] = 1;
            bits[14][7] = 1;
        }
        return 0;
    }

    main_14()
    {
        if (bits[5][5] == 1)
        {
            bits[13][5] = 1;
            bits[13][6] = 1;
        }
        return 0;
    }

    main_15()
    {
        if (bits[5][6] == 1)
        {
            bits[14][1] = 0;
            bits[14][9] = 1;
        }
        return 0;
    }

    main_16()
    {
        if (bits[5][7] == 1)
        {
            bits[14][3] = 0;
            bits[14][6] = 1;
            bits[14][8] = 1;
        }
        return 0;
    }

    main_17()
    {
        if (bits[5][8] == 1)
        {
            bits[13][1] = 1;
            bits[13][2] = 1;
            bits[13][3] = 1;
            bits[13][4] = 1;
        }
        return 0;
    }

    main_18()
    {
        sce_shake_on(0, 2);
        evt_next();
        sce_shake_on(0, 2);
        evt_next();
        for 4 times
        {
            sce_shake_on(0, 1);
            evt_next();
            sce_shake_on(0, 0);
            evt_next();
            sce_shake_on(0, 255);
            evt_next();
            sce_shake_on(0, 0);
            evt_next();
        }
        sce_shake_on(0, 2);
        evt_next();
        sce_shake_on(0, 0);
        evt_next();
        return 0;
    }

    main_19()
    {
        work_set(WK_SPLAYER, 0);
        do
        {
            if (arr[26] == 1)
            {
                member_copy(16, 1);
                var_10 |= 08;
                member_set2(1, 16);
            }
            else
            {
                member_copy(16, 1);
                var_10 &= FFF7;
                member_set2(1, 16);
            }
            evt_next();
        } while (bits[5][10] == 0);
        member_copy(16, 1);
        var_10 &= FFF7;
        member_set2(1, 16);
        return 0;
    }

    main_1A()
    {
        work_set(WK_OBJECT, 0);
        pos_set(0, 800, 0, -25100);
        evt_exec(255, I_GOSUB, main_1C);
        main_24();
        work_set(WK_OBJECT, 0);
        se_on(2, 15, 4, 0, 0, 0);
        speed_set(0, 100);
        for 67 times
        {
            add_speed();
            evt_next();
        }
        speed_set(0, 80);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        speed_set(0, 80);
        for 28 times
        {
            add_speed();
            evt_next();
        }
        sce_fade_set(0, 2, 7, 255, 2);
        for 42 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_1B()
    {
        cut_chg(8);
        work_set(WK_PLAYER, 0);
        pos_set(0, -32000, -32000, -32000);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -32000, -32000, -31000);
        member_copy(16, 7);
        var_10 += 8000;
        member_set2(7, 16);
        main_1A();
        sce_fade_set(0, 2, 7, 255, 241);
        work_set(WK_OBJECT, 0);
        pos_set(0, -32000, -32000, -32000);
        work_set(WK_SPLAYER, 0);
        member_copy(16, 0);
        var_10 -= 04;
        member_set2(0, 16);
        member_copy(16, 7);
        var_10 -= 8000;
        member_set2(7, 16);
        return 0;
    }

    main_1C()
    {
        save(5, 0);
        save(11, 0);
        do
        {
            work_set(WK_OBJECT, 0);
            member_copy(16, 11);
            var_10 -= 3E80;
            copy(5, 16);
            light_kido_set(0, 20000);
            light_kido_set(1, 18000);
            light_pos_set(0, 0, 12, -900);
            light_pos_set(0, 0, 13, -23800);
            work_copy(5, 4, 1);
            light_pos_set(0, 0, 11, 0);
            light_pos_set(0, 1, 12, -4500);
            light_pos_set(0, 1, 13, -23800);
            work_copy(5, 4, 1);
            light_pos_set(0, 1, 11, 0);
            copy(16, 5);
            var_10 -= 9C4;
            copy(11, 16);
            evt_next();
        } while (arr[26] == 8);
    }
    return 0;
}

    main_1D()
    {
        work_set(WK_OBJECT, 0);
        pos_set(0, -2800, 0, -13300);
        evt_exec(255, I_GOSUB, main_1F);
        main_23();
        work_set(WK_OBJECT, 0);
        se_on(2, 17, 4, 0, 0, 0);
        speed_set(0, 80);
        for 10 times
        {
            add_speed();
            evt_next();
        }
        speed_set(0, 90);
        for 28 times
        {
            add_speed();
            evt_next();
        }
        speed_set(0, 100);
        for 67 times
        {
            add_speed();
            evt_next();
        }
        sce_fade_set(0, 2, 7, 255, 2);
        for 42 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_1E()
    {
        cut_chg(9);
        work_set(WK_PLAYER, 0);
        pos_set(0, -32000, -32000, -32000);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -32000, -32000, -31000);
        member_copy(16, 7);
        var_10 += 8000;
        member_set2(7, 16);
        main_1D();
        sce_fade_set(0, 2, 7, 255, 241);
        work_set(WK_OBJECT, 0);
        pos_set(0, -32000, -32000, -32000);
        work_set(WK_SPLAYER, 0);
        member_copy(16, 7);
        var_10 -= 8000;
        member_set2(7, 16);
        return 0;
    }

    main_1F()
    {
        save(5, 0);
        save(11, 0);
        do
        {
            work_set(WK_OBJECT, 0);
            member_copy(16, 11);
            var_10 -= 3E80;
            copy(5, 16);
            light_kido_set(0, 20000);
            light_kido_set(1, 18000);
            light_pos_set(0, 0, 12, -900);
            light_pos_set(0, 0, 13, -12000);
            work_copy(5, 4, 1);
            light_pos_set(0, 0, 11, 0);
            light_pos_set(0, 1, 12, -4500);
            light_pos_set(0, 1, 13, -12000);
            work_copy(5, 4, 1);
            light_pos_set(0, 1, 11, 0);
            copy(16, 5);
            var_10 -= 9C4;
            copy(11, 16);
            evt_next();
        } while (arr[26] == 9);
    }
    save(5, 0);
    save(11, 0);
    return 0;
}

    main_20()
    {
        while (
        {
            nop_8c(0, 100, 0, 20, 0, 20, 0);
            nop_8c(0, 100, 0, 10, 0, 40, 0);
            sleep(10, 60);
        }
        return 0;
    }

    main_21()
    {
        nop_8c(0, 200, 100, 20, 0, 0, 0);
        nop_8c(0, 250, 0, 10, 0, 12, 0);
        return 0;
    }

    main_22()
    {
        nop_8c(0, 150, 0, 20, 0, 0, 0);
        nop_8c(0, 150, 0, 10, 0, 12, 0);
        return 0;
    }

    main_23()
    {
        nop_8b(80, 5, 0, 0, 0);
        nop_8c(0, 50, 60, 30, 0, 0, 0);
        nop_8c(0, 60, 30, 40, 0, 20, 0);
        nop_8c(0, 30, 60, 40, 0, 50, 0);
        nop_8c(0, 60, 40, 30, 0, 80, 0);
        nop_8c(0, 40, 60, 30, 0, 100, 0);
        nop_8c(0, 60, 40, 30, 0, 120, 0);
        nop_8c(0, 60, 0, 27, 0, 140, 0);
        return 0;
    }

    main_24()
    {
        nop_8b(80, 5, 0, 0, 0);
        nop_8c(0, 50, 60, 30, 0, 0, 0);
        nop_8c(0, 60, 40, 30, 0, 20, 0);
        nop_8c(0, 40, 60, 30, 0, 40, 0);
        nop_8c(0, 60, 30, 30, 0, 60, 0);
        nop_8c(0, 30, 60, 30, 0, 80, 0);
        nop_8c(0, 60, 30, 20, 0, 90, 0);
        nop_8c(0, 30, 60, 20, 0, 100, 0);
        nop_8c(0, 60, 0, 27, 0, 120, 0);
        return 0;
    }
}
