.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -1291, 12945, 4300, 1800, -19503, -1800, -26477, 3112, 3, 7, 5, 1, 21, 3, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -12491, -345, 1160, 2400, -9093, -1800, -857, 2064, 3, 10, 8, 1, 28, 1, 0, 0, UNLOCKED, 0);
        aot_set(12, SCE_SAVE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -8700, -1985, 1300, 1800, 7, 0, 0, 0, 0, 0);
        aot_set(10, SCE_STATUS, SAT_PL | SAT_MANUAL | SAT_UNDER, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(0, 1, 130, 4, 4, 1, 4, 10, 26, -9800, -1320, -3700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 0, 0, -20000, 0, 0, 0, -1024, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 0, 20000, 20000, 20000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(3, 0, 0, 0, 0, 1, 0, 10, 16, -6067, -1800, 2410, 0, -640, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(4, 0, 0, 0, 0, 1, 0, 10, 16, -5117, -1800, 2410, 0, -1728, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(7, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -6567, 1910, 1000, 1000, ITEM_HERBG, 1, 149, 3, 1);
        item_aot_set(8, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -5617, 1910, 1000, 1000, ITEM_HERBG, 1, 150, 4, 1);
        obj_model_set(5, 0, 0, 0, 0, 1, 0, 10, 16, -7017, -2450, -990, 0, -3776, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (game.player == 0)
        {
            item_aot_set(9, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -7400, -1890, 1300, 1700, ITEM_SHOTGUNAMMO, 7, 185, 5, 0);
        }
        else
        {
            item_aot_set(9, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -7400, -1890, 1300, 1700, ITEM_FLAMEROUNDS, 6, 185, 5, 0);
        }
        if (game.difficult == 1)
        {
            obj_model_set(7, 0, 0, 0, 0, 1, 0, 10, 16, -9650, -1500, -1835, 0, -3776, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(2, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -8000, -1285, 800, 1100, ITEM_INKRIBBON, 3, 214, 7, 0);
        }
        return 0;
    }
}

main
{
    main_00()
    {
        if (bits[1][3] == 1)
        {
            if (game.last_room == 0x407)
            {
                sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 4, 1, 31, 0, 255, -697, -1800, 12829, 784, 0, 0);
            }
            else
            {
                sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 4, 1, 31, 0, 255, -8414, -1800, 1465, -88, 0, 0);
            }
        }
        main_02();
        main_11();
        if (bits[4][30] == 0)
        {
            cut_be_set(0, 1, 0);
            cut_be_set(0, 2, 1);
            cut_be_set(3, 2, 1);
            cut_be_set(8, 1, 0);
            cut_be_set(8, 2, 0);
            cut_be_set(8, 3, 1);
            cut_be_set(8, 4, 1);
            sca_id_set(0, 0, 222);
            sca_id_set(22, 0, 254);
            sca_id_set(23, 0, 254);
            sca_id_set(26, 0, 0);
            main_0E();
        }
        else
        {
            sca_id_set(0, 0, 0);
            cut_be_set(0, 1, 1);
            cut_be_set(0, 2, 0);
            cut_be_set(3, 2, 0);
            cut_be_set(8, 1, 1);
            cut_be_set(8, 2, 1);
            cut_be_set(8, 3, 0);
            cut_be_set(8, 4, 0);
            main_0F();
            aot_reset(28, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            aot_reset(29, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            sca_id_set(0, 0, 0);
            sca_id_set(22, 0, 0);
            sca_id_set(23, 0, 0);
            sca_id_set(26, 128, 244);
        }
        aot_set(3, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 1, 0, 8119, 1765, 2100, 2000, 10, 0, 50, 0, 1, 0);
        aot_set(4, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 1, 0, -9640, 3290, 2100, 1500, 10, 0, 50, 0, 1, 0);
        aot_set(5, SCE_FLAG_CHG, SAT_OB | SAT_UNDER, 1, 0, -4747, 3290, 11100, 2450, 10, 0, 50, 0, 0, 0);
        aot_set(20, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 0, 0, -6347, -2115, 16680, 3890, 172, 249, 0, 0, 0, 0);
        aot_set(21, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 0, 0, -4647, 1585, 10910, 1990, 172, 249, 0, 0, 0, 0);
        aot_set(22, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 0, 0, -4647, 5485, 10910, 5290, 172, 249, 0, 0, 0, 0);
        aot_set(23, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 0, 0, -11247, 7385, 8210, 6490, 172, 249, 0, 0, 0, 0);
        evt_exec(255, I_GOSUB, main_03);
        return 0;
    }

    main_01()
    {
        if (arr[2] == 50)
        {
            evt_exec(255, I_GOSUB, main_05);
        }
        return 0;
    }

    main_02()
    {
        aot_set(24, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, 8209, 5565, 2000, 5300, 30, 0, 0, 0, 0, 255);
        aot_set(25, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -9091, 4865, 2500, 2300, 30, 0, 0, 0, 0, 255);
        aot_set(26, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, 8119, 1765, 2100, 2000, 31, 0, 0, 0, 0, 255);
        aot_set(27, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -9640, 3290, 2100, 1500, 31, 0, 0, 0, 0, 255);
        aot_set(28, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, 4259, 3525, 2100, 1980, 32, 0, 0, 0, 0, 255);
        aot_set(29, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -4061, 3525, 2100, 1980, 32, 0, 0, 0, 0, 255);
        return 0;
    }

    main_03()
    {

off_2BCA:
        evt_next();
        sce_bgm_control(0, 0, 1, 71, 64);
        sce_bgm_control(0, 0, 2, 1, 64);
        sce_bgm_control(0, 0, 3, 1, 64);
        do
        {
            evt_next();
        } while (bits[1][11] == 0);
        goto off_2BCA;
        return 0;
    }

    main_04()
    {
        cut_chg(4);
        sleep(10, 60);
        cut_old();
        cut_auto(1);
        return 0;
    }

    main_05()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_PLAYER, 0);
        if (&9 == 3)
        {
            bits[5][1] = 1;
        }
        else
        {
            bits[5][1] = 0;
        }
        aot_reset(3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(4, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        evt_exec(255, I_GOSUB, main_06);
        sleep(10, 100);
        if (bits[4][30] == 0)
        {
            evt_exec(255, I_GOSUB, main_0D);
        }
        else
        {
            evt_exec(255, I_GOSUB, main_0C);
        }
        cut_chg(13);
        if (game.player == 1)
        {
            if (bits[3][35] == 1)
            {
                work_set(WK_ENEMY, 0);
                pos_set(0, 5363, -1800, 13097);
            }
        }
        bits[1][28] = 1;
        sleep(10, 8);
        bits[1][28] = 0;
        while (
        {
            sleep(10, 1);
        }
        if (bits[4][30] == 0)
        {
            bits[4][30] = 1;
            cut_be_set(0, 1, 1);
            cut_be_set(0, 2, 0);
            cut_be_set(3, 2, 0);
            cut_be_set(8, 1, 1);
            cut_be_set(8, 2, 1);
            cut_be_set(8, 3, 0);
            cut_be_set(8, 4, 0);
            sca_id_set(0, 0, 0);
            sca_id_set(22, 0, 0);
            sca_id_set(23, 0, 0);
            sca_id_set(26, 128, 244);
            if (bits[5][1] == 1)
            {
                cut_chg(1);
            }
            else
            {
                cut_chg(3);
            }
            if (game.scenario == 1)
            {
                if (bits[3][35] == 1)
                {
                    work_set(WK_ENEMY, 0);
                    pos_set(0, 5463, -1800, 11997);
                }
            }
            bits[1][28] = 1;
            sleep(10, 8);
            bits[1][28] = 0;
            sleep(10, 20);
            aot_reset(28, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            aot_reset(29, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        }
        else
        {
            bits[4][30] = 0;
            cut_be_set(0, 1, 0);
            cut_be_set(0, 2, 1);
            cut_be_set(3, 2, 1);
            cut_be_set(8, 1, 0);
            cut_be_set(8, 2, 0);
            cut_be_set(8, 3, 1);
            cut_be_set(8, 4, 1);
            sca_id_set(0, 0, 222);
            sca_id_set(22, 0, 254);
            sca_id_set(23, 0, 254);
            sca_id_set(26, 0, 0);
            cut_chg(4);
            bits[1][28] = 1;
            sleep(10, 8);
            bits[1][28] = 0;
            sleep(10, 20);
            if (bits[5][1] == 1)
            {
                cut_chg(5);
            }
            else
            {
                cut_chg(7);
            }
            if (game.scenario == 1)
            {
                if (bits[3][35] == 1)
                {
                    work_set(WK_ENEMY, 0);
                    pos_set(0, 5463, -1800, 11997);
                }
            }
            aot_reset(28, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 32, 0, 0, 0, 0, 255);
            aot_reset(29, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 32, 0, 0, 0, 0, 255);
        }
        cut_auto(1);
        aot_reset(3, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 10, 0, 50, 0, 1, 0);
        aot_reset(4, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 10, 0, 50, 0, 1, 0);
        sleep(10, 30);
        bits[2][7] = 0;
        game.cutscene = 0;
        aot_on(10);
        evt_next();
        bits[5][3] = 1;
        return 0;
    }

    main_06()
    {
        work_set(WK_PLAYER, 0);
        bits[5][2] = 0;
        evt_exec(255, I_GOSUB, main_07);
        bits[5][3] = 0;
        nop_8c(0, 90, 110, 12, 0, 80, 0);
        if (bits[5][1] == 1)
        {
            evt_exec(255, I_GOSUB, main_08);
        }
        else
        {
            evt_exec(255, I_GOSUB, main_09);
        }
        sleep(10, 10);
        sleep(10, 10);
        do
        {
            evt_next();
        } while (bits[5][2] == 0);
        return 0;
    }

    main_07()
    {
        work_set(WK_PLAYER, 0);
        if (game.player == 1)
        {
            if (bits[5][1] == 1)
            {
                pos_set(0, 7634, -1800, 3029);
                member_set(15, 0, 0);
            }
            else
            {
                pos_set(0, -7004, -1800, 3595);
                member_set(15, 0, 8);
            }
        }
        else
        {
            if (bits[5][1] == 1)
            {
                pos_set(0, 7216, -1800, 2979);
                member_set(15, 0, 0);
            }
            else
            {
                pos_set(0, -6586, -1800, 3555);
                member_set(15, 0, 8);
            }
        }
        sleep(10, 20);
        if (game.player == 1)
        {
            plc_motion(0, 15, 0);
        }
        else
        {
            plc_motion(0, 15, 1);
        }
        sleep(10, 30);
        if (game.player == 1)
        {
            plc_motion(0, 16, 0);
        }
        else
        {
            plc_motion(0, 16, 1);
        }
        sleep(10, 28);
        se_on(2, 266, 1, 0, 0, 0);
        sleep(10, 22);
        sleep(10, 12);
        plc_cnt(50);
        plc_motion(0, 16, 192);
        sleep(10, 50);
        plc_cnt(30);
        plc_motion(0, 15, 192);
        sleep(10, 30);
        bits[5][2] = 1;
        plc_ret();
        return 0;
    }

    main_08()
    {
        work_set(WK_OBJECT, 1);
        pos_set(0, 8514, -3600, 3024);
        member_set(16, 0, 252);
        sleep(10, 20);
        sleep(10, 30);
        speed_set(3, 0);
        speed_set(9, 1);
        for 10 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(3, 10);
        speed_set(9, 1);
        for 5 times
        {
            add_speed();
            evt_next();
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, 2);
        for 23 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, -10);
        for 5 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        for 1 times
        {
            sleep(10, 17);
            speed_set(3, 32);
            speed_set(9, 2);
            for 10 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
            speed_set(9, -8);
            for 4 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
        }
        while (
        {
            evt_next();
        }
        pos_set(0, 0, -20000, 0);
        return 0;
    }

    main_09()
    {
        work_set(WK_OBJECT, 1);
        pos_set(0, -7884, -3600, 3600);
        member_set(14, 0, 0);
        member_set(15, 0, 0);
        member_set(16, 0, 4);
        sleep(10, 20);
        sleep(10, 30);
        speed_set(3, 0);
        speed_set(9, -1);
        for 10 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(3, -10);
        speed_set(9, -1);
        for 5 times
        {
            add_speed();
            evt_next();
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, -2);
        for 23 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, 10);
        for 5 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        for 1 times
        {
            sleep(10, 17);
            speed_set(3, -32);
            speed_set(9, -2);
            for 10 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
            speed_set(9, 8);
            for 4 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
        }
        while (
        {
            evt_next();
        }
        pos_set(0, 0, -20000, 0);
        return 0;
    }

    main_0A()
    {
        if (arr[26] == 2)
        {
            evt_exec(255, I_GOSUB, main_0B);
        }
        do
        {
            evt_next();
        } while (bits[1][11] == 0);
        goto off_303A;
        return 0;
    }

    main_0B()
    {

off_305E:
        save(4, 6000);
        for 20 times
        {
            work_copy(4, 2, 1);
            light_kido_set(0, 0);
            copy(16, 4);
            var_10 += 64;
            copy(4, 16);
        }
        for 20 times
        {
            work_copy(4, 2, 1);
            light_kido_set(0, 0);
            copy(16, 4);
            var_10 -= 64;
            copy(4, 16);
        }
        if (arr[26] == 2)
        {
            goto off_305E;
        }
        return 0;
    }

    main_0C()
    {
        work_set(WK_OBJECT, 2);
        pos_set(0, 900, -1800, 4500);
        dir_set(0, 0, -1024, 0);
        se_on(2, 15, 0, 1100, -9000, 4700);
        nop_8c(0, 170, 130, 16, 0, 0, 0);
        speed_set(1, -25);
        for 16 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -3);
        nop_8c(0, 120, 140, 8, 0, 0, 0);
        nop_8c(0, 140, 120, 8, 0, 8, 0);
        nop_8c(0, 120, 140, 8, 0, 16, 0);
        nop_8c(0, 140, 120, 8, 0, 24, 0);
        nop_8c(0, 120, 140, 8, 0, 32, 0);
        nop_8c(0, 140, 120, 8, 0, 40, 0);
        nop_8c(0, 120, 140, 8, 0, 48, 0);
        nop_8c(0, 140, 120, 8, 0, 56, 0);
        nop_8c(0, 120, 140, 8, 0, 64, 0);
        nop_8c(0, 140, 120, 8, 0, 72, 0);
        nop_8c(0, 120, 140, 8, 0, 80, 0);
        nop_8c(0, 140, 120, 8, 0, 88, 0);
        nop_8c(0, 120, 140, 8, 0, 96, 0);
        nop_8c(0, 140, 120, 8, 0, 104, 0);
        nop_8c(0, 120, 140, 8, 0, 112, 0);
        nop_8c(0, 140, 120, 8, 0, 120, 0);
        nop_8c(0, 120, 140, 8, 0, 128, 0);
        nop_8c(0, 140, 120, 8, 0, 136, 0);
        nop_8c(0, 120, 140, 8, 0, 144, 0);
        nop_8c(0, 140, 120, 8, 0, 152, 0);
        for 20 times
        {
            speed_set(10, -1);
            for 2 times
            {
                add_speed();
                add_aspeed();
                evt_next();
                add_speed();
                evt_next();
            }
            speed_set(10, 1);
            for 2 times
            {
                add_speed();
                add_aspeed();
                evt_next();
                add_speed();
                evt_next();
            }
        }
        speed_set(4, 0);
        bits[5][31] = 1;
        nop_8c(0, 160, 200, 2, 0, 0, 0);
        nop_8c(0, 200, 160, 4, 0, 2, 0);
        main_0E();
        evt_next();
        bits[5][31] = 0;
        se_on(2, 270, 0, 900, -9000, 4500);
        pos_set(0, 20000, 20000, 20000);
        return 0;
    }

    main_0D()
    {
        work_set(WK_OBJECT, 2);
        se_on(2, 15, 0, 1100, -9000, 4700);
        pos_set(0, 900, -9000, 4500);
        dir_set(0, 0, -2048, 0);
        speed_set(1, 25);
        nop_8c(0, 170, 130, 16, 0, 0, 0);
        for 16 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, 3);
        nop_8c(0, 120, 140, 8, 0, 0, 0);
        nop_8c(0, 140, 120, 8, 0, 8, 0);
        nop_8c(0, 120, 140, 8, 0, 16, 0);
        nop_8c(0, 140, 120, 8, 0, 24, 0);
        nop_8c(0, 120, 140, 8, 0, 32, 0);
        nop_8c(0, 140, 120, 8, 0, 40, 0);
        nop_8c(0, 120, 140, 8, 0, 48, 0);
        nop_8c(0, 140, 120, 8, 0, 56, 0);
        nop_8c(0, 120, 140, 8, 0, 64, 0);
        nop_8c(0, 140, 120, 8, 0, 72, 0);
        nop_8c(0, 120, 140, 8, 0, 80, 0);
        nop_8c(0, 140, 120, 8, 0, 88, 0);
        nop_8c(0, 120, 140, 8, 0, 96, 0);
        nop_8c(0, 140, 120, 8, 0, 104, 0);
        nop_8c(0, 120, 140, 8, 0, 112, 0);
        nop_8c(0, 140, 120, 8, 0, 120, 0);
        nop_8c(0, 120, 140, 8, 0, 128, 0);
        nop_8c(0, 140, 120, 8, 0, 136, 0);
        nop_8c(0, 120, 140, 8, 0, 144, 0);
        nop_8c(0, 140, 120, 8, 0, 152, 0);
        for 20 times
        {
            speed_set(10, 1);
            for 2 times
            {
                add_speed();
                add_aspeed();
                evt_next();
                add_speed();
                evt_next();
            }
            speed_set(10, -1);
            for 2 times
            {
                add_speed();
                add_aspeed();
                evt_next();
                add_speed();
                evt_next();
            }
        }
        speed_set(4, 0);
        bits[5][31] = 1;
        nop_8c(0, 160, 220, 2, 0, 0, 0);
        nop_8c(0, 220, 140, 10, 0, 2, 0);
        main_0F();
        evt_next();
        bits[5][31] = 0;
        se_on(2, 272, 0, 900, -1800, 4500);
        sce_espr_on(0, 26, 0, 8192, 4800, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, 4800, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, 3800, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, 3800, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, 2800, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, 2800, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, 1800, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, 1800, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, 800, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, 800, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, -200, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, -200, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, -1200, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, -1200, -1800, 3600, 0);
        sce_espr_on(0, 26, 0, 8192, -2200, -1800, 5200, 2048);
        sce_espr_on(0, 26, 0, 8192, -2200, -1800, 3600, 0);
        evt_exec(255, I_GOSUB, main_10);
        pos_set(0, 20000, 20000, 20000);
        return 0;
    }

    main_0E()
    {
        if (bits[5][9] == 1)
        {
            sce_espr_kill(22, 20, 0, 0);
            evt_next();
        }
        bits[5][9] = 1;
        sce_espr3d_on(0, 1046, 0, 4096, 9000, -4700, 3200, 0, 3072, 0, 0);
        sce_espr3d_on(0, 1046, 0, 4096, -8600, -4700, 3900, 0, 1024, 0, 0);
        return 0;
    }

    main_0F()
    {
        if (bits[5][9] == 1)
        {
            sce_espr_kill(22, 4, 0, 0);
            evt_next();
        }
        bits[5][9] = 1;
        sce_espr3d_on(0, 5142, 0, 4096, 9000, -4700, 3200, 0, 3072, 0, 0);
        sce_espr3d_on(0, 5142, 0, 4096, -8600, -4700, 3900, 0, 1024, 0, 0);
        return 0;
    }

    main_10()
    {
        work_set(WK_OBJECT, 0);
        speed_set(1, 0);
        speed_set(7, 1);
        for 5 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        for 10 times
        {
            speed_set(7, -1);
            for 10 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
            speed_set(7, 1);
            for 10 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
        }
        speed_set(7, -1);
        for 10 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        member_set(12, 216, 250);
        return 0;
    }

    main_11()
    {
        obj_model_set(6, 0, 0, 0, 0, 1, 0, 10, 16, -1809, -1800, 12199, 0, 896, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        aot_set(11, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -2099, 11169, 770, 2060, 255, 0, I_GOSUB, main_12, 0, 0);
        return 0;
    }

    main_12()
    {
        bits[2][7] = 1;
        bits[2][2] = 1;
        bits[2][1] = 1;
        bits[2][0] = 1;
        message_on(0, 42, 0, 0, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(4, 6, 0, 0, 0, 0);
            main_13();
        }
        else
        {
            se_on(4, 5, 0, 0, 0, 0);
        }
        bits[2][0] = 0;
        bits[2][2] = 0;
        bits[2][1] = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_13()
    {
        if ()
        {
            poison_ck();
            message_on(0, 44, 0, 0, 255);
            evt_next();
            poison_clr();
        }
        else
        {
            message_on(0, 43, 0, 0, 255);
            evt_next();
        }
        return 0;
    }
}
