.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -9800, -14500, 1800, 1800, -26100, 0, -23200, 0, 6, 1, 6, 0, 26, 0, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 0, -26500, -12600, -19500, -1024, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0);
        aot_set(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27350, -27250, 1800, 1800, 255, 0, I_GOSUB, main_03, 0, 0);
        aot_set(11, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -28250, -25750, 1800, 2400, 255, 0, I_GOSUB, main_03, 0, 0);
        aot_set(2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -9800, -14500, 1800, 1800, 255, 0, I_GOSUB, main_06, 0, 0);
        aot_set(3, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -27350, -27250, 1800, 1800, 10, 0, 84, 0, 1, 0);
        aot_set(13, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -28250, -25750, 1800, 2400, 10, 0, 84, 0, 1, 0);
        aot_set(4, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -27350, -27250, 1800, 1800, 10, 0, 85, 0, 1, 0);
        aot_set(14, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -28250, -25750, 1800, 2400, 10, 0, 85, 0, 1, 0);
        item_aot_set(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -26200, -23200, 3400, 2500, ITEM_ROCKETLAUNCHER, 2, 40, 0, 1);
        if (bits[4][151] == 0)
        {
            sce_em_set(0, 255, ENEMY_ADAWONG1, 0, 2, 6, 0, 0, 255, -28000, -12600, -17900, 1600, 0, 0);
            sce_em_set(0, 0, ENEMY_TYRANT2, 0, 0, 0, 26, 0, 40, -8000, 9000, -25000, 0, 0, 0);
            work_set(WK_SPLAYER, 0);
            member_copy(16, 0);
            var_10 |= 400;
            member_set2(0, 16);
            main_11();
        }
        aot_reset(2, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        if (bits[4][136] == 1)
        {
            aot_reset(3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            aot_reset(4, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            aot_reset(13, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            aot_reset(14, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            bits[15][6] = 1;
            bits[16][1] = 1;
            bits[17][1] = 1;
        }
        else
        {
            bits[15][6] = 0;
            bits[16][1] = 0;
            bits[17][1] = 0;
        }
        aot_reset(5, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        if (bits[4][160] == 0)
        {
            evt_exec(255, I_GOSUB, main_02);
        }
        sce_espr3d_on(0, 534, 0, 3328, -26370, -1700, -26262, -256, 0, 0, 0);
        evt_exec(255, I_GOSUB, main_09);
        main_13();
        return 0;
    }

    main_01()
    {
        if (bits[1][11] == 1)
        {
            main_13();
        }
        if (bits[4][136] == 0)
        {
            if (arr[2] == 84)
            {
                if ()
                {
                    keep_item_ck(84);
                    keep_item_ck(85);
                    evt_exec(255, I_GOSUB, main_04);
                }
                else
                {
                    evt_exec(255, I_GOSUB, main_05);
                }
            }
            if (arr[2] == 85)
            {
                if ()
                {
                    keep_item_ck(84);
                    keep_item_ck(85);
                    evt_exec(255, I_GOSUB, main_04);
                }
                else
                {
                    evt_exec(255, I_GOSUB, main_05);
                }
            }
        }
        if (bits[7][40] == 0 && bits[4][151] == 0 && bits[5][13] == 0)
        {
            evt_exec(255, I_GOSUB, main_0B);
        }
        if (bits[7][40] == 0 && bits[4][151] == 0 && bits[5][11] == 0)
        {
            evt_exec(255, I_GOSUB, main_0E);
        }
        if (bits[7][40] == 1 && bits[4][151] == 0 && bits[5][12] == 0)
        {
            bits[5][12] = 1;
            evt_exec(255, I_GOSUB, main_10);
        }
        return 0;
    }

    main_02()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        sleep(10, 30);
        nop_8a(0, 10, 0, 0, 0);
        nop_8b(180, 10, 0, 5, 0);
        nop_8b(250, 5, 0, 10, 0);
        bits[1][29] = 1;
        se_on(2, 17, 0, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        sleep(10, 30);
        plc_neck(2, 0, -512, -512, 60, 30);
        bits[1][29] = 0;
        sleep(10, 30);
        plc_neck(2, 0, 512, -512, 60, 30);
        wsleep();
        wsleeping();
        plc_neck(2, 0, 0, -256, 60, 30);
        sleep(10, 30);
        plc_neck(2, 0, 0, -512, 60, 30);
        bits[4][160] = 1;
        main_12();
        return 0;
    }

    main_03()
    {
        if (bits[4][136] == 0)
        {
            cut_chg(4);
            message_on(0, 0, 0, 255, 255);
            sleep(10, 1);
            cut_old();
        }
        else
        {
            if (bits[7][40] == 0)
            {
                sce_espr3d_on(0, 277, 0, 10240, -27900, -3900, -26800, -96, 288, 144, 0);
                message_on(0, 1, 0, 255, 255);
            }
            else
            {
                message_on(0, 3, 0, 255, 255);
            }
            sleep(10, 1);
        }
        return 0;
    }

    main_04()
    {
        cut_chg(4);
        se_on(2, 10, 0, 0, 0, 0);
        bits[4][136] = 1;
        bits[15][6] = 1;
        bits[16][1] = 1;
        bits[17][1] = 1;
        sce_item_lost(84);
        sce_item_lost(85);
        aot_reset(3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(4, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(13, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(14, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[2][7] = 1;
        sleep(10, 10);
        se_on(2, 12, 0, 0, 0, 0);
        sleep(10, 20);
        cut_chg(3);
        bits[2][7] = 0;
        sce_espr3d_on(0, 21, 0, 10240, -27900, -3900, -26800, -96, 288, 144, 0);
        sce_espr3d_on(0, 2070, 0, 10240, -27900, -3900, -26800, -96, 288, 144, 0);
        se_on(2, 19, 0, 0, 0, 0);
        message_on(0, 1, 0, 255, 239);
        sleep(10, 1);
        sce_espr_kill(21, 0, 0, 0);
        sce_espr_kill(22, 8, 0, 0);
        sleep(10, 1);
        aot_reset(2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_06, 0, 0);
        aot_reset(0, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        cut_replace(0, 12);
        cut_replace(1, 13);
        cut_replace(2, 14);
        cut_replace(3, 15);
        cut_chg(15);
        se_on(2, 11, 0, 0, 0, 0);
        cut_auto(1);
        bits[2][7] = 1;
        evt_exec(255, I_GOSUB, main_07);
        return 0;
    }

    main_05()
    {
        sce_espr3d_on(0, 21, 0, 10240, -27900, -3900, -26800, -96, 288, 144, 0);
        sce_espr3d_on(0, 22, 0, 10240, -27900, -3900, -26800, -96, 288, 144, 0);
        se_on(2, 18, 0, 0, 0, 0);
        message_on(0, 4, 0, 255, 239);
        sleep(10, 1);
        sce_espr_kill(21, 0, 0, 0);
        sce_espr_kill(22, 0, 0, 0);
        return 0;
    }

    main_06()
    {
        message_on(0, 2, 0, 255, 255);
        se_on(2, 22, 0, 0, 0, 0);
        return 0;
    }

    main_07()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_PLAYER, 0);
        plc_dest(0, 21, 33, 2048, 128);
        plc_neck(2, 0, -512, -512, 60, 30);
        sleep(10, 30);
        plc_neck(2, 0, 512, -512, 60, 30);
        sleep(10, 30);
        plc_neck(2, 0, 0, -256, 60, 30);
        sleep(10, 30);
        plc_neck(0, 0, 0, 0, 60, 30);
        work_set(WK_ENEMY, 0);
        pos_set(0, -19800, 0, -19600);
        dir_set(0, 0, 1400, 0);
        member_set(39, 168, 178);
        member_set(40, 112, 179);
        work_set(WK_ENEMY, 0);
        member_set(23, 1, 0);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_08);
        sce_bgm_control(0, 2, 0, 0, 0);
        nop_8a(0, 8, 0, 0, 0);
        nop_8b(180, 1, 0, 0, 0);
        nop_8b(250, 5, 0, 1, 0);
        se_on(2, 13, 0, 0, 0, 0);
        bits[1][28] = 1;
        sleep(10, 20);
        bits[1][28] = 0;
        cut_chg(5);
        work_set(WK_PLAYER, 0);
        pos_set(0, -24500, 0, -25400);
        dir_set(0, 0, 2048, 0);
        plc_dest(0, 21, 33, 3600, 128);
        work_set(WK_ENEMY, 0);
        pos_set(0, -18000, 0, -18000);
        dir_set(0, 0, 1400, 0);
        member_set(39, 176, 185);
        member_set(40, 176, 185);
        sleep(10, 60);
        cut_chg(6);
        work_set(WK_ENEMY, 0);
        member_set(23, 2, 0);
        bits[1][4] = 0;
        sleep(10, 1);
        xa_on(0, 5);
        sleep(10, 160);
        sleep(10, 40);
        sleep(10, 90);
        wsleep();
        wsleeping();
        bits[1][4] = 1;
        work_set(WK_ENEMY, 0);
        member_set(23, 3, 0);
        cut_chg(15);
        evt_exec(255, I_GOSUB, main_0A);
        sce_bgm_control(2, 1, 0, 0, 0);
        main_12();
        return 0;
    }

    main_08()
    {
        sleep(10, 15);
        se_on(2, 16, 0, 0, 0, 0);
        sce_espr_on(0, 3354, 0, 12288, -11500, -1000, -23000, 0);
        sce_espr_on(0, 3354, 0, 8192, -12100, 300, -22000, 0);
        sce_espr_on(0, 3354, 0, 8192, -12500, 300, -23000, 0);
        sce_espr_on(0, 3354, 0, 8192, -12500, 300, -24000, 0);
        return 0;
    }

    main_09()
    {
        copy(16, 29);
        var_10 %= 05;
        copy(11, 16);
        copy(16, 11);
        var_10 += 05;
        copy(11, 16);
        for 11 times
        {
            sleep(10, 10);
        }
        sleep(10, 90);
        if (bits[5][20] == 0)
        {
            sce_espr_on(0, 3354, 0, 12288, -24000, 500, -13500, 0);
            se_on(2, 16, 0, 0, 0, 0);
            bits[1][28] = 1;
            nop_8a(0, 8, 0, 0, 0);
            nop_8b(90, 1, 0, 0, 0);
            nop_8b(150, 5, 0, 1, 0);
        }
        copy(16, 29);
        var_10 %= 05;
        copy(11, 16);
        copy(16, 11);
        var_10 += 05;
        copy(11, 16);
        for 11 times
        {
            sleep(10, 4);
        }
        if (bits[5][20] == 0)
        {
            se_on(2, 17, 0, 0, 0, 0);
        }
        sleep(10, 30);
        bits[1][28] = 0;
        evt_exec(255, I_GOSUB, main_09);
        return 0;
    }

    main_0A()
    {
        sleep(10, 1800);
        bits[5][15] = 1;
        return 0;
    }

    main_0B()
    {
        work_set(WK_ENEMY, 0);
        if (&25 == 1 && &26 == 1)
        {
            bits[5][13] = 1;
            evt_exec(255, I_GOSUB, main_0C);
        }
        if (bits[5][15] == 1 && &26 == 1 && bits[5][13] == 0)
        {
            bits[5][13] = 1;
            evt_exec(255, I_GOSUB, main_0C);
        }
        return 0;
    }

    main_0C()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_ENEMY, 0);
        member_set(7, 0, 128);
        copy(4, 26);
        work_set(WK_PLAYER, 0);
        member_copy(5, 11);
        member_copy(6, 13);
        member_copy(7, 15);
        work_set(WK_ENEMY, 0);
        member_copy(8, 11);
        member_copy(9, 13);
        member_copy(10, 15);
        cut_chg(7);
        work_set(WK_OBJECT, 0);
        super_set(0, 129, 138, 0, 600, -50, -896, 0, 1024);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -28000, -7500, -17900);
        dir_set(0, 0, 3700, 0);
        plc_motion(10, 18, 64);
        sleep(10, 1);
        plc_dest(0, 20, 0, 0, 0);
        xa_on(0, 0);
        message_on(0, 5, 0, 0, 0);
        sleep(10, 30);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -28000, -7500, -17900);
        dir_set(0, 0, 3700, 0);
        plc_motion(10, 18, 64);
        sleep(10, 20);
        work_set(WK_OBJECT, 0);
        super_reset(0, -1216, 576, 1024);
        evt_exec(255, I_GOSUB, main_0D);
        wsleep();
        wsleeping();
        do
        {
            evt_next();
        } while (bits[5][14] == 0);
        sleep(10, 15);
        work_set(WK_PLAYER, 0);
        pos_set(0, -18600, 0, -21700);
        dir_set(0, 0, -1800, 0);
        work_set(WK_ENEMY, 0);
        pos_set(0, -8000, 0, -25000);
        dir_set(0, 0, 0, 0);
        cut_chg(11);
        sleep(10, 1);
        if (game.player == 0)
        {
            xa_on(0, 1);
            message_on(0, 6, 0, 0, 0);
        }
        else
        {
            xa_on(0, 1);
            message_on(0, 8, 0, 0, 0);
        }
        work_set(WK_PLAYER, 0);
        plc_neck(2, 0, 0, -700, 60, 30);
        plc_motion(0, 17, 64);
        work_set(WK_SPLAYER, 0);
        plc_dest(0, 21, 35, 1600, 96);
        wsleep();
        wsleeping();
        work_copy(4, 1, 0);
        cut_chg(0);
        aot_reset(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 17, 0, 2, 0, 40, 0);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -28000, -12600, -17900);
        dir_set(0, 0, 1600, 0);
        work_set(WK_ENEMY, 0);
        member_copy(16, 7);
        var_10 &= 7FFF;
        member_set2(7, 16);
        work_set(WK_PLAYER, 0);
        member_set2(11, 5);
        member_set2(13, 6);
        member_set2(15, 7);
        member_set2(39, 5);
        member_set2(40, 6);
        work_set(WK_ENEMY, 0);
        member_set2(11, 8);
        member_set2(13, 9);
        member_set2(15, 10);
        member_set2(39, 8);
        member_set2(40, 9);
        sleep(10, 1);
        main_12();
        return 0;
    }

    main_0D()
    {
        work_set(WK_OBJECT, 0);
        speed_set(2, 10);
        speed_set(1, 20);
        speed_set(0, 25);
        speed_set(8, 0);
        speed_set(7, 20);
        speed_set(6, 5);
        do
        {
            evt_next();
            add_speed();
            add_aspeed();
        } while (&12 < -800);
    }
    bits[5][14] = 1;
    se_on(2, 14, 0, 0, 0, 0);
    work_set(WK_OBJECT, 0);
    pos_set(0, -24650, 0, -22000);
    dir_set(0, -1024, 0, 1024);
    member_set(10, 16, 0);
    return 0;
}

    main_0E()
    {
        work_set(WK_ENEMY, 0);
        if (&24 == 1)
        {
            bits[5][11] = 1;
            evt_exec(255, I_GOSUB, main_0F);
        }
        return 0;
    }

    main_0F()
    {
        sce_bgm_control(2, 2, 0, 0, 0);
        bits[5][20] = 1;
        bits[1][4] = 0;
        sleep(10, 15);
        if (game.player == 0)
        {
            xa_on(0, 2);
            message_on(0, 7, 0, 0, 0);
        }
        else
        {
            xa_on(0, 2);
            message_on(0, 9, 0, 0, 0);
        }
        wsleep();
        wsleeping();
        work_set(WK_ENEMY, 0);
        member_set(24, 2, 0);
        sleep(10, 32);
        sleep(10, 5);
        work_set(WK_ENEMY, 0);
        member_set(24, 3, 0);
        return 0;
    }

    main_10()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[5][20] = 0;
        work_set(WK_ENEMY, 0);
        member_set(24, 4, 0);
        sleep(10, 1);
        bits[2][7] = 1;
        sleep(10, 60);
        cut_replace(12, 0);
        cut_replace(13, 1);
        cut_replace(14, 2);
        cut_replace(15, 3);
        bits[1][4] = 1;
        sce_bgm_control(0, 1, 0, 0, 0);
        sce_bgmtbl_set(0, 2, 7, 12049, 32768);
        sce_bgmtbl_set(0, 3, 7, 11299, 32832);
        se_on(2, 11, 0, 0, 0, 0);
        if (arr[26] == 12)
        {
            cut_chg(0);
        }
        if (arr[26] == 13)
        {
            cut_chg(1);
        }
        if (arr[26] == 14)
        {
            cut_chg(2);
        }
        if (arr[26] == 15)
        {
            cut_chg(3);
        }
        aot_reset(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 12, 154, 0, 0, 96, 165);
        aot_reset(2, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[4][151] = 1;
        sce_bgm_control(1, 1, 1, 127, 64);
        sce_bgm_control(1, 0, 1, 127, 64);
        main_12();
        return 0;
    }

    main_11()
    {
        save(11, 0);
        for 15 times
        {
            work_copy(11, 2, 0);
            parts_set(0, 0, 0, 8224);
            work_copy(11, 2, 0);
            parts_set(0, 0, 1, 32);
            copy(16, 11);
            var_10 += 01;
            copy(11, 16);
        }
        return 0;
    }

    main_12()
    {
        work_set(WK_PLAYER, 0);
        plc_ret();
        bits[2][7] = 0;
        game.cutscene = 0;
        cut_auto(1);
        return 0;
    }

    main_13()
    {
        if (bits[4][151] == 0)
        {
            switch (var_1A)
            {
            case 0:
            case 1:
                sce_bgm_control(1, 0, 1, 60, 64);
                break;
            case 2:
                sce_bgm_control(1, 0, 1, 70, 64);
                break;
            case 3:
                sce_bgm_control(1, 0, 1, 80, 64);
                break;
            case 4:
                sce_bgm_control(1, 0, 1, 90, 64);
                break;
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
                sce_bgm_control(1, 2, 1, 0, 64);
                break;
            }
        }
        return 0;
        db(0x39, 0x39);
    }
}
