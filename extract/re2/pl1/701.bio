.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -5647, -9132, 1520, 2100, -4168, 0, -8105, 0, 6, 0, 5, 0, 46, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27827, -24132, 1530, 2510, -10020, 0, -13773, 2068, 6, 2, 0, 0, 26, 1, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        main_02();
        return 0;
    }

    main_01()
    {
        main_03();
        return 0;
    }

    main_02()
    {
        aot_set(3, SCE_ITEMBOX, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -30699, -4614, 1800, 2260, 0, 0, 1, 0, 0, 0);
        item_aot_set(4, SCE_ITEM, SAT_AUTO, 0, 0, 0, 0, 1, 1, ITEM_JOINTPLUGBLUE, 1, 34, 255, 0);
        item_aot_set(5, SCE_ITEM, SAT_AUTO, 0, 0, 0, 0, 1, 1, ITEM_JOINTPLUGRED, 1, 39, 255, 0);
        aot_set(8, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -6161, -19655, 1800, 1800, 255, 0, I_GOSUB, main_04, 0, 0);
        aot_set(9, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -5061, -21792, 1710, 1960, 255, 0, I_GOSUB, main_0C, 0, 0);
        aot_set(11, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -31834, -6844, 1800, 2400, 1, 0, 0, 0, 255, 255);
        if (bits[4][183] == 0)
        {
            aot_set_4p(10, SCE_EVENT, SAT_PL | SAT_UNDER, 0, 0, -11011, -10597, -8211, -1097, -4511, -997, -8711, -12697, 255, 0, I_GOSUB, main_0D, 0, 0);
        }
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 16, -30540, -1440, -3210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -3456, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -3186, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -2916, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -2646, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(6, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -2376, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(7, 0, 0, 0, 0, 0, 0, 10, 16, -4464, -2106, -20700, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (bits[4][144] == 1)
        {
            work_set(WK_OBJECT, 2);
            pos_set(0, -4464, -23456, -20700);
            work_set(WK_OBJECT, 3);
            pos_set(0, -4464, -23186, -20700);
            work_set(WK_OBJECT, 4);
            pos_set(0, -4464, -22916, -20700);
            work_set(WK_OBJECT, 5);
            pos_set(0, -4464, -22646, -20700);
            work_set(WK_OBJECT, 6);
            pos_set(0, -4464, -22376, -20700);
            work_set(WK_OBJECT, 7);
            pos_set(0, -4464, -22106, -20700);
        }
        if (bits[34][34] == 0)
        {
            bits[22][3] = 0;
            bits[21][3] = 0;
        }
        if (bits[34][39] == 0)
        {
            bits[22][4] = 0;
            bits[21][6] = 0;
        }
        bits[14][3] = 0;
        bits[21][5] = 0;
        sce_espr3d_on(0, 22, 0, 3840, -5200, -1656, -18700, 0, 1024, 0, 0);
        return 0;
    }

    main_03()
    {
        return 0;
    }

    main_04()
    {
        if (bits[4][144] == 0)
        {
            message_on(0, 0, 0, 255, 255);
            evt_next();
            if (input.question == 0)
            {
                bits[4][144] = 1;
                evt_exec(255, I_GOSUB, main_05);
            }
        }
        return 0;
    }

    main_05()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_OBJECT, 2);
        pos_set(0, -4464, -3456, -20700);
        work_set(WK_OBJECT, 3);
        pos_set(0, -4464, -3186, -20700);
        work_set(WK_OBJECT, 4);
        pos_set(0, -4464, -2916, -20700);
        work_set(WK_OBJECT, 5);
        pos_set(0, -4464, -2646, -20700);
        work_set(WK_OBJECT, 6);
        pos_set(0, -4464, -2376, -20700);
        work_set(WK_OBJECT, 7);
        pos_set(0, -4464, -2106, -20700);
        se_on(2, 266, 1, 0, 0, 0);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_06);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_07);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_08);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_09);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_0A);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_0B);
        sleep(10, 30);
        work_set(WK_OBJECT, 2);
        pos_set(0, -4464, -23456, -20700);
        work_set(WK_OBJECT, 3);
        pos_set(0, -4464, -23186, -20700);
        work_set(WK_OBJECT, 4);
        pos_set(0, -4464, -22916, -20700);
        work_set(WK_OBJECT, 5);
        pos_set(0, -4464, -22646, -20700);
        work_set(WK_OBJECT, 6);
        pos_set(0, -4464, -22376, -20700);
        work_set(WK_OBJECT, 7);
        pos_set(0, -4464, -22106, -20700);
        game.cutscene = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_06()
    {
        se_on(2, 267, 516, 0, 0, 0);
        work_set(WK_OBJECT, 2);
        speed_set(2, -55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_07()
    {
        se_on(2, 267, 772, 0, 0, 0);
        work_set(WK_OBJECT, 3);
        speed_set(2, 55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_08()
    {
        se_on(2, 267, 1028, 0, 0, 0);
        work_set(WK_OBJECT, 4);
        speed_set(2, -55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_09()
    {
        se_on(2, 267, 1284, 0, 0, 0);
        work_set(WK_OBJECT, 5);
        speed_set(2, 55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_0A()
    {
        se_on(2, 267, 1540, 0, 0, 0);
        work_set(WK_OBJECT, 6);
        speed_set(2, -55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_0B()
    {
        se_on(2, 268, 1796, 0, 0, 0);
        work_set(WK_OBJECT, 7);
        speed_set(2, 55);
        for 30 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_0C()
    {
        if (bits[4][144] == 1)
        {
            if (bits[34][34] == 0)
            {
                aot_on(4);
                evt_next();
                if (bits[34][34] == 1)
                {
                    bits[22][3] = 1;
                    bits[21][3] = 1;
                }
            }
            else
            {
                if (bits[34][39] == 0)
                {
                    aot_on(5);
                    evt_next();
                    if (bits[34][39] == 1)
                    {
                        bits[22][4] = 1;
                        bits[21][6] = 1;
                    }
                }
            }
        }
        return 0;
    }

    main_0D()
    {
        aot_reset(10, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[4][183] = 1;
        game.cutscene = 1;
        bits[1][25] = 1;
        se_on(2, 269, 1, 0, 0, 0);
        bits[1][29] = 1;
        nop_8a(0, 8, 0, 0, 0);
        nop_8b(180, 1, 0, 0, 0);
        nop_8b(250, 7, 0, 1, 0);
        nop_8b(150, 20, 0, 8, 0);
        nop_8c(0, 150, 30, 30, 0, 28, 0);
        sleep(10, 3);
        bits[2][7] = 1;
        work_set(WK_PLAYER, 0);
        plc_motion(0, 15, 0);
        sleep(10, 30);
        bits[1][29] = 0;
        main_0E();
        bits[1][4] = 1;
        save(35, 300);
        sleep(10, 5);
        plc_motion(0, 16, 0);
        plc_neck(2, 0, 512, -256, 36, 36);
        sleep(10, 30);
        plc_neck(2, 0, -512, -256, 36, 36);
        sleep(10, 30);
        plc_neck(2, 0, 512, -256, 36, 36);
        sleep(10, 30);
        plc_neck(0, 0, 0, 0, 36, 36);
        wsleep();
        wsleeping();
        plc_ret();
        bits[1][25] = 0;
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_0E()
    {
        xa_on(0, 4);
        message_on(0, 2, 0, 0, 0);
        return 0;
    }
}
