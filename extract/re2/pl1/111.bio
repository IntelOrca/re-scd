.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19547, -23166, 1600, 2300, -25979, -14400, -21180, 3920, 0, 23, 3, 8, 13, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_AUTO, 0, 0, 0, 0, 0, 0, 1425, 0, -21914, 3072, 1, 25, 1, 0, 51, 8, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        item_aot_set(2, SCE_ITEM, SAT_AUTO, 0, 0, 0, 0, 0, 0, ITEM_JAGUARSTONER, 1, 55, 9, 0);
        aot_set(4, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 3, 0, -22454, -30032, 1800, 1300, 255, 0, I_GOSUB, main_05, 0, 0);
        aot_set(5, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 3, 0, -27647, -29066, 1340, 2100, 255, 0, I_GOSUB, main_16, 0, 0);
        aot_set(6, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 3, 0, -22454, -30032, 1800, 1300, 10, 0, 74, 0, 1, 0);
        aot_set(7, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -24054, -17172, 1800, 1800, 10, 0, 67, 0, 1, 0);
        aot_set(8, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -24054, -17172, 1800, 1800, 0, 0, 0, 0, 255, 255);
        aot_set(9, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -21023, -18894, 2500, 2200, 1, 0, 0, 0, 255, 255);
        aot_set(10, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19582, -21069, 1800, 1840, 2, 0, 0, 0, 255, 255);
        aot_set(11, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -24908, -27676, 3600, 1800, 3, 0, 0, 0, 255, 255);
        aot_set(12, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 3, 0, -24530, -30492, 3000, 1800, 4, 0, 0, 0, 255, 255);
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 16, -25800, -5450, -17850, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 0, -24348, -6419, -29214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 0, -23053, -7324, -29214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 0, -22968, -5724, -29580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 0, -22320, -6372, -29730, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 0, -21902, -6480, -29430, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(6, 0, 0, 0, 0, 0, 0, 10, 0, -21212, -5664, -29430, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(7, 0, 0, 0, 0, 0, 0, 10, 0, -21510, -26012, -29430, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(8, 0, 0, 0, 0, 0, 0, 10, 0, -23160, -21962, -16146, 3072, 3072, 3072, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(9, 0, 0, 0, 0, 0, 0, 10, 0, -26336, -25400, -28546, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(10, 0, 0, 0, 0, 0, 0, 10, 0, -27014, -5580, -28828, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (bits[4][74] == 0)
        {
            main_13();
        }
        else
        {
            main_14();
        }
        if (bits[4][76] == 1)
        {
            work_set(WK_OBJECT, 7);
            member_copy(16, 12);
            var_10 += 4E20;
            member_set2(12, 16);
        }
        if (bits[4][55] == 0)
        {
            cut_be_set(5, 3, 0);
        }
        else
        {
            aot_reset(4, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            main_07();
            main_15();
            evt_exec(255, I_GOSUB, main_0C);
        }
        main_02();
        main_03();
        bits[13][3] = 0;
        bits[13][4] = 0;
        bits[22][1] = 0;
        return 0;
    }

    main_01()
    {
        if (bits[4][76] == 0 && arr[2] == 74)
        {
            evt_exec(255, I_GOSUB, main_04);
        }
        if (arr[2] == 67)
        {
            evt_exec(255, I_GOSUB, main_0D);
        }
        if (bits[1][11] == 1)
        {
            main_02();
            main_03();
        }
        return 0;
    }

    main_02()
    {
        if (bits[4][55] == 0)
        {
            work_set(WK_OBJECT, 10);
            member_set(12, 52, 234);
        }
        save(4, -9);
        switch (var_1A)
        {
        case 0:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 1:
            work_set(WK_OBJECT, 10);
            member_set(12, 20, 156);
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 2:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 3:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 4:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 5:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 6:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            break;
        case 7:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            break;
        case 8:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 9:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        case 10:
            work_set(WK_OBJECT, 1);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 4);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 6);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            break;
        }
        return 0;
    }

    main_03()
    {
        switch (var_1A)
        {
        case 0:
            sce_bgm_control(1, 0, 1, 50, 65);
            break;
        case 1:
            sce_bgm_control(1, 0, 1, 58, 72);
            break;
        case 2:
            sce_bgm_control(1, 0, 1, 68, 72);
            break;
        case 3:
            sce_bgm_control(1, 0, 1, 90, 40);
            break;
        case 4:
            sce_bgm_control(1, 0, 1, 98, 76);
            break;
        case 5:
            sce_bgm_control(1, 0, 1, 103, 72);
            break;
        case 6:
            sce_bgm_control(1, 0, 1, 121, 65);
            break;
        case 7:
            sce_bgm_control(1, 0, 1, 121, 65);
            break;
        case 8:
            sce_bgm_control(1, 0, 1, 68, 40);
            break;
        case 9:
            sce_bgm_control(1, 0, 1, 109, 31);
            break;
        case 10:
            sce_bgm_control(1, 0, 1, 109, 31);
            break;
        }
        return 0;
    }

    main_04()
    {
        bits[4][76] = 1;
        bits[2][7] = 1;
        work_set(WK_PLAYER, 0);
        plc_motion(1, 6, 0);
        sleep(10, 24);
        cut_chg(7);
        main_02();
        main_03();
        work_set(WK_OBJECT, 7);
        member_copy(16, 12);
        var_10 += 4E20;
        member_set2(12, 16);
        se_on(2, 271, 1796, 0, 0, 0);
        sce_item_lost(74);
        sleep(10, 30);
        main_06();
        cut_chg(6);
        cut_auto(1);
        work_set(WK_PLAYER, 0);
        if (bits[5][0] == 0)
        {
            plc_motion(1, 6, 128);
            sleep(10, 24);
        }
        plc_ret();
        bits[5][0] = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_05()
    {
        bits[2][7] = 1;
        work_set(WK_PLAYER, 0);
        plc_motion(1, 6, 0);
        sleep(10, 24);
        cut_chg(7);
        main_02();
        main_03();
        main_06();
        cut_chg(6);
        cut_auto(1);
        work_set(WK_PLAYER, 0);
        if (bits[5][0] == 0)
        {
            plc_motion(1, 6, 128);
            sleep(10, 24);
        }
        plc_ret();
        bits[5][0] = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_06()
    {
        message_on(0, 5, 0, 255, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(2, 266, 1540, 0, 0, 0);
            if (bits[4][76] == 1 && bits[4][55] == 0)
            {
                bits[4][55] = 1;
                aot_reset(4, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
                evt_exec(255, I_GOSUB, main_0C);
                sleep(10, 10);
                se_on(2, 268, 1540, 0, 0, 0);
                sce_bgm_control(1, 0, 1, 110, 65);
                sce_bgm_control(1, 1, 0, 128, 65);
                if (game.player == 0)
                {
                    if (game.scenario == 0)
                    {
                        sce_bgmtbl_set(0, 17, 1, 3071, 0);
                        sce_bgmtbl_set(0, 25, 2, 4863, 49152);
                    }
                    else
                    {
                        sce_bgmtbl_set(0, 17, 1, 3071, 0);
                        sce_bgmtbl_set(0, 25, 2, 4863, 49152);
                    }
                }
                else
                {
                    if (game.scenario == 0)
                    {
                        sce_bgmtbl_set(0, 17, 1, 3071, 0);
                    }
                    else
                    {
                        sce_bgmtbl_set(0, 17, 1, 3071, 0);
                        sce_bgmtbl_set(0, 23, 1, 65310, 64);
                    }
                }
                sleep(10, 30);
                cut_chg(6);
                game.cutscene = 1;
                bits[22][1] = 1;
                sleep(10, 50);
                work_set(WK_PLAYER, 0);
                plc_motion(1, 6, 128);
                sleep(10, 10);
                if (game.player == 0)
                {
                    pos_set(0, -22227, -5400, -28492);
                    member_set(15, 240, 4);
                }
                else
                {
                    pos_set(0, -21956, -5400, -28448);
                    member_set(15, 240, 4);
                }
                cut_chg(10);
                sleep(10, 30);
                evt_exec(255, I_GOSUB, main_08);
                sleep(10, 10);
                work_set(WK_PLAYER, 0);
                plc_dest(0, 21, 32, 1984, 128);
                sleep(10, 90);
                bits[22][1] = 0;
                bits[5][0] = 1;
                game.cutscene = 0;
            }
            else
            {
                evt_exec(9, I_GOSUB, main_0B);
                sleep(10, 90);
                evt_kill(9);
                sleep(10, 30);
                work_set(WK_OBJECT, 6);
                member_set(16, 0, 0);
            }
        }
        return 0;
    }

    main_07()
    {
        if (bits[8][55] == 0)
        {
            if (game.player == 0)
            {
                aot_reset(2, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 61, 0, 1, 0, 55, 0);
                work_set(WK_OBJECT, 9);
                pos_set(0, -29136, -7150, -27896);
                dir_set(0, -3008, -4032, 1152);
            }
            else
            {
                aot_reset(2, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 57, 0, 1, 0, 55, 0);
                work_set(WK_OBJECT, 9);
                pos_set(0, -29136, -7150, -27896);
                dir_set(0, -3008, -4032, 1152);
            }
        }
        return 0;
    }

    main_08()
    {
        main_07();
        sce_bgm_control(1, 0, 1, 80, 31);
        work_set(WK_OBJECT, 10);
        speed_set(0, -10);
        nop_8a(0, 5, 0, 0, 0);
        nop_8b(100, 20, 0, 0, 0);
        se_on(2, 272, 2564, 0, 0, 0);
        for 20 times
        {
            add_speed();
            evt_next();
        }
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_09);
        cut_chg(9);
        speed_set(0, 0);
        speed_set(2, 45);
        sleep(10, 30);
        nop_8b(140, 40, 0, 0, 0);
        nop_8a(0, 4, 0, 39, 0);
        nop_8b(200, 8, 0, 39, 0);
        se_on(2, 273, 2564, 0, 0, 0);
        for 40 times
        {
            add_speed();
            evt_next();
        }
        main_15();
        sce_bgm_control(1, 0, 1, 121, 65);
        return 0;
    }

    main_09()
    {
        evt_exec(255, I_GOSUB, main_0A);
        sleep(10, 2);
        evt_exec(255, I_GOSUB, main_0A);
        sleep(10, 18);
        sce_espr_on(0, 25, 0, 768, -26874, -8380, -28228, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 1024, -26874, -8380, -27928, 0);
        sce_espr_on(0, 25, 0, 768, -26874, -8580, -27228, 0);
        sleep(10, 10);
        sce_espr_on(0, 25, 0, 1024, -26874, -8380, -27828, 0);
        sleep(10, 13);
        sce_espr_on(0, 25, 0, 768, -26874, -8380, -27528, 0);
        sce_espr_on(0, 25, 0, 1024, -26874, -8680, -27728, 0);
        sleep(10, 18);
        sce_espr_on(0, 25, 0, 768, -26874, -8380, -27228, 0);
        return 0;
    }

    main_0A()
    {
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 1024, -26874, -8380, -28828, 0);
        sce_espr_on(0, 25, 0, 768, -26874, -8580, -28578, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 896, -26874, -8280, -28478, 0);
        sce_espr_on(0, 25, 0, 896, -26874, -8480, -27478, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 768, -26874, -8380, -27028, 0);
        sce_espr_on(0, 25, 0, 640, -26874, -8280, -28678, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 896, -26874, -8180, -27928, 0);
        sce_espr_on(0, 25, 0, 1024, -26874, -8680, -27878, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 768, -26874, -8580, -27628, 0);
        sce_espr_on(0, 25, 0, 768, -26874, -8280, -27478, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 896, -26874, -8380, -28528, 0);
        sce_espr_on(0, 25, 0, 1152, -26874, -8480, -28078, 0);
        evt_next();
        sce_espr_on(0, 25, 0, 768, -26874, -8580, -27828, 0);
        sce_espr_on(0, 25, 0, 1024, -26874, -8380, -27228, 0);
        sce_espr_on(0, 25, 0, 896, -26874, -8180, -27178, 0);
        return 0;
    }

    main_0B()
    {
        sleep(10, 10);
        se_on(2, 267, 1540, 0, 0, 0);
        work_set(WK_OBJECT, 6);
        speed_set(5, 12);

off_2E12:
        add_speed();
        evt_next();
        goto off_2E12;
        return 0;
    }

    main_0C()
    {
        sleep(10, 10);

off_2E20:
        work_set(WK_OBJECT, 1);
        member_copy(16, 16);
        var_10 += 08;
        member_set2(16, 16);
        work_set(WK_OBJECT, 2);
        member_copy(16, 16);
        var_10 -= 10;
        member_set2(16, 16);
        work_set(WK_OBJECT, 3);
        member_copy(16, 16);
        var_10 -= 10;
        member_set2(16, 16);
        work_set(WK_OBJECT, 4);
        member_copy(16, 16);
        var_10 += 18;
        member_set2(16, 16);
        work_set(WK_OBJECT, 5);
        member_copy(16, 16);
        var_10 += 09;
        member_set2(16, 16);
        work_set(WK_OBJECT, 6);
        member_copy(16, 16);
        var_10 += 0C;
        member_set2(16, 16);
        work_set(WK_OBJECT, 7);
        member_copy(16, 16);
        var_10 -= 12;
        member_set2(16, 16);
        evt_next();
        goto off_2E20;
        return 0;
    }

    main_0D()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_OBJECT, 8);
        pos_set(0, -22961, -1915, -16573);
        member_set(15, 100, 12);
        work_set(WK_PLAYER, 0);
        member_copy(16, 0);
        var_10 |= 08;
        member_set2(0, 16);
        if (game.player == 0)
        {
            pos_set(0, -24559, 108, -17100);
        }
        else
        {
            pos_set(0, -24307, 108, -17054);
        }
        member_set(15, 0, 12);
        evt_next();
        if (bits[4][74] == 0)
        {
            bits[4][74] = 1;
            evt_exec(255, I_GOSUB, main_0E);
            evt_exec(8, I_GOSUB, main_0F);
        }
        else
        {
            bits[4][74] = 0;
            evt_exec(255, I_GOSUB, main_10);
            evt_exec(8, I_GOSUB, main_11);
        }
        sleep(10, 138);
        evt_kill(9);
        evt_kill(8);
        sce_fade_set(2, 2, 7, 0, 24);
        sleep(10, 2);
        work_set(WK_PLAYER, 0);
        pos_set(0, -22805, 0, -17296);
        member_set(15, 0, 12);
        member_copy(16, 0);
        var_10 &= FFF7;
        member_set2(0, 16);
        plc_ret();
        sce_fade_set(2, 2, 7, 0, 232);
        work_set(WK_OBJECT, 8);
        pos_set(0, -22961, -21915, -16573);
        member_set(15, 100, 12);
        cut_auto(1);
        sce_item_lost(67);
        bits[1][16] = 1;
        game.cutscene = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_0E()
    {
        nop_8b(100, 128, 0, 0, 0);
        se_on(2, 270, 4, 0, 0, 0);
        work_set(WK_OBJECT, 0);
        speed_set(3, 4);
        for 64 times
        {
            add_speed();
            evt_next();
        }
        cut_chg(8);
        nop_8a(0, 5, 0, 62, 0);
        nop_8b(200, 2, 0, 62, 0);
        nop_8b(150, 8, 0, 64, 0);
        for 64 times
        {
            add_speed();
            evt_next();
        }
        cut_chg(0);
        main_14();
        return 0;
    }

    main_0F()
    {
        work_set(WK_PLAYER, 0);
        plc_motion(0, 15, 69);
        evt_exec(9, I_GOSUB, main_12);
        work_set(WK_OBJECT, 8);
        member_set(15, 100, 12);
        evt_next();
        member_set(15, 91, 12);
        evt_next();
        member_set(15, 82, 12);
        evt_next();
        member_set(15, 53, 12);
        evt_next();
        member_set(15, 1, 12);
        evt_next();
        member_set(15, 207, 11);
        evt_next();
        member_set(15, 151, 11);
        evt_next();
        member_set(15, 83, 11);
        evt_next();
        member_set(15, 244, 10);
        evt_next();
        member_set(15, 155, 10);
        evt_next();
        member_set(15, 88, 10);
        evt_next();
        member_set(15, 212, 9);
        evt_next();
        member_set(15, 54, 9);
        evt_next();
        member_set(15, 190, 8);
        evt_next();
        member_set(15, 80, 8);
        evt_next();
        member_set(15, 172, 7);
        evt_next();
        member_set(15, 30, 7);
        evt_next();
        member_set(15, 34, 6);
        evt_next();
        member_set(15, 71, 5);
        evt_next();
        member_set(15, 149, 4);
        evt_next();
        member_set(15, 35, 4);
        evt_next();
        member_set(15, 134, 3);
        evt_next();
        member_set(15, 206, 2);
        evt_next();
        member_set(15, 150, 1);
        evt_next();
        member_set(15, 74, 0);
        evt_next();
        member_set(15, 194, 255);
        evt_next();
        member_set(15, 63, 255);
        evt_next();
        member_set(15, 196, 254);
        evt_next();
        member_set(15, 89, 254);
        evt_next();
        member_set(15, 155, 253);
        evt_next();
        member_set(15, 64, 253);
        evt_next();
        member_set(15, 252, 252);
        evt_next();
        member_set(15, 197, 252);
        evt_next();
        member_set(15, 191, 252);
        evt_next();
        member_set(15, 185, 252);
        evt_next();
        member_set(15, 182, 252);
        evt_next();
        member_set(15, 165, 252);
        evt_next();
        member_set(15, 160, 252);
        evt_next();
        member_set(15, 145, 252);
        evt_next();
        member_set(15, 100, 12);
        evt_next();
        goto off_2FCD;
        return 0;
    }

    main_10()
    {
        work_set(WK_OBJECT, 0);
        speed_set(3, -4);
        cut_chg(8);
        for 64 times
        {
            add_speed();
            evt_next();
        }
        cut_chg(0);
        for 64 times
        {
            add_speed();
            evt_next();
        }
        main_13();
        return 0;
    }

    main_11()
    {
        work_set(WK_PLAYER, 0);
        plc_motion(0, 15, 197);
        evt_exec(9, I_GOSUB, main_12);
        work_set(WK_OBJECT, 8);
        member_set(15, 100, 12);
        evt_next();
        member_set(15, 145, 252);
        evt_next();
        member_set(15, 160, 252);
        evt_next();
        member_set(15, 165, 252);
        evt_next();
        member_set(15, 182, 252);
        evt_next();
        member_set(15, 185, 252);
        evt_next();
        member_set(15, 191, 252);
        evt_next();
        member_set(15, 197, 252);
        evt_next();
        member_set(15, 252, 252);
        evt_next();
        member_set(15, 64, 253);
        evt_next();
        member_set(15, 155, 253);
        evt_next();
        member_set(15, 89, 254);
        evt_next();
        member_set(15, 196, 254);
        evt_next();
        member_set(15, 63, 255);
        evt_next();
        member_set(15, 194, 255);
        evt_next();
        member_set(15, 74, 0);
        evt_next();
        member_set(15, 150, 1);
        evt_next();
        member_set(15, 206, 2);
        evt_next();
        member_set(15, 134, 3);
        evt_next();
        member_set(15, 35, 4);
        evt_next();
        member_set(15, 149, 4);
        evt_next();
        member_set(15, 71, 5);
        evt_next();
        member_set(15, 34, 6);
        evt_next();
        member_set(15, 30, 7);
        evt_next();
        member_set(15, 172, 7);
        evt_next();
        member_set(15, 80, 8);
        evt_next();
        member_set(15, 190, 8);
        evt_next();
        member_set(15, 54, 9);
        evt_next();
        member_set(15, 212, 9);
        evt_next();
        member_set(15, 88, 10);
        evt_next();
        member_set(15, 155, 10);
        evt_next();
        member_set(15, 244, 10);
        evt_next();
        member_set(15, 83, 11);
        evt_next();
        member_set(15, 151, 11);
        evt_next();
        member_set(15, 207, 11);
        evt_next();
        member_set(15, 1, 12);
        evt_next();
        member_set(15, 53, 12);
        evt_next();
        member_set(15, 82, 12);
        evt_next();
        member_set(15, 91, 12);
        evt_next();
        member_set(15, 100, 12);
        evt_next();
        goto off_30F9;
        return 0;
    }

    main_12()
    {

off_31F2:
        se_on(2, 269, 2052, 0, 0, 0);
        for 40 times
        {
            evt_next();
        }
        goto off_31F2;
        return 0;
    }

    main_13()
    {
        work_set(WK_OBJECT, 0);
        member_set(14, 0, 254);
        sca_id_set(3, 0, 0);
        sca_id_set(18, 0, 0);
        sca_id_set(10, 16, 252);
        cut_be_set(2, 2, 0);
        return 0;
    }

    main_14()
    {
        work_set(WK_OBJECT, 0);
        member_set(14, 0, 0);
        sca_id_set(3, 16, 252);
        sca_id_set(18, 16, 252);
        sca_id_set(10, 0, 0);
        cut_be_set(2, 2, 1);
        return 0;
    }

    main_15()
    {
        work_set(WK_OBJECT, 10);
        pos_set(0, -32000, -32000, -32000);
        member_copy(16, 1);
        var_10 |= 08;
        member_set2(1, 16);
        cut_be_set(5, 3, 1);
        return 0;
    }

    main_16()
    {
        bits[2][7] = 1;
        if (bits[4][55] == 0)
        {
            message_on(0, 6, 0, 255, 255);
            evt_next();
        }
        else
        {
            if (bits[8][55] == 0)
            {
                aot_on(2);
                evt_next();
                if (bits[8][55] == 1 && game.player == 0)
                {
                    message_on(0, 7, 0, 255, 255);
                    evt_next();
                    if (input.question == 0)
                    {
                        aot_on(1);
                    }
                }
            }
            else
            {
                if (game.player == 0)
                {
                    message_on(0, 7, 0, 255, 255);
                    evt_next();
                    if (input.question == 0)
                    {
                        aot_on(1);
                    }
                }
            }
        }
        bits[2][7] = 0;
        return 0;
        db(0x18, 0x00);
    }
}
