.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -9460, -21300, 1390, 2700, -19955, 0, 9004, 400, 0, 10, 15, 0, 0, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -11460, -27700, 1800, 1400, -11209, 0, -9716, 1360, 0, 13, 0, 0, 5, 129, 0, 0, UNLOCKED, 0);
        door_aot_se(2, SCE_DOOR, SAT_AUTO, 0, 0, 0, 0, 1, 1, 1528, 0, -15137, 1472, 2, 8, 0, 0, 16, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(3, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27160, -18500, 3800, 930, 24730, 0, -15507, 5344, 1, 27, 15, 0, 16, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(4, SCE_DOOR, SAT_AUTO, 0, 0, 0, 0, 1, 1, -25191, 0, -18885, 1008, 1, 27, 6, 0, 16, 0, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        main_02();
        item_aot_set(8, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27200, -25500, 1800, 1800, ITEM_109, 1, 47, 9, 1);
        obj_model_set(9, 0, 0, 0, 0, 0, 0, 10, 16, -26300, 0, -24600, 0, 896, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (bits[3][64] == 0)
        {
            work_set(WK_OBJECT, 7);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 9);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            if (bits[3][0] == 0)
            {
                aot_set(9, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19660, -23400, 1200, 2900, 255, 0, I_GOSUB, main_08, 0, 0);
                aot_set(10, SCE_EVENT, SAT_PL | SAT_UNDER, 0, 0, -21730, -26355, 1800, 3100, 255, 0, I_GOSUB, main_09, 0, 0);
                aot_set(13, SCE_EVENT, SAT_PL | SAT_UNDER, 0, 0, -16030, -26355, 1850, 3100, 255, 0, I_GOSUB, main_0A, 0, 0);
                main_07();
                cut_be_set(2, 3, 0);
            }
            else
            {
                main_07();
                work_set(WK_OBJECT, 0);
                member_set(15, 64, 0);
            }
        }
        else
        {
            if (bits[3][12] == 0)
            {
                evt_exec(255, I_GOSUB, main_27);
            }
            aot_set(12, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -23490, -21972, 1000, 1800, 255, 0, I_GOSUB, main_16, 0, 0);
            aot_set(15, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -23490, -21972, 1000, 1800, 10, 0, 58, 0, 1, 0);
            aot_set(16, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -23490, -21972, 1000, 1800, 10, 0, 54, 0, 1, 0);
            aot_set(14, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 0, 0, -23490, -21972, 1000, 1800, 10, 0, 55, 0, 1, 0);
            sca_id_set(12, 0, 0);
            work_set(WK_OBJECT, 0);
            pos_set(0, -21500, -180, -20500);
            member_set(15, 64, 1);
            if (bits[3][1] == 0)
            {
                aot_reset(15, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
                aot_reset(16, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
                aot_reset(14, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
                bits[20][1] = 0;
            }
            else
            {
                work_set(WK_OBJECT, 2);
                member_set(13, 124, 167);
                bits[20][1] = 1;
            }
            if (bits[3][2] == 1)
            {
                work_set(WK_OBJECT, 3);
                member_set(12, 53, 244);
            }
            if (bits[3][3] == 1)
            {
                work_set(WK_OBJECT, 4);
                member_set(12, 121, 245);
            }
            if (bits[3][4] == 1)
            {
                work_set(WK_OBJECT, 5);
                member_set(12, 180, 246);
            }
            if (bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
            {
                main_1D();
            }
            main_25();
            if (arr[26] == 15)
            {
                if (game.last_room == 0x21B)
                {
                    main_03();
                }
                else
                {
                    main_04();
                }
                return 0;
            }
            if (bits[8][55] == 1 && bits[3][6] == 0)
            {
                aot_reset(3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_1F, 0, 0);
                work_set(WK_SPLAYER, 0);
                pos_set(0, -17306, 0, -23263);
                dir_set(0, 0, 2392, 0);
                evt_exec(255, I_GOSUB, main_1E);
            }
            if (bits[3][6] == 1 && bits[3][7] == 0)
            {
                aot_reset(3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_1F, 0, 0);
                work_set(WK_SPLAYER, 0);
                pos_set(0, -17295, 0, -25327);
                dir_set(0, 0, 2840, 0);
                evt_exec(9, I_GOSUB, main_26);
            }
            if (bits[6][98] == 0 && bits[3][7] == 1 && bits[3][8] == 0)
            {
                work_set(WK_SPLAYER, 0);
                pos_set(0, -17295, 0, -25327);
                dir_set(0, 0, 2840, 0);
                member_copy(16, 0);
                var_10 |= 04;
                member_set2(0, 16);
                evt_exec(9, I_GOSUB, main_26);
            }
            if (bits[6][98] == 1 && bits[3][7] == 1 && bits[3][8] == 0)
            {
                work_set(WK_SPLAYER, 0);
                pos_set(0, -26323, 0, -22105);
                dir_set(0, 0, 3752, 0);
                evt_exec(255, I_GOSUB, main_21);
            }
            if (bits[3][10] == 0)
            {
                aot_reset(3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_28, 0, 0);
            }
        }
        if (bits[3][64] == 1)
        {
            item_aot_set(6, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20226, -24016, 1800, 1800, ITEM_HEARTKEY, 1, 12, 6, 160);
            obj_model_set(6, 0, 0, 0, 0, 0, 0, 10, 18, -19019, -1450, -23250, 0, -192, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
        obj_model_set(8, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }

    main_01()
    {
        if (bits[3][1] == 1)
        {
            if (arr[2] == 58)
            {
                evt_exec(255, I_GOSUB, main_18);
            }
            if (arr[2] == 54)
            {
                evt_exec(255, I_GOSUB, main_19);
            }
            if (arr[2] == 55)
            {
                evt_exec(255, I_GOSUB, main_1A);
            }
        }
        if (bits[1][11] == 1 && bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
        {
            main_06();
        }
        return 0;
    }

    main_02()
    {
        aot_set(17, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19624, -20356, 2600, 1800, 26, 0, 0, 0, 255, 255);
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 0, -21900, -180, -21801, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 16, -23210, -1800, -24840, 0, 2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 16, -22995, -2700, -21410, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 16, -22968, -23019, -21559, 0, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -22968, -22695, -21064, 0, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 16, -22968, -22380, -20569, 0, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(7, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -22270, -21300, 1680, 1700, ITEM_120, 1, 200, 7, 0);
        obj_model_set(7, 0, 0, 0, 0, 0, 0, 10, 16, -21300, -1140, -20550, 896, 960, -192, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }

    main_03()
    {
        main_05();
        aot_on(2);
        return 0;
    }

    main_04()
    {
        main_05();
        aot_on(4);
        return 0;
    }

    main_05()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        cut_chg(15);
        if (bits[1][3] == 1)
        {
            work_set(WK_PLAYER, 0);
            plc_ret();
            pos_set(0, -24579, 0, -15932);
            member_set(15, 8, 5);
            work_set(WK_SPLAYER, 0);
            pos_set(0, -25642, 0, -15808);
            member_set(15, 216, 2);
        }
        else
        {
            work_set(WK_PLAYER, 0);
            plc_ret();
            pos_set(0, -25227, 0, -15802);
            member_set(15, 24, 4);
        }
        sleep(10, 20);
        nop_8a(0, 4, 0, 0, 0);
        nop_8b(200, 8, 0, 0, 0);
        nop_8b(70, 90, 0, 8, 0);
        se_on(2, 273, 1, 0, 0, 0);
        bits[1][28] = 1;
        sleep(10, 8);
        bits[1][28] = 0;
        sleep(10, 90);
        nop_8a(0, 4, 0, 0, 0);
        nop_8b(200, 10, 0, 0, 0);
        nop_8b(100, 10, 0, 10, 0);
        se_on(2, 274, 1, 0, 0, 0);
        bits[1][28] = 1;
        sleep(10, 8);
        bits[1][28] = 0;
        sleep(10, 20);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_06()
    {
        save(6, -9);
        if (arr[26] == 5)
        {
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
        }
        else
        {
            work_set(WK_OBJECT, 2);
            member_copy(16, 1);
            calc2(OP_AND, 16, 6);
            member_set2(1, 16);
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            calc2(OP_AND, 16, 6);
            member_set2(1, 16);
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            calc2(OP_AND, 16, 6);
            member_set2(1, 16);
            work_set(WK_OBJECT, 5);
            member_copy(16, 1);
            calc2(OP_AND, 16, 6);
            member_set2(1, 16);
        }
        return 0;
    }

    main_07()
    {
        aot_set(11, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -23110, -22926, 2400, 1800, 255, 0, I_GOSUB, main_14, 0, 0);
        sce_em_set(0, 0, ENEMY_CHIEFIRONS1, 0, 8, 0, 0, 0, 255, 0, 0, 0, 0, 258, 8);
        work_set(WK_ENEMY, 0);
        member_copy(16, 0);
        var_10 |= 02;
        var_10 |= 08;
        member_set2(0, 16);
        sce_em_set(0, 1, ENEMY_MAYORSDAUGHTER, 0, 0, 0, 0, 0, 255, -20300, -1440, -21800, 0, 0, 0);
        evt_exec(9, I_GOSUB, main_15);
        return 0;
    }

    main_08()
    {
        aot_reset(9, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(10, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(13, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[3][0] = 1;
        work_set(WK_PLAYER, 0);
        pos_set(0, -18460, 0, -21458);
        member_set(15, 160, 7);
        cut_chg(10);
        sce_bgm_control(2, 1, 0, 90, 64);
        sce_bgmtbl_set(0, 27, 2, 4607, 32768);
        sleep(10, 60);
        evt_exec(255, I_GOSUB, main_0E);
        sleep(10, 15);
        work_set(WK_ENEMY, 0);
        plc_motion(0, 4, 0);
        sleep(10, 20);
        se_on(2, 275, 4, 0, 0, 0);
        plc_neck(2, 0, 0, -64, 12, 12);
        sleep(10, 40);
        xa_on(0, 17);
        message_on(0, 0, 0, 0, 0);
        sce_bgm_control(1, 1, 0, 90, 64);
        plc_motion(0, 4, 144);
        sleep(10, 40);
        plc_motion(0, 0, 0);
        sleep(10, 80);
        plc_motion(0, 0, 144);
        sleep(10, 80);
        plc_motion(0, 3, 20);
        wsleep();
        wsleeping();
        cut_chg(11);
        evt_next();
        evt_chain(0, 24, 11);
        return 0;
    }

    main_09()
    {
        aot_reset(9, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(10, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(13, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[3][0] = 1;
        cut_chg(3);
        sce_bgmtbl_set(0, 27, 2, 4607, 32768);
        sce_bgm_control(2, 1, 0, 90, 64);
        evt_exec(255, I_GOSUB, main_0F);
        sleep(10, 15);
        evt_exec(255, I_GOSUB, main_0D);
        work_set(WK_PLAYER, 0);
        plc_neck(5, 3, 0, 0, 128, 128);
        sleep(10, 4);
        plc_dest(0, 9, 32, -21900, -21801);
        main_2B();
        plc_motion(1, 1, 0);
        sleep(10, 5);
        plc_stop();
        sleep(10, 30);
        xa_on(0, 17);
        message_on(0, 0, 0, 0, 0);
        sce_bgm_control(1, 1, 0, 90, 64);
        work_set(WK_ENEMY, 0);
        plc_motion(0, 4, 144);
        sleep(10, 40);
        plc_motion(0, 0, 0);
        sleep(10, 80);
        plc_motion(0, 0, 144);
        sleep(10, 80);
        plc_motion(0, 3, 20);
        wsleep();
        wsleeping();
        work_set(WK_PLAYER, 0);
        plc_motion(0, 24, 0);
        sleep(10, 24);
        plc_dest(0, 4, 32, -18460, -21458);
        sleep(10, 25);
        cut_chg(11);
        work_set(WK_OBJECT, 0);
        member_set(15, 0, 2);
        work_set(WK_PLAYER, 0);
        pos_set(0, -18333, 0, -23760);
        member_set(15, 176, 11);
        plc_dest(0, 4, 32, -18460, -21458);
        main_2B();
        plc_dest(0, 21, 32, 1952, 60);
        main_2B();
        evt_exec(255, I_GOSUB, main_10);
        evt_chain(0, 24, 11);
        return 0;
    }

    main_0A()
    {
        aot_reset(9, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(10, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        aot_reset(13, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[3][0] = 1;
        cut_chg(3);
        sce_bgmtbl_set(0, 27, 2, 4607, 32768);
        sce_bgm_control(2, 1, 0, 90, 64);
        evt_exec(255, I_GOSUB, main_0F);
        sleep(10, 15);
        evt_exec(255, I_GOSUB, main_0D);
        work_set(WK_PLAYER, 0);
        plc_neck(5, 3, 0, 0, 128, 128);
        sleep(10, 4);
        plc_dest(0, 9, 32, -21900, -21801);
        main_2B();
        plc_motion(1, 1, 0);
        cut_chg(2);
        sleep(10, 5);
        plc_stop();
        sleep(10, 30);
        xa_on(0, 17);
        message_on(0, 0, 0, 0, 0);
        sce_bgm_control(1, 1, 0, 90, 64);
        work_set(WK_ENEMY, 0);
        plc_motion(0, 4, 144);
        sleep(10, 40);
        plc_motion(0, 0, 0);
        sleep(10, 80);
        plc_motion(0, 0, 144);
        sleep(10, 80);
        plc_motion(0, 3, 20);
        wsleep();
        wsleeping();
        work_set(WK_PLAYER, 0);
        plc_motion(0, 24, 0);
        sleep(10, 24);
        plc_dest(0, 4, 32, -18460, -21458);
        sleep(10, 25);
        cut_chg(11);
        work_set(WK_OBJECT, 0);
        member_set(15, 0, 2);
        work_set(WK_PLAYER, 0);
        pos_set(0, -18333, 0, -23760);
        member_set(15, 176, 11);
        plc_dest(0, 4, 32, -18460, -21458);
        main_2B();
        plc_dest(0, 21, 32, 1952, 60);
        main_2B();
        evt_exec(255, I_GOSUB, main_10);
        evt_chain(0, 24, 11);
        return 0;
    }

    main_0B()
    {
        xa_on(0, 18);
        message_on(0, 1, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 15, 0);
        sleep(10, 20);
        plc_motion(0, 15, 128);
        sleep(10, 20);
        plc_motion(0, 24, 0);
        sleep(10, 20);
        plc_motion(0, 25, 20);
        wsleep();
        wsleeping();
        xa_on(0, 19);
        message_on(0, 2, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, 0, 64, 24, 24);
        sleep(10, 20);
        plc_neck(2, 0, 0, -64, 24, 24);
        plc_motion(0, 0, 128);
        wsleep();
        wsleeping();
        xa_on(0, 20);
        message_on(0, 3, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_motion(0, 1, 16);
        sleep(10, 40);
        plc_stop();
        sleep(10, 7);
        plc_motion(0, 0, 144);
        plc_cnt(20);
        plc_neck(4, 2, 0, 0, 48, 48);
        sleep(10, 40);
        plc_motion(0, 0, 144);
        sleep(10, 30);
        plc_stop();
        plc_neck(4, 4, 0, 0, 84, 84);
        plc_motion(0, 0, 144);
        sleep(10, 60);
        plc_motion(0, 0, 16);
        plc_cnt(25);
        plc_neck(2, 0, 0, 64, 24, 24);
        sleep(10, 30);
        plc_motion(0, 3, 20);
        sleep(10, 30);
        plc_neck(5, 1, 0, 0, 24, 24);
        wsleep();
        wsleeping();
        cut_chg(9);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 18, 0);
        plc_neck(2, 0, 0, 256, 24, 24);
        sleep(10, 20);
        plc_neck(2, 0, 128, 256, 24, 24);
        sleep(10, 30);
        plc_neck(2, 0, -128, 256, 24, 24);
        sleep(10, 30);
        plc_neck(2, 0, 128, 256, 24, 24);
        sleep(10, 30);
        plc_neck(5, 3, 0, 0, 64, 64);
        xa_on(0, 21);
        message_on(0, 4, 0, 0, 0);
        wsleep();
        wsleeping();
        cut_chg(10);
        evt_next();
        xa_on(0, 22);
        message_on(0, 5, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, -256, 256, 12, 12);
        sleep(10, 15);
        plc_neck(2, 0, 256, 256, 12, 12);
        sleep(10, 30);
        wsleep();
        wsleeping();
        cut_chg(13);
        evt_next();
        xa_on(0, 29);
        message_on(0, 6, 0, 0, 0);
        wsleep();
        wsleeping();
        cut_chg(10);
        evt_next();
        xa_on(0, 23);
        message_on(0, 7, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, 0, 256, 18, 18);
        sleep(10, 10);
        plc_neck(2, 0, -256, 384, 22, 16);
        sleep(10, 20);
        plc_neck(2, 0, 256, 384, 26, 20);
        sleep(10, 28);
        plc_neck(2, 0, -256, 384, 50, 40);
        sleep(10, 10);
        plc_neck(2, 0, 256, 384, 58, 48);
        sleep(10, 10);
        plc_neck(2, 0, -256, 384, 50, 40);
        sleep(10, 10);
        plc_neck(2, 0, 256, 384, 58, 48);
        sleep(10, 10);
        plc_neck(2, 0, 0, 256, 5, 5);
        sleep(10, 100);
        plc_neck(5, 1, 0, 0, 32, 32);
        wsleep();
        wsleeping();
        cut_chg(9);
        evt_next();
        xa_on(0, 24);
        message_on(0, 8, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 18, 16);
        plc_neck(2, 0, -128, 384, 35, 35);
        sleep(10, 10);
        plc_neck(2, 0, 128, 384, 35, 35);
        sleep(10, 15);
        plc_neck(2, 0, -128, 384, 35, 35);
        sleep(10, 15);
        plc_neck(5, 3, 0, 0, 45, 45);
        plc_motion(0, 24, 16);
        sleep(10, 24);
        plc_motion(0, 25, 20);
        wsleep();
        wsleeping();
        cut_chg(11);
        evt_next();
        xa_on(0, 25);
        message_on(0, 9, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_neck(4, 4, 0, 0, 96, 96);
        plc_motion(0, 1, 128);
        sleep(10, 20);
        plc_motion(0, 0, 128);
        sleep(10, 30);
        plc_motion(0, 3, 20);
        sleep(10, 50);
        evt_exec(255, I_GOSUB, main_11);
        plc_motion(0, 4, 0);
        sleep(10, 60);
        plc_neck(5, 1, 0, 0, 30, 30);
        sleep(10, 20);
        plc_motion(0, 4, 144);
        sleep(10, 50);
        evt_exec(255, I_GOSUB, main_12);
        plc_neck(5, 3, 0, 0, 30, 30);
        plc_motion(0, 0, 0);
        sleep(10, 30);
        plc_stop();
        wsleep();
        wsleeping();
        sleep(10, 30);
        plc_neck(1, -20300, -2700, -19400, 10, 10);
        plc_stop();
        plc_flg(0, 16);
        sleep(10, 30);
        evt_exec(255, I_GOSUB, main_13);
        sleep(10, 60);
        evt_exec(255, I_GOSUB, main_0C);
        sleep(10, 60);
        cut_chg(12);
        plc_neck(5, 1, 0, 0, 94, 94);
        work_set(WK_OBJECT, 0);
        member_set(15, 64, 0);
        evt_next();
        xa_on(0, 26);
        message_on(0, 10, 0, 0, 0);
        wsleep();
        wsleeping();
        cut_chg(9);
        evt_next();
        xa_on(0, 28);
        message_on(0, 11, 0, 0, 0);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_neck(5, 3, 0, 0, 94, 94);
        sleep(10, 8);
        plc_dest(0, 9, 32, -21900, -21800);
        wsleep();
        wsleeping();
        cut_chg(10);
        evt_next();
        xa_on(0, 27);
        message_on(0, 12, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        plc_neck(2, 0, 128, -256, 20, 20);
        sleep(10, 10);
        plc_neck(2, 0, -128, -256, 20, 20);
        sleep(10, 10);
        plc_neck(2, 0, 128, -256, 20, 20);
        sleep(10, 16);
        plc_neck(0, 0, 0, 0, 30, 30);
        plc_motion(0, 1, 0);
        sleep(10, 30);
        plc_motion(0, 2, 0);
        plc_neck(2, 0, 0, -128, 10, 10);
        wsleep();
        wsleeping();
        cut_chg(2);
        cut_auto(1);
        cut_be_set(2, 3, 1);
        bits[2][7] = 0;
        game.cutscene = 0;
        work_set(WK_PLAYER, 0);
        plc_ret();
        return 0;
    }

    main_0C()
    {
        work_set(WK_PLAYER, 0);
        plc_neck(1, -20300, -2700, -19400, 92, 92);
        sleep(10, 15);
        plc_dest(0, 9, 32, -19000, -19400);
        plc_rot(0, 48);
        return 0;
    }

    main_0D()
    {
        work_set(WK_ENEMY, 0);
        plc_motion(0, 4, 0);
        sleep(10, 20);
        se_on(2, 275, 4, 0, 0, 0);
        plc_neck(5, 1, 0, 0, 12, 12);
        return 0;
    }

    main_0E()
    {
        se_on(2, 267, 4, 0, 0, 0);
        work_set(WK_OBJECT, 0);
        speed_set(4, -64);
        for 28 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -32);
        for 5 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -16);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, 8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_0F()
    {
        se_on(2, 267, 4, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        member_copy(4, 11);
        member_copy(5, 13);
        work_set(WK_OBJECT, 0);
        speed_set(4, -64);
        if ()
        {
            work_copy(5, 8, 1);
            work_copy(4, 2, 1);
            goto off_3304;
        }
        add_speed();
        evt_next();
        goto off_32E0;

off_3304:
        add_speed();
        evt_next();
        speed_set(4, 8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_10()
    {
        work_set(WK_OBJECT, 0);
        speed_set(4, -32);
        for 12 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -16);
        for 6 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, 8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_11()
    {
        work_set(WK_OBJECT, 0);
        speed_set(4, 32);
        for 11 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_12()
    {
        sleep(10, 10);
        work_set(WK_OBJECT, 0);
        speed_set(4, -16);
        for 22 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, 8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_13()
    {
        sleep(10, 10);
        work_set(WK_OBJECT, 0);
        speed_set(4, -8);
        for 44 times
        {
            add_speed();
            evt_next();
        }
        speed_set(4, -8);
        for 4 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_14()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        work_set(WK_ENEMY, 0);
        plc_neck(5, 1, 0, 0, 20, 20);
        sleep(10, 10);
        xa_on(0, 27);
        message_on(0, 12, 0, 0, 0);
        plc_neck(2, 0, 128, -256, 20, 20);
        sleep(10, 10);
        plc_neck(2, 0, -128, -256, 20, 20);
        sleep(10, 10);
        plc_neck(2, 0, 128, -256, 20, 20);
        sleep(10, 16);
        plc_neck(2, 0, 0, -128, 10, 10);
        plc_motion(0, 2, 16);
        wsleep();
        wsleeping();
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_15()
    {
        work_set(WK_ENEMY, 0);
        super_on(0, 192, 0, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        evt_next();
        goto off_341F;
        return 0;
    }

    main_16()
    {
        if (arr[26] != 7)
        {
            return 0;
        }
        bits[2][7] = 1;
        if (bits[3][1] == 0)
        {
            message_on(0, 27, 0, 255, 255);
            evt_next();
            if (input.question == 0)
            {
                bits[3][1] = 1;
                main_17();
                aot_reset(15, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 10, 0, 58, 0, 1, 0);
                aot_reset(16, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 10, 0, 54, 0, 1, 0);
                aot_reset(14, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 10, 0, 55, 0, 1, 0);
                bits[20][1] = 1;
            }
        }
        else
        {
            cut_chg(8);
            if (bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
            {
                message_on(0, 29, 0, 255, 255);
            }
            else
            {
                message_on(0, 28, 0, 255, 255);
            }
            evt_next();
            cut_old();
        }
        bits[2][7] = 0;
        return 0;
    }

    main_17()
    {
        se_on(2, 269, 516, 0, 0, 0);
        sleep(10, 5);
        se_on(2, 270, 516, 0, 0, 0);
        work_set(WK_OBJECT, 2);
        speed_set(2, -50);
        for 25 times
        {
            add_speed();
            evt_next();
        }
        return 0;
    }

    main_18()
    {
        bits[2][7] = 1;
        cut_chg(8);
        work_set(WK_OBJECT, 3);
        member_set(12, 53, 244);
        sce_item_lost(58);
        se_on(2, 266, 772, 0, 0, 0);
        sleep(10, 30);
        bits[3][2] = 1;
        if (bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
        {
            evt_exec(255, I_GOSUB, main_1B);
        }
        else
        {
            cut_old();
            bits[2][7] = 0;
        }
        return 0;
    }

    main_19()
    {
        bits[2][7] = 1;
        cut_chg(8);
        work_set(WK_OBJECT, 4);
        member_set(12, 121, 245);
        sce_item_lost(54);
        se_on(2, 266, 1028, 0, 0, 0);
        sleep(10, 30);
        bits[3][3] = 1;
        if (bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
        {
            evt_exec(255, I_GOSUB, main_1B);
        }
        else
        {
            cut_old();
            bits[2][7] = 0;
        }
        return 0;
    }

    main_1A()
    {
        bits[2][7] = 1;
        cut_chg(8);
        work_set(WK_OBJECT, 5);
        member_set(12, 180, 246);
        sce_item_lost(55);
        se_on(2, 266, 1284, 0, 0, 0);
        sleep(10, 30);
        bits[3][4] = 1;
        if (bits[3][2] == 1 && bits[3][3] == 1 && bits[3][4] == 1)
        {
            evt_exec(255, I_GOSUB, main_1B);
        }
        else
        {
            cut_old();
            bits[2][7] = 0;
        }
        return 0;
    }

    main_1B()
    {
        game.cutscene = 1;
        bits[2][7] = 1;
        cut_chg(3);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_1C);
        nop_8b(100, 65, 0, 0, 0);
        nop_8a(0, 4, 0, 66, 0);
        nop_8b(150, 8, 0, 66, 0);
        se_on(2, 271, 260, 0, 0, 0);
        work_set(WK_OBJECT, 1);
        speed_set(1, -50);
        for 72 times
        {
            add_speed();
            evt_next();
        }
        cut_chg(7);
        cut_auto(1);
        main_1D();
        work_set(WK_PLAYER, 0);
        plc_ret();
        bits[32][2] = 1;
        game.cutscene = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_1C()
    {
        sleep(10, 4);
        work_set(WK_PLAYER, 0);
        plc_neck(1, -23220, -1800, -24830, 64, 64);
        sleep(10, 4);
        plc_dest(0, 21, 32, 1024, 64);
        main_2B();
        plc_motion(1, 1, 0);
        sleep(10, 6);
        plc_stop();
        return 0;
    }

    main_1D()
    {
        bits[5][0] = 1;
        work_set(WK_OBJECT, 1);
        member_set(12, 216, 170);
        sca_id_set(13, 0, 0);
        bits[16][4] = 0;
        return 0;
    }

    main_1E()
    {
        bits[3][6] = 1;
        bits[2][7] = 1;
        game.cutscene = 1;
        evt_next();
        cut_chg(1);
        work_set(WK_SPLAYER, 0);
        plc_neck(5, 1, 0, 0, 192, 192);
        sleep(10, 4);
        plc_dest(0, 9, 33, -9152, -20029);
        main_2C();
        xa_on(0, 30);
        message_on(0, 15, 0, 0, 0);
        wsleep();
        wsleeping();
        work_set(WK_PLAYER, 0);
        plc_motion(0, 15, 0);
        sleep(10, 10);
        plc_stop();
        sleep(10, 10);
        plc_stop();
        plc_dest(0, 5, 32, -16432, -21490);
        main_2B();
        plc_dest(0, 21, 32, 1449, 64);
        main_2B();
        xa_on(0, 42);
        message_on(0, 13, 0, 0, 0);
        plc_motion(0, 24, 0);
        sleep(10, 24);
        plc_motion(0, 15, 0);
        sleep(10, 25);
        plc_motion(0, 15, 144);
        wsleep();
        wsleeping();
        xa_on(0, 43);
        message_on(0, 14, 0, 0, 0);
        work_set(WK_SPLAYER, 0);
        plc_motion(0, 1, 0);
        plc_neck(4, 2, 0, 0, 64, 64);
        sleep(10, 30);
        plc_motion(0, 0, 0);
        sleep(10, 15);
        plc_neck(5, 1, 0, 0, 32, 32);
        plc_motion(2, 2, 4);
        wsleep();
        wsleeping();
        cut_chg(2);
        cut_auto(1);
        work_set(WK_PLAYER, 0);
        plc_ret();
        work_set(WK_SPLAYER, 0);
        pos_set(0, -18460, 0, -22987);
        member_set(15, 0, 0);
        member_copy(16, 0);
        var_10 |= 04;
        member_set2(0, 16);
        evt_exec(9, I_GOSUB, main_26);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_1F()
    {
        bits[3][7] = 1;
        bits[2][7] = 1;
        game.cutscene = 1;
        evt_kill(9);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -21684, 0, -25197);
        member_set(15, 0, 8);
        member_copy(16, 7);
        var_10 &= EFFF;
        member_set2(7, 16);
        cut_chg(5);
        work_set(WK_PLAYER, 0);
        member_copy(16, 1);
        var_10 |= 08;
        member_set2(1, 16);
        plc_neck(5, 2, 0, 0, 64, 64);
        pos_set(0, -24825, 0, -18951);
        member_set(15, 24, 5);
        evt_next();
        evt_exec(255, I_GOSUB, main_20);
        sleep(10, 20);
        xa_on(0, 30);
        message_on(0, 15, 0, 0, 0);
        wsleep();
        wsleeping();
        sleep(10, 20);
        work_set(WK_PLAYER, 0);
        member_copy(16, 1);
        var_10 &= FFF7;
        member_set2(1, 16);
        cut_chg(6);
        sleep(10, 20);
        xa_on(0, 31);
        message_on(0, 16, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_neck(5, 2, 0, 0, 64, 64);
        plc_motion(0, 18, 0);
        sleep(10, 20);
        plc_motion(0, 18, 128);
        sleep(10, 26);
        plc_motion(0, 20, 0);
        sleep(10, 25);
        plc_motion(0, 15, 0);
        sleep(10, 20);
        plc_motion(0, 15, 128);
        sleep(10, 40);
        work_set(WK_SPLAYER, 0);
        plc_neck(3, 1, 0, 0, 32, 32);
        sleep(10, 60);
        wsleep();
        wsleeping();
        work_set(WK_PLAYER, 0);
        plc_dest(0, 9, 32, -25088, -16050);
        main_2B();
        aot_reset(3, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 154, 96, 0, 0, 109, 195);
        aot_on(3);
        cut_auto(1);
        work_set(WK_PLAYER, 0);
        plc_ret();
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_20()
    {
        work_set(WK_SPLAYER, 0);
        plc_dest(0, 5, 33, -24216, -24756);
        plc_flg(0, 4);
        main_2C();
        plc_dest(0, 4, 33, -25784, -21025);
        main_2C();
        plc_dest(0, 21, 33, 3464, 64);
        return 0;
    }

    main_21()
    {
        bits[3][8] = 1;
        bits[2][7] = 1;
        game.cutscene = 1;
        evt_next();
        work_set(WK_PLAYER, 0);
        pos_set(0, -25321, 0, -18500);
        member_set(15, 120, 5);
        plc_neck(5, 2, 0, 0, 192, 192);
        plc_dest(0, 21, 32, 1584, 32);
        work_set(WK_SPLAYER, 0);
        pos_set(0, -26470, 0, -22573);
        member_set(15, 240, 12);
        plc_dest(0, 5, 33, -26098, -19277);
        main_2C();
        plc_dest(0, 21, 33, 3584, 32);
        main_2C();
        evt_exec(255, I_GOSUB, main_23);
        evt_exec(255, I_GOSUB, main_22);
        xa_on(0, 32);
        message_on(0, 17, 0, 0, 0);
        wsleep();
        wsleeping();
        cut_chg(14);
        evt_next();
        xa_on(0, 33);
        message_on(0, 18, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_neck(2, 0, 0, -120, 12, 12);
        wsleep();
        wsleeping();
        cut_chg(6);
        evt_next();
        work_set(WK_PLAYER, 0);
        plc_neck(5, 2, 0, 0, 192, 192);
        plc_motion(0, 32, 0);
        bits[5][1] = 1;
        sleep(10, 63);
        member_copy(16, 0);
        var_10 &= FFFD;
        member_set2(0, 16);
        plc_neck(5, 2, 0, 0, 192, 192);
        while (
        {
            evt_next();
        }
        bits[5][1] = 0;
        xa_on(0, 34);
        message_on(0, 19, 0, 0, 0);
        work_set(WK_SPLAYER, 0);
        plc_neck(5, 1, 0, 0, 192, 192);
        plc_motion(0, 0, 16);
        sleep(10, 30);
        plc_motion(0, 0, 144);
        sleep(10, 30);
        wsleep();
        wsleeping();
        xa_on(0, 35);
        message_on(0, 20, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 18, 0);
        plc_neck(2, 0, 256, 256, 32, 32);
        sleep(10, 8);
        plc_neck(2, 0, -256, 256, 32, 32);
        sleep(10, 16);
        plc_neck(2, 0, 256, 256, 32, 32);
        sleep(10, 16);
        plc_neck(5, 2, 0, 0, 32, 32);
        sleep(10, 20);
        plc_motion(1, 6, 16);
        sleep(10, 50);
        plc_motion(0, 38, 0);
        sleep(10, 40);
        plc_motion(0, 42, 144);
        sleep(10, 20);
        plc_motion(0, 40, 20);
        sleep(10, 40);
        plc_motion(0, 41, 0);
        sleep(10, 40);
        plc_motion(0, 41, 144);
        sleep(10, 50);
        wsleep();
        wsleeping();
        xa_on(0, 36);
        message_on(0, 21, 0, 0, 0);
        work_set(WK_SPLAYER, 0);
        plc_motion(0, 1, 0);
        sleep(10, 30);
        wsleep();
        wsleeping();
        xa_on(0, 37);
        message_on(0, 22, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 43, 16);
        plc_neck(4, 4, 0, 0, 32, 32);
        sleep(10, 40);
        plc_neck(5, 2, 0, 0, 32, 32);
        sleep(10, 20);
        plc_motion(0, 42, 0);
        sleep(10, 20);
        plc_motion(0, 42, 144);
        sleep(10, 20);
        plc_motion(0, 40, 20);
        wsleep();
        wsleeping();
        if (game.scenario == 0)
        {
            work_set(WK_OBJECT, 8);
            super_set(0, 64, 142, 32, 218, 18, -1088, 0, -1856);
        }
        work_set(WK_PLAYER, 0);
        plc_motion(1, 6, 128);
        sleep(10, 24);
        if (game.scenario == 0)
        {
            main_24();
            work_set(WK_OBJECT, 8);
            super_reset(0, -1088, 0, -1856);
            pos_set(0, 0, -20000, 0);
        }
        cut_auto(1);
        work_set(WK_PLAYER, 0);
        plc_ret();
        work_set(WK_SPLAYER, 0);
        plc_ret();
        bits[1][3] = 1;
        aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_29, 0, 0);
        aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_2A, 0, 0);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_22()
    {
        work_set(WK_SPLAYER, 0);
        member_copy(16, 0);
        var_10 |= 02;
        member_set2(0, 16);
        plc_motion(0, 2, 64);
        member_set(15, 0, 14);
        sleep(10, 30);
        plc_motion(0, 3, 20);
        while (
        {
            evt_next();
        }
        bits[5][1] = 0;
        plc_motion(0, 4, 0);
        sleep(10, 53);
        pos_set(0, -25781, 0, -19039);
        evt_next();
        plc_dest(0, 7, 33, -26335, -19311);
        main_2C();
        bits[5][1] = 1;
        member_copy(16, 0);
        var_10 &= FFFD;
        member_set2(0, 16);
        return 0;
    }

    main_23()
    {
        work_set(WK_PLAYER, 0);
        member_copy(16, 0);
        var_10 |= 02;
        member_set2(0, 16);
        plc_motion(0, 30, 64);
        member_set(15, 48, 6);
        sleep(10, 30);
        plc_motion(0, 31, 20);
        sleep(10, 60);
        plc_stop();
        return 0;
    }

    main_24()
    {
        sleep(10, 30);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 33, 16);
        sleep(10, 40);
        se_on(2, 268, 1, 0, 0, 0);
        sleep(10, 30);
        xa_on(0, 38);
        message_on(0, 23, 0, 0, 0);
        wsleep();
        wsleeping();
        xa_on(0, 39);
        message_on(0, 24, 0, 0, 0);
        plc_motion(0, 34, 0);
        wsleep();
        wsleeping();
        xa_on(0, 40);
        message_on(0, 25, 0, 0, 0);
        plc_motion(0, 33, 0);
        wsleep();
        wsleeping();
        xa_on(0, 41);
        sleep(10, 60);
        plc_motion(0, 35, 16);
        wsleep();
        wsleeping();
        se_on(2, 268, 1, 0, 0, 0);
        plc_motion(0, 18, 144);
        sleep(10, 60);
        return 0;
    }

    main_25()
    {
        if (bits[8][55] == 1 && bits[3][8] == 0)
        {
            sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 0, 0, 0, 0, 255, -16641, 0, -23700, 2336, 0, 0);
        }
        else
        {
            if (bits[3][8] == 1 && bits[3][34] == 0)
            {
                bits[1][3] = 1;
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 0, 32, 0, 255, -16641, 0, -23700, 2336, 0, 0);
                work_set(WK_SPLAYER, 0);
                switch (var_1B)
                {
                case 539:
                    pos_set(0, -26159, 0, -18908);
                    dir_set(0, 0, 1024, 0);
                    break;
                    pos_set(0, -17813, 0, -22784);
                    dir_set(0, 0, 168, 0);
                    break;
                }
                aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_29, 0, 0);
                aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_2A, 0, 0);
            }
        }
        return 0;
    }

    main_26()
    {
        evt_next();
        work_set(WK_SPLAYER, 0);
        plc_neck(5, 1, 0, 0, 32, 32);
        plc_motion(2, 2, 4);
        if (arr[29] > 30000)
        {
            work_set(WK_PLAYER, 0);
            member_copy(4, 11);
            member_copy(5, 13);
            work_set(WK_SPLAYER, 0);
            if ()
            {
                work_copy(5, 8, 1);
                work_copy(4, 2, 1);
            }
            else
            {
                work_copy(5, 10, 1);
                work_copy(4, 4, 1);
                plc_dest(0, 9, 33, 0, 0);
                main_2C();
                plc_motion(2, 2, 4);
            }
        }
        sleep(10, 4);
        goto off_3C5C;
        return 0;
    }

    main_27()
    {
        bits[3][12] = 1;
        bits[2][7] = 1;
        sleep(10, 4);
        game.cutscene = 1;
        work_set(WK_PLAYER, 0);
        plc_motion(0, 24, 0);
        sleep(10, 20);
        plc_neck(2, 0, -512, 0, 12, 12);
        sleep(10, 30);
        cut_chg(2);
        sleep(10, 90);
        cut_old();
        evt_next();
        xa_on(0, 44);
        message_on(0, 31, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        plc_motion(0, 24, 0);
        sleep(10, 20);
        plc_neck(2, 0, 256, 0, 36, 36);
        sleep(10, 15);
        plc_neck(2, 0, -256, 0, 36, 36);
        sleep(10, 15);
        plc_neck(0, 0, 0, 0, 36, 36);
        sleep(10, 15);
        plc_ret();
        wsleep();
        wsleeping();
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_28()
    {
        bits[3][10] = 1;
        message_on(0, 30, 0, 255, 255);
        aot_reset(3, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_1F, 0, 0);
        return 0;
    }

    main_29()
    {
        bits[1][3] = 0;
        aot_reset(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 13, 178, 0, 0, 44, 35);
        aot_on(0);
        return 0;
    }

    main_2A()
    {
        bits[1][3] = 0;
        aot_reset(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 55, 212, 0, 0, 12, 218);
        aot_on(1);
        return 0;
    }

    main_2B()
    {
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        return 0;
    }

    main_2C()
    {
        do
        {
            evt_next();
        } while (bits[5][33] == 0);
        return 0;
    }

    main_2D()
    {
        work_set(WK_PLAYER, 0);
        plc_ret();
        bits[2][7] = 0;
        game.cutscene = 0;
        cut_auto(1);
        return 0;
        db(0x48, 0x58);
    }
}
