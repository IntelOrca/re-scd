.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -21070, -24800, 1800, 1800, -11470, 0, -13410, 0, 5, 6, 5, 0, 41, 1, 0, 0, UNLOCKED, 0);
        if (game.player == 0)
        {
            door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 1, 1, -21274, 0, -23553, 2064, 5, 1, 0, 0, 39, 0, 0, 0, UNLOCKED, 0);
        }
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 16, -21700, -1350, -26550, 0, 3072, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        aot_set(2, SCE_ITEMBOX, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -22870, -26810, 2400, 1800, 0, 0, 1, 0, 0, 0);
        aot_set(9, SCE_SAVE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -24525, -25300, 1800, 1700, 10, 0, 0, 0, 0, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 16, -23450, -1260, -25450, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 16, -19100, -2300, -16540, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(3, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -24525, -25300, 1800, 1700, ITEM_INKRIBBON, 3, 27, 3, 0);
        item_aot_set(4, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -19760, -17470, 2000, 2000, ITEM_HERBG, 1, 52, 2, 0);
        if (game.scenario == 0)
        {
            obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 16, -25500, -1260, -21450, 0, 1408, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(6, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -26535, -21610, 1800, 1800, ITEM_ACIDROUNDS, 6, 54, 5, 0);
            item_aot_set(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -32000, -32000, 1, 1, ITEM_FLAMEROUNDS, 6, 53, 255, 0);
        }
        else
        {
            obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -25500, -1260, -21450, 0, 1408, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -32000, -32000, 1, 1, ITEM_HANDGUNAMMO, 15, 53, 255, 0);
            item_aot_set(6, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -26535, -21610, 1800, 1800, ITEM_FLAMEROUNDS, 6, 54, 4, 0);
        }
        if (bits[34][53] == 0)
        {
            aot_set(10, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -24620, -16365, 2200, 1800, 255, 0, I_GOSUB, main_0D, 0, 0);
        }
        aot_set(8, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -26535, -23310, 1800, 8000, 18, 0, 0, 0, 255, 255);
        if (bits[4][130] == 0)
        {
            if (game.scenario == 0)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHCLAIRESJACKET, 0, 0, 0, 0, 0, 255, -19050, 90, -19850, 0, 256, 84);
                work_set(WK_SPLAYER, 0);
                member_copy(16, 0);
                var_10 |= 400;
                member_set2(0, 16);
                sce_bgm_control(1, 1, 0, 0, 0);
                evt_exec(255, I_GOSUB, main_02);
            }
            else
            {
                if (bits[34][29] == 1)
                {
                    if ()
                    {
                        keep_item_ck(98);
                        sce_em_set(0, 255, ENEMY_SHERRYWITHCLAIRESJACKET, 0, 4, 0, 32, 0, 255, -21285, 0, -24505, 2690, 0, 0);
                    }
                    else
                    {
                        sce_em_set(0, 255, ENEMY_SHERRYWITHCLAIRESJACKET, 0, 4, 0, 32, 0, 255, -23200, 0, -19850, 928, 0, 0);
                    }
                    aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0C, 0, 0);
                }
                else
                {
                    if (bits[1][3] == 1)
                    {
                        sce_em_set(0, 255, ENEMY_SHERRYWITHCLAIRESJACKET, 0, 4, 0, 32, 0, 255, -21285, 0, -24505, 2690, 0, 0);
                        aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0C, 0, 0);
                    }
                }
            }
        }
        else
        {
            if (bits[3][132] == 0)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHCLAIRESJACKET, 0, 0, 0, 0, 0, 255, -19050, 90, -19850, 0, 256, 84);
                work_set(WK_SPLAYER, 0);
                member_copy(16, 0);
                var_10 |= 400;
                member_set2(0, 16);
            }
            else
            {
                aot_set(7, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20470, -21450, 1800, 3600, 20, 0, 0, 0, 255, 255);
            }
        }
        return 0;
    }

    main_01()
    {
        return 0;
    }

    main_02()
    {
        evt_next();
        sce_fade_set(1, 2, 7, 0, 248);
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[4][130] = 1;
        work_set(WK_PLAYER, 0);
        pos_set(0, -20970, 0, -19260);
        dir_set(0, 0, 400, 0);
        plc_neck(5, 2, 0, 0, 244, 244);
        cut_auto(0);
        cut_chg(1);
        plc_motion(1, 6, 192);
        plc_cnt(5);
        sleep(10, 20);
        work_set(WK_SPLAYER, 0);
        plc_neck(2, 0, 0, 320, 0, 255);
        sleep(10, 20);
        work_set(WK_PLAYER, 0);
        xa_on(0, 14);
        sleep(10, 40);
        plc_neck(6, 0, 0, 0, 0, 0);
        main_03();
        work_set(WK_PLAYER, 0);
        plc_ret();
        cut_auto(1);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_03()
    {
        evt_exec(255, I_GOSUB, main_04);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 4, 32, -21300, -22647);
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        plc_motion(0, 22, 0);
        sleep(10, 6);
        plc_neck(5, 2, 0, 0, 30, 30);
        sleep(10, 3);
        wsleep();
        wsleeping();
        cut_chg(4);
        work_set(WK_PLAYER, 0);
        pos_set(0, -21450, 0, -22140);
        dir_set(0, 0, 200, 0);
        plc_motion(0, 22, 0);
        plc_rot(1, 65496);
        sleep(10, 12);
        xa_on(0, 15);
        message_on(0, 10, 0, 0, 0);
        evt_next();
        plc_dest(0, 4, 32, -20768, -19860);
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        evt_exec(255, I_GOSUB, main_05);
        plc_dest(0, 21, 32, 200, 50);
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        plc_motion(0, 17, 0);
        sleep(10, 24);
        plc_motion(0, 18, 132);
        wsleep();
        wsleeping();
        evt_exec(255, I_GOSUB, main_06);
        evt_next();
        wsleep();
        wsleeping();
        evt_next();
        xa_on(0, 17);
        message_on(0, 12, 0, 0, 0);
        evt_next();
        sleep(10, 15);
        plc_motion(0, 16, 0);
        sleep(10, 55);
        plc_motion(0, 19, 0);
        sleep(10, 30);
        plc_motion(0, 19, 128);
        sleep(10, 15);
        plc_motion(0, 17, 0);
        sleep(10, 24);
        wsleep();
        wsleeping();
        cut_chg(3);
        sleep(10, 1);
        plc_motion(1, 6, 0);
        plc_neck(2, 0, 0, -256, 20, 30);
        evt_exec(255, I_GOSUB, main_07);
        evt_next();
        wsleep();
        wsleeping();
        cut_chg(6);
        evt_next();
        evt_exec(255, I_GOSUB, main_08);
        evt_next();
        sleep(10, 30);
        plc_neck(2, 0, 0, 0, 0, 10);
        sleep(10, 10);
        plc_neck(2, 0, 0, -256, 0, 10);
        sleep(10, 40);
        plc_neck(2, 0, 0, 0, 0, 10);
        sleep(10, 10);
        plc_neck(2, 0, 0, -256, 0, 10);
        sleep(10, 100);
        plc_neck(2, 0, 0, 0, 0, 10);
        sleep(10, 10);
        plc_neck(2, 0, 0, -256, 0, 10);
        sleep(10, 40);
        plc_neck(2, 0, 0, 0, 0, 10);
        sleep(10, 20);
        plc_neck(2, 0, 128, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, -256, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, 256, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, -128, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, 0, -256, 0, 10);
        sleep(10, 10);
        plc_neck(2, 0, 240, 256, 20, 20);
        sleep(10, 30);
        wsleep();
        wsleeping();
        evt_exec(255, I_GOSUB, main_09);
        sleep(10, 20);
        plc_neck(2, 0, 0, -256, 30, 20);
        sleep(10, 30);
        wsleep();
        wsleeping();
        sleep(10, 40);
        cut_chg(10);
        evt_next();
        evt_exec(255, I_GOSUB, main_0A);
        evt_next();
        wsleep();
        wsleeping();
        cut_chg(10);
        evt_next();
        xa_on(0, 22);
        message_on(0, 16, 0, 0, 0);
        evt_next();
        plc_neck(2, 0, 128, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, -256, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, 256, 0, 10, 0);
        sleep(10, 15);
        plc_neck(2, 0, -128, 0, 10, 0);
        sleep(10, 10);
        sleep(10, 10);
        wsleep();
        wsleeping();
        cut_chg(4);
        plc_motion(1, 6, 128);
        plc_neck(5, 2, 0, 0, 30, 30);
        sleep(10, 25);
        xa_on(0, 13);
        message_on(0, 17, 0, 0, 0);
        evt_next();
        evt_exec(255, I_GOSUB, main_0B);
        plc_motion(0, 23, 0);
        sleep(10, 20);
        plc_motion(0, 23, 128);
        sleep(10, 20);
        plc_motion(0, 19, 0);
        sleep(10, 30);
        plc_motion(0, 19, 128);
        sleep(10, 30);
        plc_motion(0, 20, 0);
        sleep(10, 30);
        plc_motion(0, 20, 128);
        plc_neck(6, 0, 0, 0, 0, 0);
        sleep(10, 30);
        wsleep();
        wsleeping();
        cut_chg(1);
        sce_bgmtbl_set(0, 7, 6, 65292, 0);
        evt_next();
        return 0;
    }

    main_04()
    {
        sleep(10, 30);
        message_on(0, 9, 0, 0, 0);
        evt_next();
        return 0;
    }

    main_05()
    {
        work_set(WK_SPLAYER, 0);
        plc_neck(2, 0, -512, 320, 30, 30);
        return 0;
    }

    main_06()
    {
        xa_on(0, 16);
        message_on(0, 11, 0, 0, 0);
        work_set(WK_SPLAYER, 0);
        plc_neck(2, 0, 0, 1024, 30, 50);
        sleep(10, 20);
        plc_neck(2, 0, -512, 320, 30, 30);
        sleep(10, 10);
        return 0;
    }

    main_07()
    {
        xa_on(0, 18);
        message_on(0, 13, 0, 0, 0);
        sleep(10, 10);
        return 0;
    }

    main_08()
    {
        xa_on(0, 19);
        message_on(0, 14, 0, 0, 0);
        sleep(10, 10);
        work_set(WK_SPLAYER, 0);
        plc_neck(2, 0, 0, 256, 0, 30);
        sleep(10, 90);
        plc_neck(2, 0, 768, 320, 20, 20);
        sleep(10, 60);
        plc_neck(2, 0, 0, 512, 0, 15);
        sleep(10, 110);
        plc_neck(2, 0, 0, 320, 40, 30);
        sleep(10, 110);
        return 0;
    }

    main_09()
    {
        xa_on(0, 20);
        message_on(0, 15, 0, 0, 0);
        evt_next();
        work_set(WK_SPLAYER, 0);
        plc_neck(2, 0, 0, 512, 0, 30);
        sleep(10, 80);
        plc_neck(2, 0, -512, 256, 30, 20);
        sleep(10, 78);
        return 0;
    }

    main_0A()
    {
        xa_on(0, 21);
        evt_next();
        plc_neck(2, 0, 800, 320, 40, 30);
        sleep(10, 40);
        plc_neck(2, 0, 768, 260, 0, 20);
        sleep(10, 5);
        plc_neck(2, 0, 768, 320, 0, 20);
        sleep(10, 10);
        plc_neck(2, 0, 768, 260, 0, 20);
        sleep(10, 5);
        plc_neck(2, 0, 768, 320, 0, 20);
        sleep(10, 30);
        plc_neck(2, 0, 768, 260, 0, 20);
        sleep(10, 5);
        plc_neck(2, 0, 768, 320, 0, 20);
        sleep(10, 10);
        plc_neck(2, 0, 768, 260, 0, 20);
        sleep(10, 5);
        plc_neck(2, 0, 768, 320, 0, 20);
        sleep(10, 5);
        return 0;
    }

    main_0B()
    {
        sleep(10, 10);
        plc_neck(2, 0, -320, 300, 30, 20);
        sleep(10, 30);
        return 0;
    }

    main_0C()
    {
        if ()
        {
            keep_item_ck(98);
        }
        else
        {
            if (bits[4][139] == 0)
            {
                bits[1][3] = 0;
            }
        }
        aot_reset(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 50, 211, 0, 0, 158, 203);
        aot_on(0);
        return 0;
    }

    main_0D()
    {
        se_on(2, 40, 1, 0, 0, 0);
        aot_on(5);
        evt_next();
        if (bits[34][53] == 1)
        {
            aot_reset(10, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 0, 0);
        }
        return 0;
    }
}
