.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -7391, -26655, 2100, 2900, -3107, 0, -12544, -8, 2, 10, 5, 0, 31, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 5, 0, -26891, -14845, 2130, 1840, -20190, -7200, -22725, -927, 3, 1, 0, 4, 6, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(2, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -24052, -14705, 2000, 1800, -17314, 0, -22704, -681, 3, 1, 8, 0, 6, 1, 0, 0, UNLOCKED, 0);
        if (game.player == 1)
        {
            if (game.scenario == 0)
            {
                work_set(WK_PLAYER, 0);
                if (&6 == 15)
                {
                    bits[30][2] = 1;
                    bits[30][3] = 1;
                }
                else
                {
                    bits[30][0] = 1;
                    bits[30][1] = 1;
                }
                rbj_reset();
            }
            else
            {
                bits[30][0] = 1;
                bits[30][1] = 1;
                rbj_reset();
            }
        }
        return 0;
    }
}

main
{
    main_00()
    {
        mizu_div_set(4);
        obj_model_set(0, 1, 130, 4, 4, 0, 2, 10, 26, -27260, -8100, -23450, 0, -3072, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 1, 130, 4, 4, 0, 3, 10, 26, -10760, -900, -23450, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        evt_exec(255, I_GOSUB, main_0F);
        if (bits[3][34] == 0)
        {
            bits[1][3] = 0;
            bits[3][34] = 1;
            if (game.scenario == 0)
            {
                sce_em_set(0, 255, ENEMY_CLAIREREDFIELD, 0, 0, 4, 30, 0, 255, -8805, -7200, -26072, 2152, 0, 0);
                cut_be_set(1, 1, 0);
                evt_exec(255, I_GOSUB, main_02);
            }
            else
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 8, 4, 32, 0, 255, -9279, -7200, -24607, 1024, 0, 0);
                evt_exec(255, I_GOSUB, main_02);
            }
            obj_model_set(2, 0, 0, 0, 0, 4, 0, 10, 16, -9080, -5900, -23000, 0, -3072, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            aot_set(30, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -10013, -23798, 2640, 1100, 2, 0, 0, 0, 0, 255);
        }
        else
        {
            aot_set(30, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -10013, -23798, 2640, 1100, 2, 0, 0, 0, 0, 255);
        }
        aot_set(3, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 4, 0, -26960, -27060, 19800, 3600, 92, 224, 0, 0, 0, 0);
        aot_set(4, SCE_WATER, SAT_PL | SAT_EM | SAT_OB | SAT_UNDER, 0, 0, -10760, -23450, 3600, 9000, 124, 252, 0, 0, 0, 0);
        work_set(WK_PLAYER, 0);
        if (&17 >= 4)
        {
            main_13();
            evt_exec(255, I_GOSUB, main_10);
        }
        else
        {
            evt_exec(255, I_GOSUB, main_12);
        }
        main_0D();
        return 0;
    }

    main_01()
    {
        return 0;
    }

    main_02()
    {
        game.cutscene = 1;
        bits[2][7] = 1;
        evt_exec(255, I_GOSUB, main_05);
        evt_exec(255, I_GOSUB, main_04);
        while (
        {
            evt_next();
        }
        cut_chg(2);
        sleep(10, 90);
        evt_exec(255, I_GOSUB, main_03);
        cut_chg(10);
        sleep(10, 60);
        cut_chg(10);
        sleep(10, 10);
        nop_8a(0, 6, 0, 0, 0);
        nop_8b(100, 1, 0, 0, 0);
        nop_8c(0, 160, 140, 15, 0, 1, 0);
        sce_bgm_control(2, 1, 0, 100, 64);
        sleep(10, 70);
        if (game.scenario == 0)
        {
            sce_bgmtbl_set(0, 0, 4, 5663, 32768);
            cut_chg(5);
            sleep(10, 150);
        }
        else
        {
            sce_bgmtbl_set(0, 0, 4, 5887, 32768);
            sce_bgmtbl_set(0, 1, 4, 65292, 64);
        }
        while (
        {
            evt_next();
        }
        sleep(10, 10);
        game.cutscene = 0;
        bits[2][7] = 0;
        if (game.scenario == 0)
        {
            sce_bgm_control(0, 1, 0, 100, 64);
        }
        sleep(10, 10);
        cut_auto(1);
        return 0;
    }

    main_03()
    {
        work_set(WK_OBJECT, 2);
        evt_next();
        pos_set(0, -9150, -6800, -23150);
        se_on(2, 267, 516, 0, 0, 0);
        sleep(10, 35);
        main_0B();
        sleep(10, 15);
        se_on(2, 268, 516, 0, 0, 0);
        speed_set(1, -50);
        speed_set(7, -5);
        for 20 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        pos_set(0, 20000, 20000, 20000);
        aot_reset(30, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 2, 0, 0, 0, 0, 255);
        return 0;
    }

    main_04()
    {
        if (game.scenario == 0)
        {
            work_set(WK_PLAYER, 0);
        }
        else
        {
            work_set(WK_SPLAYER, 0);
        }
        pos_set(0, -7512, -7200, -24259);
        sleep(10, 1);
        plc_dest(0, 4, 1, -9279, -23914);
        while (
        {
            evt_next();
        }
        bits[5][1] = 0;
        evt_next();
        pos_set(0, -9279, -7200, -23914);
        plc_dest(0, 21, 1, 1024, 40);
        while (
        {
            evt_next();
        }
        bits[5][1] = 0;
        plc_neck(2, 0, 500, 200, 20, 10);
        member_copy(16, 0);
        var_10 |= 02;
        member_set2(0, 16);
        member_copy(16, 0);
        var_10 |= 08;
        member_set2(0, 16);
        while (
        {
            evt_next();
        }
        if (game.scenario == 0)
        {
            se_on(4, 257, 1, 0, 0, 0);
        }
        else
        {
            se_on(3, 273, 2, 0, 0, 0);
        }
        plc_motion(0, 15, 64);
        for 2 times
        {
            member_copy(16, 16);
            var_10 += 20;
            member_set2(16, 16);
            member_copy(16, 13);
            var_10 += 32;
            member_set2(13, 16);
            evt_next();
        }
        main_0A();
        for 9 times
        {
            member_copy(16, 16);
            var_10 += 40;
            member_set2(16, 16);
            member_copy(16, 13);
            var_10 += 64;
            member_set2(13, 16);
            evt_next();
        }
        pos_set(0, 20000, 20000, 20000);
        while (
        {
            evt_next();
        }
        if (game.scenario == 0)
        {
            main_08();
            main_11();
            main_12();
        }
        if (game.scenario == 0)
        {
            work_set(WK_PLAYER, 0);
        }
        else
        {
            work_set(WK_SPLAYER, 0);
        }
        save(4, 0);
        member_set(16, 0, 0);
        member_set(14, 0, 0);
        member_set(14, 0, 0);
        pos_set(0, -8926, -7200, -21901);
        sleep(10, 3);
        xa_on(0, 3);
        for 20 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 4);
            member_set2(12, 16);
            copy(16, 4);
            var_10 += 14;
            copy(4, 16);
            evt_next();
        }
        evt_exec(255, I_GOSUB, main_09);
        if (game.scenario == 0)
        {
            nop_8c(0, 100, 200, 16, 0, 0, 0);
            nop_8c(0, 200, 100, 16, 0, 16, 0);
        }
        se_on(2, 258, 1, 0, 0, 0);
        pos_set(0, -8926, 0, -21901);
        member_set(15, 0, 4);
        plc_motion(0, 16, 64);
        sleep(10, 70);
        member_set(15, 0, 252);
        plc_motion(2, 2, 64);
        sleep(10, 30);
        member_set(17, 0, 0);
        member_copy(16, 0);
        var_10 &= FFF5;
        member_set2(0, 16);
        if (game.scenario == 0)
        {
            cut_chg(6);
            sleep(10, 2);
            xa_vol(50);
            xa_on(0, 0);
            message_on(0, 0, 0, 0, 0);
            plc_neck(2, 0, 200, 300, 40, 40);
            sleep(10, 5);
            plc_neck(2, 0, -200, 260, 40, 40);
            sleep(10, 5);
            plc_neck(2, 0, 200, 220, 40, 40);
            sleep(10, 5);
            plc_neck(2, 0, -200, 180, 40, 40);
            sleep(10, 5);
            sleep(10, 10);
            plc_neck(2, 0, -200, 260, 40, 40);
            sleep(10, 8);
            plc_neck(2, 0, 200, 220, 40, 40);
            sleep(10, 8);
            wsleep();
            wsleeping();
            xa_on(0, 4);
            message_on(0, 4, 0, 0, 0);
            wsleep();
            wsleeping();
            xa_vol(120);
            xa_on(0, 1);
            plc_neck(2, 0, -100, -200, 40, 40);
            message_on(0, 1, 0, 0, 0);
            sleep(10, 10);
            plc_motion(0, 17, 0);
            sleep(10, 30);
            wsleep();
            wsleeping();
            plc_motion(0, 17, 144);
            sleep(10, 20);
            plc_flg(1, 128);
            plc_neck(2, 0, 200, 200, 40, 40);
            sleep(10, 10);
            plc_neck(2, 0, -200, 200, 40, 40);
            sleep(10, 10);
            plc_neck(2, 0, 200, 200, 40, 40);
            sleep(10, 30);
            bits[5][3] = 1;
            bits[35][8] = 1;
            plc_ret();
        }
        return 0;
    }

    main_05()
    {
        if (game.scenario == 0)
        {
            work_set(WK_SPLAYER, 0);
        }
        else
        {
            work_set(WK_PLAYER, 0);
        }
        evt_next();
        pos_set(0, -8355, -7200, -25670);
        member_set(15, 40, 6);
        plc_dest(0, 4, 2, -8805, -26072);
        while (
        {
            evt_next();
        }
        pos_set(0, -8805, -7200, -26072);
        member_set(15, 40, 6);
        while (
        {
            evt_next();
        }
        while (
        {
            evt_next();
        }
        plc_neck(2, 0, -100, -400, 8, 8);
        sleep(10, 30);
        plc_neck(2, 0, 300, -350, 4, 2);
        sleep(10, 30);
        plc_neck(2, 0, 0, -400, 8, 8);
        sleep(10, 8);
        bits[5][0] = 1;
        sleep(10, 3);
        if (game.scenario == 1)
        {
            main_0C();
        }
        else
        {
            sleep(10, 30);
            plc_neck(2, 0, 800, 40, 40, 40);
            sleep(10, 10);
            plc_motion(0, 17, 72);
            plc_rot(1, 2048);
            sleep(10, 20);
        }
        return 0;
    }

    main_06()
    {
        game.cutscene = 1;
        bits[2][7] = 1;
        evt_exec(255, I_GOSUB, main_07);
        cut_chg(10);
        sleep(10, 60);
        while (
        {
            evt_next();
        }
        cut_chg(0);
        cut_auto(1);
        game.cutscene = 0;
        bits[2][7] = 0;
        return 0;
    }

    main_07()
    {
        work_set(WK_PLAYER, 0);
        evt_next();
        pos_set(0, -8805, -7200, -26072);
        member_set(15, 40, 6);
        main_0C();
        bits[5][3] = 1;
        return 0;
    }

    main_08()
    {
        if (bits[8][186] == 0)
        {
            work_set(WK_OBJECT, 3);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
        }
        if (bits[8][187] == 0)
        {
            work_set(WK_OBJECT, 4);
            member_copy(16, 1);
            var_10 |= 08;
            member_set2(1, 16);
        }
        return 0;
    }

    main_09()
    {
        se_on(2, 266, 1, 0, 0, 0);
        sce_espr_on(0, 1050, 1, 7680, 0, -100, -21900, 1024);
        sleep(10, 2);
        sce_espr_on(0, 1050, 1, 8064, -100, -100, 100, 724);
        sce_espr_on(0, 1050, 1, 7424, 0, -100, 0, 1024);
        sce_espr_on(0, 1050, 1, 8064, 100, -100, -100, 1324);
        return 0;
    }

    main_0A()
    {
        sce_espr_on(0, 538, 0, 4480, -8800, -8000, -23200, 5484);
        sce_espr_on(0, 538, 0, 4352, -8800, -8000, -23200, 5796);
        sce_espr_on(0, 538, 0, 4480, -9000, -8000, -23200, 5920);
        evt_next();
        sce_espr_on(0, 538, 0, 3840, -9000, -7800, -24000, 5484);
        sce_espr_on(0, 538, 0, 3968, -9000, -7800, -24000, 5796);
        sce_espr_on(0, 538, 0, 3840, -9200, -7800, -24000, 5900);
        sce_espr_on(0, 538, 0, 3072, -9000, -8000, -24000, 5484);
        sce_espr_on(0, 538, 0, 3200, -9000, -8000, -24000, 5796);
        sce_espr_on(0, 538, 0, 3072, -9200, -8000, -24000, 5900);
        return 0;
    }

    main_0B()
    {
        sce_espr_on(0, 538, 0, 2688, -8800, -8000, -23200, 5484);
        sce_espr_on(0, 538, 0, 2816, -8800, -8000, -23200, 5796);
        sce_espr_on(0, 538, 0, 2688, -9000, -8000, -23200, 5920);
        sleep(10, 2);
        se_on(2, 283, 0, -8800, -8000, -23200);
        sce_espr_on(0, 538, 0, 4096, -9000, -8000, -24000, 5484);
        sce_espr_on(0, 538, 0, 4224, -9000, -8000, -24000, 5796);
        sce_espr_on(0, 538, 0, 4096, -9200, -8000, -24000, 5900);
        evt_next();
        return 0;
    }

    main_0C()
    {
        work_set(WK_PLAYER, 0);
        sleep(10, 30);
        plc_neck(2, 0, 800, 40, 40, 40);
        sleep(10, 10);
        plc_motion(0, 17, 72);
        plc_rot(1, 2048);
        sleep(10, 20);
        message_on(0, 0, 0, 0, 0);
        plc_motion(2, 2, 4);
        plc_neck(4, 2, 0, 0, 40, 40);
        xa_on(0, 0);
        wsleep();
        wsleeping();
        plc_neck(1, -9191, -7200, -23910, 40, 40);
        bits[5][2] = 0;
        plc_dest(0, 21, 2, 2584, 40);
        while (
        {
            evt_next();
        }
        sleep(10, 10);
        message_on(0, 4, 0, 0, 0);
        xa_on(0, 4);
        wsleep();
        wsleeping();
        sleep(10, 2);
        bits[5][3] = 1;
        cut_chg(0);
        plc_ret();
        return 0;
    }

    main_0D()
    {
        aot_set(31, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -29523, -27258, 2900, 6800, 3, 0, 0, 0, 0, 255);
        return 0;
    }

    main_0E()
    {
        evt_next();
        switch (var_1A)
        {
        case 0:
        case 10:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 101, 31);
            sce_bgm_control(1, 0, 1, 1, 65);
            break;
        case 1:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 101, 51);
            sce_bgm_control(1, 0, 1, 1, 65);
            break;
        case 2:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 71, 65);
            sce_bgm_control(1, 0, 1, 1, 65);
            break;
        case 3:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 71, 81);
            sce_bgm_control(1, 0, 1, 1, 65);
            break;
        case 4:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 61, 128);
            sce_bgm_control(1, 0, 1, 1, 65);
            break;
        case 5:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 1, 71, 65);
            break;
        case 6:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 1, 51, 65);
            break;
        case 7:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 1, 41, 65);
            break;
        case 8:
            sce_bgm_control(0, 0, 1, 91, 65);
            sce_bgm_control(0, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 1, 41, 21);
            break;
        case 9:
            sce_bgm_control(0, 0, 1, 71, 65);
            sce_bgm_control(0, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 1, 21, 65);
            break;
        }
        do
        {
            evt_next();
        } while (bits[1][11] == 0);
        goto off_1E37;
        return 0;
    }

    main_0F()
    {
        evt_next();
        switch (var_1A)
        {
        case 0:
        case 10:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 101, 31);
            sce_bgm_control(1, 0, 3, 1, 65);
            break;
        case 1:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 101, 51);
            sce_bgm_control(1, 0, 3, 1, 65);
            break;
        case 2:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 71, 81);
            sce_bgm_control(1, 0, 3, 1, 65);
            break;
        case 3:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 71, 81);
            sce_bgm_control(1, 0, 3, 1, 65);
            break;
        case 4:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 61, 128);
            sce_bgm_control(1, 0, 3, 1, 65);
            break;
        case 4:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 71, 65);
            break;
        case 5:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 71, 65);
            break;
        case 6:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 51, 65);
            break;
        case 7:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 41, 65);
            break;
        case 8:
            sce_bgm_control(1, 0, 1, 91, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 41, 21);
            break;
        case 9:
            sce_bgm_control(1, 0, 1, 71, 65);
            sce_bgm_control(1, 0, 2, 1, 65);
            sce_bgm_control(1, 0, 3, 21, 65);
            break;
        }
        do
        {
            evt_next();
        } while (bits[1][11] == 0);
        goto off_1F5D;
        return 0;
    }

    main_10()
    {
        evt_next();
        sce_espr_on(0, 284, 0, 4096, -12900, -9600, -24200, 1024);
        sce_espr_on(0, 34, 0, 4096, -7300, -11500, -25300, 0);
        sce_espr_on(0, 34, 0, 4096, -7300, -11500, -25300, 0);
        sce_espr_on(0, 34, 0, 4096, -26700, -13200, -19700, 0);
        sce_espr_on(0, 34, 0, 4096, -26700, -13200, -19700, 0);
        return 0;
    }

    main_11()
    {
        sce_espr_kill(34, 0, 0, 0);
        sce_espr_kill(28, 1, 0, 0);
        return 0;
    }

    main_12()
    {
        evt_next();
        sce_espr_on(0, 34, 0, 4096, -22600, -5300, -16900, 0);
        sce_espr_on(0, 34, 0, 4096, -22600, -5300, -16900, 0);
        sce_espr_on(0, 284, 0, 4096, -9200, -7900, -23450, 3072);
        sce_espr_on(0, 284, 0, 4096, -8920, -7850, -23450, 3072);
        sce_espr_on(0, 284, 0, 4096, -8660, -7900, -23450, 3072);
        sce_espr_on(0, 284, 0, 4096, -8400, -7900, -23450, 3072);
        return 0;
    }

    main_13()
    {
        obj_model_set(3, 0, 0, 0, 0, 4, 0, 10, 16, -25226, -9000, -17689, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 5, 0, -25226, -17689, 1520, 1500, ITEM_HERBB, 1, 186, 3, 1);
        obj_model_set(4, 0, 0, 0, 0, 4, 0, 10, 16, -25226, -9000, -19189, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        item_aot_set(6, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 5, 0, -25226, -19189, 1520, 1500, ITEM_HERBB, 1, 187, 4, 1);
        return 0;
        db(0x00, 0x00);
    }
}
