.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -28772, -3439, 2200, 2800, -2700, 0, -19832, -2068, 3, 7, 4, 0, 10, 0, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -9912, -15066, 1810, 2350, -26351, 0, -10330, -4204, 3, 4, 0, 0, 35, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(2, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 7, 0, -18042, -22606, 2220, 1370, -7824, 0, -25140, 2000, 3, 11, 0, 0, 22, 4, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        work_set(WK_PLAYER, 0);
        if (&6 == 15)
        {
            bits[30][0] = 1;
            bits[30][2] = 1;
            rbj_reset();
        }
        else
        {
            bits[30][1] = 1;
            rbj_reset();
        }
        if (bits[1][3] == 1)
        {
            if (game.last_room == 0x404)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 1, 32, 0, 255, -12345, -1800, -13317, -2024, 0, 0);
            }
            if (game.last_room == 0x407)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 0, 32, 0, 255, -24729, 0, -2717, 4, 0, 0);
            }
            if (game.last_room == 0x40B)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 0, 32, 0, 255, -13529, 0, -20717, 4, 0, 0);
            }
        }
        main_02();
        main_03();
        if (game.scenario == 0)
        {
            bits[3][35] = 0;
        }
        else
        {
            item_aot_set(6, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -9100, -27180, 2430, 1450, ITEM_WOLFMEDAL, 1, 190, 255, 1);
        }
        item_aot_set(7, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, -9010, -25500, 2130, 1350, ITEM_FLAMEROUNDS, 6, 191, 255, 1);
        return 0;
    }

    main_01()
    {
        main_04();
        return 0;
    }

    main_02()
    {
        if (bits[8][184] == 1)
        {
            if (bits[4][189] == 1)
            {
                if (bits[4][118] == 0)
                {
                    sce_em_set(0, 0, ENEMY_ZOMBIEGUY1, 0, 0, 0, 37, 0, 66, -21000, 0, -4120, 3415, 0, 0);
                    sce_em_set(0, 1, ENEMY_ZOMBIEGUY1, 0, 0, 0, 37, 0, 67, -11000, 0, -2600, 1240, 0, 0);
                    sce_em_set(0, 2, ENEMY_ZOMBIEGUY1, 0, 0, 0, 37, 0, 68, -13860, 0, -8200, 1288, 0, 0);
                }
                else
                {
                    sce_em_set(0, 0, ENEMY_ZOMBIEGUY1, 0, 0, 0, 3, 0, 66, -21000, 0, -4120, 3415, 0, 0);
                    sce_em_set(0, 1, ENEMY_ZOMBIEGUY1, 0, 0, 0, 3, 0, 67, -11000, 0, -2600, 1240, 0, 0);
                    sce_em_set(0, 2, ENEMY_ZOMBIEGUY1, 0, 0, 0, 3, 0, 68, -13860, 0, -8200, 1288, 0, 0);
                }
            }
            else
            {
                aot_set(18, SCE_EVENT, SAT_PL | SAT_UNDER, 0, 0, -17300, -6270, 5360, 6360, 255, 0, I_GOSUB, main_0A, 0, 0);
                if (bits[4][118] == 0)
                {
                    sce_em_set(0, 0, ENEMY_ZOMBIEGUY1, 2, 64, 0, 37, 0, 66, -21000, 0, -4120, 3415, 0, 0);
                    sce_em_set(0, 1, ENEMY_ZOMBIEGUY1, 4, 64, 0, 37, 0, 67, -11000, 0, -2600, 1240, 0, 0);
                    sce_em_set(0, 2, ENEMY_ZOMBIEGUY1, 4, 64, 0, 37, 0, 68, -13860, 0, -8200, 1288, 0, 0);
                }
                else
                {
                    sce_em_set(0, 0, ENEMY_ZOMBIEGUY1, 2, 64, 0, 3, 0, 66, -21000, 0, -4120, 3415, 0, 0);
                    sce_em_set(0, 1, ENEMY_ZOMBIEGUY1, 4, 64, 0, 3, 0, 67, -11000, 0, -2600, 1240, 0, 0);
                    sce_em_set(0, 2, ENEMY_ZOMBIEGUY1, 4, 64, 0, 3, 0, 68, -13860, 0, -8200, 1288, 0, 0);
                }
            }
        }
        else
        {
            sce_em_set(0, 0, ENEMY_SPIDER, 75, 0, 1, 16, 0, 31, -17432, -3600, -5075, 4088, 0, 0);
            sce_em_set(0, 1, ENEMY_SPIDER, 67, 0, 0, 16, 0, 32, -14113, -7200, -2256, 2016, 0, 0);
        }
        return 0;
    }

    main_03()
    {
        aot_set(17, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -18042, -22606, 2220, 1370, 255, 0, I_GOSUB, main_09, 0, 0);
        if (bits[4][118] == 0)
        {
            mizu_div_set(6);
            obj_model_set(0, 1, 130, 4, 7, 0, 6, 10, 26, -26686, -1040, -96, 0, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            obj_model_set(1, 1, 130, 4, 7, 0, 7, 10, 26, -16189, -1040, -26996, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            aot_set(3, SCE_WATER, SAT_PL | SAT_EM | SAT_SPL | SAT_OB | SAT_UNDER, 0, 0, -28360, -5440, 22110, 13570, 240, 251, 0, 0, 0, 0);
            aot_set(4, SCE_WATER, SAT_PL | SAT_EM | SAT_SPL | SAT_OB | SAT_UNDER, 0, 0, -18230, -27910, 5790, 23110, 240, 251, 0, 0, 0, 0);
            sce_espr_on2(1, 28, 1, 0, 0, 0, 16, 140, 179, 214, 241, 109, 234, 0, 12);
            sce_espr_on2(2, 28, 1, 0, 0, 0, 16, 140, 179, 214, 241, 109, 234, 0, 12);
        }
        else
        {
            aot_set(12, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -27190, -5370, 3500, 1410, 6, 0, 0, 0, 255, 255);
            aot_set(13, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -16790, -27770, 1560, 2750, 7, 0, 0, 0, 255, 255);
        }
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 16, -16218, -6696, -21834, 1024, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (bits[4][32] == 0)
        {
            aot_reset(17, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 1, 0, 0, 0, 255, 255);
            evt_exec(255, I_GOSUB, main_08);
        }
        else
        {
            evt_exec(255, I_GOSUB, main_07);
        }
        aot_set(8, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -7860, -5570, 2490, 5650, 2, 0, 0, 0, 255, 255);
        aot_set(9, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -16770, -28670, 4530, 1800, 3, 0, 0, 0, 255, 255);
        aot_set(10, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12290, -5770, 3460, 1050, 4, 0, 0, 0, 255, 255);
        aot_set(11, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -13090, -16870, 2000, 1250, 5, 0, 0, 0, 255, 255);
        return 0;
    }

    main_04()
    {
        if (arr[26] == 7)
        {
            work_set(WK_OBJECT, 2);
            pos_set(0, -16218, -6696, -21834);
        }
        else
        {
            work_set(WK_OBJECT, 2);
            pos_set(0, -16218, -20000, -21834);
        }
        main_05();
        return 0;
    }

    main_05()
    {
        if (bits[4][32] == 0)
        {
            switch (var_1A)
            {
            case 0:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 80, 40);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 1, 40);
                break;
            case 1:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 70, 50);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 1, 40);
                break;
            case 2:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 90, 80);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 0, 64);
                break;
            case 3:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 60, 70);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 1, 80);
                break;
            case 4:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 80, 90);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 5:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 64);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 80, 70);
                break;
            case 6:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 20);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 80, 90);
                break;
            case 7:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 40, 64);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 100, 90);
                break;
            case 8:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 20);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 80, 40);
                break;
            case 9:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 30, 64);
                sce_bgm_control(0, 0, 3, 0, 64);
                sce_bgm_control(1, 0, 1, 100, 64);
                break;
            }
        }
        else
        {
            switch (var_1A)
            {
            case 0:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 80, 40);
                sce_bgm_control(1, 0, 1, 1, 40);
                break;
            case 1:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 70, 50);
                sce_bgm_control(1, 0, 1, 1, 40);
                break;
            case 2:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 90, 80);
                sce_bgm_control(1, 0, 1, 1, 64);
                break;
            case 3:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 60, 70);
                sce_bgm_control(1, 0, 1, 1, 80);
                break;
            case 4:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 80, 90);
                sce_bgm_control(1, 0, 1, 1, 64);
                break;
            case 5:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 64);
                sce_bgm_control(1, 0, 1, 1, 70);
                break;
            case 6:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 20);
                sce_bgm_control(1, 0, 1, 1, 90);
                break;
            case 7:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 40, 64);
                sce_bgm_control(1, 0, 1, 1, 90);
                break;
            case 8:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 50, 20);
                sce_bgm_control(1, 0, 1, 1, 40);
                break;
            case 9:
                sce_bgm_control(0, 0, 1, 90, 64);
                sce_bgm_control(0, 0, 2, 30, 64);
                sce_bgm_control(1, 0, 1, 1, 64);
                break;
            }
        }
        do
        {
            sleep(10, 1);
        } while (bits[1][11] == 0);
        goto off_12A8;
        return 0;
    }

    main_06()
    {
        member_set(2, 1, 0);
        member_set(3, 8, 0);
        member_set(4, 3, 0);
        member_set(5, 0, 0);
        member_copy(16, 7);
        var_10 &= BFFF;
        member_set2(7, 16);
        return 0;
    }

    main_07()
    {
        work_set(WK_OBJECT, 2);
        member_copy(16, 14);
        var_10 += 04;
        member_set2(14, 16);
        evt_next();
        goto off_153F;
        return 0;
    }

    main_08()
    {
        work_set(WK_OBJECT, 2);
        member_copy(16, 14);
        var_10 += 190;
        member_set2(14, 16);
        evt_next();
        goto off_155B;
        return 0;
    }

    main_09()
    {
        message_on(0, 9, 0, 255, 255);
        evt_next();
        if (input.question == 0)
        {
            aot_on(2);
        }
        return 0;
    }

    main_0A()
    {
        bits[4][189] = 1;
        aot_reset(18, SCE_AUTO, SAT_PL | SAT_UNDER, 0, 0, 0, 0, 0, 0);
        work_set(WK_ENEMY, 0);
        member_copy(16, 7);
        var_10 &= BFFF;
        member_set2(7, 16);
        sleep(10, 5);
        work_set(WK_ENEMY, 1);
        member_copy(16, 7);
        var_10 &= BFFF;
        member_set2(7, 16);
        sleep(10, 30);
        work_set(WK_ENEMY, 2);
        member_copy(16, 7);
        var_10 &= BFFF;
        member_set2(7, 16);
        return 0;
    }
}
