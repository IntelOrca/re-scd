.version 2
init
{
    init_00()
    {
        if (bits[4][145] == 1)
        {
            door_aot_se(3, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, -21113, 0, -23396, -2048, 5, 1, 0, 0, 39, 0, 0, 0, UNLOCKED, 0);
        }
        else
        {
            aot_set(3, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, 9, 0, 0, 0, 255, 255);
        }
        door_aot_se(4, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -13436, -23732, 5900, 1080, -23437, -5400, -4400, 4712, 5, 3, 0, 3, 38, 0, 0, 0, UNLOCKED, 0);
        obj_model_set(0, 0, 0, 0, 0, 0, 0, 10, 0, -11282, 0, -583, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(1, 0, 0, 0, 0, 0, 0, 10, 0, -10324, -18000, -9930, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 0, -10214, 0, -15119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        main_02();
        work_set(WK_OBJECT, 1);
        pos_set(0, 0, -18000, 0);
        work_set(WK_OBJECT, 2);
        pos_set(0, 0, -18000, 0);
        return 0;
    }

    main_01()
    {
        main_05();
        return 0;
    }

    main_02()
    {
        if (game.last_room == 0x600)
        {
            evt_exec(255, I_GOSUB, main_06);
        }
        save(6, 16);
        main_05();
        if (bits[4][145] == 1)
        {
            aot_set(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -20476, -3492, 1410, 5080, 255, 0, I_GOSUB, main_03, 0, 0);
        }
        aot_set(2, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -13436, -23732, 5900, 1080, 255, 0, I_GOSUB, main_04, 0, 0);
        return 0;
    }

    main_03()
    {
        aot_on(3);
        return 0;
    }

    main_04()
    {
        aot_on(4);
        return 0;
    }

    main_05()
    {
        if ()
        {
            work_copy(6, 4, 1);
            switch (var_1A)
            {
            case 0:
                sce_bgm_control(1, 0, 1, 60, 64);
                break;
            case 1:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 2:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 3:
                sce_bgm_control(1, 0, 1, 40, 64);
                break;
            case 4:
                sce_bgm_control(1, 0, 1, 40, 64);
                break;
            case 5:
                sce_bgm_control(1, 0, 1, 40, 20);
                break;
            case 6:
                sce_bgm_control(1, 0, 1, 60, 64);
                break;
            case 7:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            case 8:
                sce_bgm_control(1, 0, 1, 50, 64);
                break;
            }
            copy(6, 26);
        }
        return 0;
    }

    main_06()
    {
        evt_next();
        bits[2][7] = 1;
        game.cutscene = 1;
        cut_chg(3);
        work_set(WK_PLAYER, 0);
        pos_set(0, -10105, -6000, -583);
        dir_set(0, 0, -1912, 0);
        plc_motion(0, 15, 0);
        evt_exec(255, I_GOSUB, main_08);
        sleep(10, 10);
        evt_exec(255, I_GOSUB, main_07);
        save(4, 0);
        for 10 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 4);
            member_set2(12, 16);
            copy(16, 4);
            var_10 += 5A;
            copy(4, 16);
            evt_next();
        }
        plc_motion(0, 16, 0);
        se_on(2, 29, 0, -10105, 0, -583);
        nop_8a(0, 3, 0, 0, 0);
        nop_8b(255, 5, 0, 0, 0);
        member_copy(16, 12);
        calc2(OP_ADD, 16, 4);
        member_set2(12, 16);
        copy(16, 4);
        var_10 += 5A;
        copy(4, 16);
        evt_next();
        member_copy(16, 12);
        calc2(OP_ADD, 16, 4);
        member_set2(12, 16);
        copy(16, 4);
        var_10 += 5A;
        copy(4, 16);
        evt_next();
        pos_set(0, -10105, 0, -583);
        sleep(10, 25);
        plc_neck(2, 0, 0, -1024, 96, 96);
        sleep(10, 23);
        plc_motion(0, 17, 0);
        sleep(10, 30);
        plc_neck(2, 0, 0, 128, 16, 16);
        plc_motion(0, 17, 128);
        sleep(10, 20);
        se_on(2, 12, 0, -10214, 0, -15119);
        sleep(10, 10);
        plc_neck(2, 0, 0, 0, 96, 96);
        sleep(10, 20);
        plc_neck(2, 0, 1024, 0, 32, 32);
        sleep(10, 20);
        plc_neck(2, 0, -1024, 0, 32, 32);
        sleep(10, 20);
        plc_neck(2, 0, 1024, 0, 32, 32);
        sleep(10, 40);
        plc_dest(0, 9, 32, -5000, -367);
        plc_rot(0, 200);
        plc_neck(2, 0, 0, 0, 32, 32);
        sleep(10, 40);
        plc_neck(2, 0, 0, -1024, 32, 32);
        sleep(10, 40);
        sce_bgm_control(1, 2, 0, 0, 0);
        evt_next();
        movie_on(7);
        evt_next();
        sce_bgm_control(1, 1, 1, 40, 64);
        work_set(WK_PLAYER, 0);
        plc_dest(0, 5, 32, -5000, -367);
        sleep(10, 8);
        plc_dest(0, 6, 32, -5000, -367);
        sleep(10, 30);
        plc_neck(2, 0, 0, 0, 32, 32);
        sleep(10, 10);
        work_set(WK_PLAYER, 0);
        plc_ret();
        cut_auto(1);
        bits[2][7] = 0;
        game.cutscene = 0;
        return 0;
    }

    main_07()
    {
        se_on(2, 16, 0, -10105, -6000, -583);
        sce_espr_on(0, 25, 0, 4096, -10105, -6000, -583, 0);
        sleep(10, 3);
        sce_espr_on(0, 25, 0, 4096, -10105, -6000, -583, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 4096, -11105, -6000, -583, 0);
        sleep(10, 2);
        sce_espr_on(0, 25, 0, 4096, -11105, -6000, -583, 0);
        sleep(10, 5);
        sce_espr_on(0, 25, 0, 4096, -9305, -6000, -1583, 0);
        sleep(10, 4);
        return 0;
    }

    main_08()
    {
        work_set(WK_OBJECT, 0);
        pos_set(0, -10805, -5700, -583);
        dir_set(0, 0, 0, 0);
        save(5, 0);
        for 9 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 16);
            var_10 += 28;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        for 2 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 16);
            var_10 -= 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        se_on(2, 270, 0, -10805, -5700, -583);
        nop_8a(0, 5, 0, 0, 0);
        nop_8b(250, 5, 0, 0, 0);
        nop_8c(0, 200, 50, 10, 0, 5, 0);
        member_set(12, 0, 0);
        member_copy(16, 11);
        var_10 -= 32;
        member_set2(11, 16);
        member_copy(16, 16);
        var_10 -= 50;
        member_set2(16, 16);
        evt_next();
        save(5, -320);
        for 6 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 11);
            var_10 -= 32;
            member_set2(11, 16);
            member_copy(16, 16);
            var_10 -= 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        for 2 times
        {
            member_copy(16, 12);
            calc2(OP_ADD, 16, 5);
            member_set2(12, 16);
            member_copy(16, 11);
            var_10 -= 28;
            member_set2(11, 16);
            member_copy(16, 16);
            var_10 += 50;
            member_set2(16, 16);
            copy(16, 5);
            var_10 += 5A;
            copy(5, 16);
            evt_next();
        }
        member_set(16, 0, 0);
        member_set(12, 0, 0);
        evt_next();
        member_copy(16, 16);
        var_10 += 50;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 00;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 -= 50;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 0A;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 28;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 00;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 -= 28;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 05;
        member_set2(11, 16);
        evt_next();
        member_copy(16, 16);
        var_10 += 14;
        member_set2(16, 16);
        member_copy(16, 11);
        var_10 -= 02;
        member_set2(11, 16);
        evt_next();
        member_set(16, 0, 0);
        return 0;
    }

    main_09()
    {
        do
        {
            evt_next();
        } while (bits[5][32] == 0);
        return 0;
    }
}
