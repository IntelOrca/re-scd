.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -14270, -18800, 2300, 1300, -21826, 0, -13165, 995, 1, 17, 9, 0, 25, 1, 0, 0, UNLOCKED, 0);
        door_aot_se(13, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, 0, 0, 1, 1, -14955, 0, -7216, 3072, 1, 20, 2, 0, 52, 0, 0, 0, UNLOCKED, 0);
        return 0;
    }
}

main
{
    main_00()
    {
        if (game.scenario == 1)
        {
            item_aot_set(2, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12100, -12680, 1230, 1450, ITEM_ACIDROUNDS, 6, 65, 1, 0);
        }
        else
        {
            item_aot_set(2, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12100, -12680, 1230, 1450, ITEM_BOWGUNAMMO, 36, 65, 2, 0);
        }
        item_aot_set(4, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -17580, -15310, 1030, 2110, ITEM_HANDGUNAMMO, 15, 67, 3, 0);
        item_aot_set(5, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -12120, -14490, 1390, 1380, ITEM_HANDGUNAMMO, 15, 68, 4, 0);
        main_02();
        if (game.scenario == 1)
        {
            obj_model_set(1, 0, 0, 0, 0, 4, 0, 10, 16, -11650, -1600, -12050, 0, -704, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
        else
        {
            obj_model_set(2, 0, 0, 0, 0, 4, 0, 10, 16, -11650, -1600, -12050, 0, -704, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 16, -17150, -1600, -13200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -11750, -1600, -13500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }

    main_01()
    {
        main_04();
        return 0;
    }

    main_02()
    {
        item_aot_set(6, SCE_ITEM, SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 1, 1, ITEM_SMG, 100, 62, 6, 0);
        aot_set(7, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, -15780, -6600, 2850, 1230, 255, 0, I_GOSUB, main_03, 0, 0);
        obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 16, -14850, -20700, 11236, 0, 832, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(6, 0, 0, 0, 0, 0, 0, 10, 16, -14550, -20700, -5300, 0, -1536, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        return 0;
    }

    main_03()
    {
        bits[2][7] = 1;
        cut_chg(4);
        se_on(2, 296, 0, -14420, -1024, 6700);
        if (bits[29][1] == 0)
        {
            work_set(WK_OBJECT, 5);
            pos_set(0, -13300, -700, -5400);
            dir_set(0, 0, 832, 0);
        }
        else
        {
            work_set(WK_OBJECT, 6);
            pos_set(0, -13750, -700, -5300);
            dir_set(0, 0, -1536, 0);
            evt_chain(0, 24, 5);
        }
        if (bits[29][0] == 0)
        {
            work_set(WK_OBJECT, 6);
            pos_set(0, -13750, -700, -5300);
            dir_set(0, 0, -1536, 0);
        }
        else
        {
            work_set(WK_OBJECT, 5);
            pos_set(0, -13300, -700, -5400);
            dir_set(0, 0, 832, 0);
            evt_chain(0, 24, 6);
        }
        sleep(10, 40);
        message_on(0, 4, 0, 255, 255);
        sleep(10, 1);
        se_on(4, 6, 0, -14420, -1024, 6700);
        if (input.question == 0)
        {
            aot_on(6);
            sleep(10, 1);
        }
        else
        {
            message_on(0, 5, 0, 255, 255);
            sleep(10, 1);
            if (input.question == 0)
            {
                sce_fade_set(2, 2, 7, 128, 1);
                sleep(10, 30);
                for 5 times
                {
                    sce_fade_adjust(2, 255, 127);
                    evt_next();
                }
                bits[29][1] = 1;
                bits[8][63] = 1;
                if (game.player == 0)
                {
                    work_set(WK_PLAYER, 0);
                    save(32, 2);
                }
                else
                {
                    work_set(WK_PLAYER, 0);
                    save(32, 3);
                }
                aot_on(13);
            }
        }
        work_set(WK_OBJECT, 6);
        pos_set(0, -13750, -20700, -5300);
        work_set(WK_OBJECT, 5);
        pos_set(0, -13300, -20700, -5400);
        cut_chg(2);
        bits[2][7] = 0;
        cut_auto(1);
        return 0;
    }

    main_04()
    {
        if (bits[8][62] == 1)
        {
            bits[29][0] = 1;
        }
        if (bits[29][1] == 1 && bits[29][0] == 1)
        {
            aot_reset(7, SCE_AUTO, SAT_PL | SAT_MANUAL | SAT_FRONT, 0, 0, 0, 0, 0, 0);
        }
        return 0;
    }

    main_05()
    {
        message_on(0, 6, 0, 255, 255);
        sleep(10, 1);
        if (game.scenario == 0)
        {
            if (game.player == 0)
            {
                message_on(0, 9, 0, 255, 255);
            }
            else
            {
                message_on(0, 8, 0, 255, 255);
            }
            sleep(10, 1);
        }
        aot_on(6);
        sleep(10, 1);
        work_set(WK_OBJECT, 6);
        pos_set(0, -13750, -20700, -5300);
        cut_chg(2);
        bits[2][7] = 0;
        cut_auto(1);
        return 0;
    }

    main_06()
    {
        message_on(0, 7, 0, 255, 255);
        sleep(10, 1);
        if (game.scenario == 0)
        {
            if (game.player == 0)
            {
                message_on(0, 9, 0, 255, 255);
            }
            else
            {
                message_on(0, 8, 0, 255, 255);
            }
            sleep(10, 1);
        }
        message_on(0, 5, 0, 255, 255);
        sleep(10, 1);
        if (input.question == 0)
        {
            bits[29][1] = 1;
            bits[8][63] = 1;
            if (game.player == 0)
            {
                work_set(WK_PLAYER, 0);
                save(32, 2);
            }
            else
            {
                work_set(WK_PLAYER, 0);
                save(32, 3);
            }
            aot_on(13);
        }
        work_set(WK_OBJECT, 5);
        pos_set(0, -14150, -20700, -5400);
        cut_chg(2);
        bits[2][7] = 0;
        cut_auto(1);
        return 0;
        db(0x14, 0x14);
    }
}
