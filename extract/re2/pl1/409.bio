.version 2
init
{
    init_00()
    {
        door_aot_se(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -6921, -6976, 1100, 1800, -1630, -1800, -8424, 280, 3, 16, 0, 1, 22, 5, 0, 0, UNLOCKED, 0);
        door_aot_se(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, 9179, -1776, 1100, 2300, -26597, 0, -25166, 0, 3, 11, 3, 0, 22, 4, 0, 0, UNLOCKED, 0);
        aot_set(4, SCE_STATUS, SAT_PL | SAT_MANUAL | SAT_UNDER, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (game.player == 0)
        {
            if (bits[4][31] == 0)
            {
                bits[30][0] = 1;
                rbj_reset();
            }
            else
            {
                bits[30][1] = 1;
                rbj_reset();
            }
        }
        obj_model_set(0, 1, 130, 4, 4, 0, 4, 10, 26, -11200, -1820, -3150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        obj_model_set(2, 0, 0, 0, 0, 0, 0, 10, 0, 9710, -15750, 1015, 0, -2048, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        if (game.player == 0)
        {
            obj_model_set(8, 0, 0, 0, 0, 0, 0, 10, 16, -10982, -11750, 1231, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(10, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -11982, 681, 1800, 1800, ITEM_121, 1, 183, 8, 0);
        }
        else
        {
            obj_model_set(5, 0, 0, 0, 0, 0, 0, 10, 16, -10982, -11750, 1231, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(10, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -11982, 681, 1800, 1800, ITEM_121, 1, 183, 5, 0);
        }
        if (game.player == 0)
        {
            obj_model_set(7, 0, 0, 0, 0, 0, 0, 10, 16, -9174, -10800, -1422, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(11, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -10482, -2119, 1800, 1800, ITEM_EAGLEMEDAL, 1, 184, 7, 1);
        }
        else
        {
            obj_model_set(4, 0, 0, 0, 0, 0, 0, 10, 16, -9174, -10800, -1422, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            item_aot_set(11, SCE_ITEM, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -10482, -2119, 1800, 1800, ITEM_EAGLEMEDAL, 1, 184, 4, 1);
        }
        return 0;
    }
}

main
{
    main_00()
    {
        aot_set(3, SCE_FLAG_CHG, SAT_PL | SAT_FRONT, 4, 0, 9669, 3786, 1800, 2000, 10, 0, 50, 0, 1, 0);
        if (bits[4][30] == 0)
        {
            cut_be_set(0, 2, 0);
            sca_id_set(0, 0, 0);
            sca_id_set(25, 16, 252);
        }
        else
        {
            cut_be_set(0, 2, 1);
            sca_id_set(0, 0, 222);
            sca_id_set(25, 0, 0);
        }
        if (bits[1][3] == 1)
        {
            if (game.last_room == 0x410)
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 4, 32, 0, 255, -4679, -7200, -5074, 0, 0, 0);
            }
            else
            {
                sce_em_set(0, 255, ENEMY_SHERRYWITHPENDANT, 0, 4, 4, 32, 0, 255, 8123, -7200, -1147, 2880, 0, 0);
            }
        }
        obj_model_set(3, 0, 0, 0, 0, 0, 0, 10, 0, 20000, 20000, 2000, 1024, 0, -1024, 0, 0, 0, 0, 0, 0, 0, 0);
        if (bits[4][32] == 0)
        {
            aot_reset(1, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 35, 0, 0, 0, 0, 255);
            bits[5][4] = 1;
            evt_exec(255, I_GOSUB, main_04);
        }
        else
        {
            aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0F, 0, 0);
            aot_reset(3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
            bits[5][4] = 1;
            evt_exec(255, I_GOSUB, main_05);
        }
        aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0E, 0, 0);
        evt_exec(255, I_GOSUB, main_03);
        evt_exec(255, I_GOSUB, main_0D);
        main_02();
        return 0;
    }

    main_01()
    {
        if (arr[2] == 50)
        {
            evt_exec(255, I_GOSUB, main_06);
        }
        return 0;
    }

    main_02()
    {
        aot_set(26, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -12533, -1908, 1977, 5600, 33, 0, 0, 0, 0, 255);
        aot_set_4p(27, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 6, 0, -10983, -3048, -10093, -288, -7773, 1762, -8733, -848, 34, 0, 0, 0, 0, 255);
        aot_set(28, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, 9669, 3786, 1800, 2000, 36, 0, 0, 0, 0, 255);
        if (bits[4][30] == 1)
        {
            aot_set(29, SCE_MESSAGE, SAT_PL | SAT_MANUAL | SAT_FRONT, 4, 0, -483, -628, 2577, 1500, 37, 0, 0, 0, 0, 255);
        }
        return 0;
    }

    main_03()
    {

off_24CE:
        switch (var_1A)
        {
        case 0:
        case 1:
        case 2:
        case 3:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
            sce_bgm_control(0, 0, 1, 51, 65);
            break;
        case 4:
            sce_bgm_control(0, 0, 1, 41, 65);
            break;
        case 5:
            sce_bgm_control(0, 0, 1, 31, 65);
            break;
        }
        if (bits[4][32] == 0)
        {
            switch (var_1A)
            {
            case 0:
            case 7:
                sce_bgm_control(1, 0, 1, 51, 65);
                break;
            case 1:
            case 8:
                sce_bgm_control(1, 0, 1, 71, 56);
                break;
            case 2:
                sce_bgm_control(1, 0, 1, 71, 91);
                break;
            case 3:
                sce_bgm_control(1, 0, 1, 71, 71);
                break;
            case 4:
                sce_bgm_control(1, 0, 1, 51, 65);
                break;
            case 5:
                sce_bgm_control(1, 0, 1, 41, 41);
                break;
            case 6:
                sce_bgm_control(1, 0, 1, 61, 91);
                break;
            case 9:
                sce_bgm_control(1, 0, 1, 61, 41);
                break;
            case 10:
                sce_bgm_control(1, 0, 1, 61, 101);
                break;
            case 11:
                sce_bgm_control(1, 0, 1, 51, 41);
                break;
            case 12:
            case 13:
            case 14:
                sce_bgm_control(1, 0, 1, 61, 101);
                break;
            }
        }
        else
        {
            sce_bgm_control(1, 0, 1, 1, 65);
        }
        do
        {
            evt_next();
        } while (bits[1][11] == 0);
        goto off_24CE;
        return 0;
    }

    main_04()
    {
        main_08();
        work_set(WK_OBJECT, 2);
        while (
        {
            member_copy(16, 14);
            var_10 -= 320;
            member_set2(14, 16);
            member_copy(16, 14);
            var_10 &= FFF;
            member_set2(14, 16);
            evt_next();
        }
        return 0;
    }

    main_05()
    {
        sce_bgm_control(1, 0, 1, 1, 64);
        main_09();
        work_set(WK_OBJECT, 2);
        while (
        {
            member_copy(16, 14);
            var_10 -= 06;
            member_set2(14, 16);
            member_copy(16, 14);
            var_10 &= FFF;
            member_set2(14, 16);
            evt_next();
        }
        return 0;
    }

    main_06()
    {
        bits[2][7] = 1;
        game.cutscene = 1;
        bits[4][32] = 1;
        bits[5][10] = 0;
        bits[5][11] = 0;
        bits[5][4] = 0;
        nop_8c(0, 90, 110, 12, 0, 80, 0);
        nop_8c(0, 90, 110, 12, 0, 120, 0);
        evt_exec(255, I_GOSUB, main_0B);
        evt_exec(255, I_GOSUB, main_0A);
        evt_exec(255, I_GOSUB, main_07);
        while (
        {
            evt_next();
        }
        aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0F, 0, 0);
        aot_reset(3, SCE_AUTO, SAT_AUTO, 0, 0, 0, 0, 0, 0);
        sleep(10, 30);
        bits[5][3] = 0;
        bits[2][7] = 0;
        game.cutscene = 0;
        aot_on(4);
        evt_next();
        bits[5][11] = 1;
        return 0;
    }

    main_07()
    {
        work_set(WK_OBJECT, 2);
        for 50 times
        {
            member_copy(16, 14);
            var_10 -= 320;
            member_set2(14, 16);
            member_copy(16, 14);
            var_10 &= FFF;
            member_set2(14, 16);
            evt_next();
        }
        speed_set(3, -800);
        speed_set(9, 40);
        for 4 times
        {
            for 10 times
            {
                add_speed();
                member_copy(16, 14);
                var_10 &= FFF;
                member_set2(14, 16);
                evt_next();
            }
            add_aspeed();
        }
        sce_bgm_control(1, 2, 1, 1, 64);
        for 10 times
        {
            add_speed();
            member_copy(16, 14);
            var_10 &= FFF;
            member_set2(14, 16);
            evt_next();
        }
        sce_bgm_control(2, 1, 1, 80, 64);
        for 14 times
        {
            for 10 times
            {
                add_speed();
                member_copy(16, 14);
                var_10 &= FFF;
                member_set2(14, 16);
                evt_next();
            }
            add_aspeed();
        }
        speed_set(3, -20);
        speed_set(9, 1);
        for 14 times
        {
            for 2 times
            {
                add_speed();
                member_copy(16, 14);
                var_10 &= FFF;
                member_set2(14, 16);
                evt_next();
            }
            add_aspeed();
        }
        bits[5][4] = 1;
        evt_exec(255, I_GOSUB, main_05);
        bits[5][3] = 1;
        return 0;
    }

    main_08()
    {
        if (bits[5][9] == 1)
        {
            sce_espr_kill(22, 20, 0, 0);
            evt_next();
        }
        bits[5][9] = 1;
        sce_espr3d_on(0, 1046, 0, 4096, 9600, -9450, 5010, 0, 1024, 0, 0);
        return 0;
    }

    main_09()
    {
        if (bits[5][9] == 1)
        {
            sce_espr_kill(22, 4, 0, 0);
            evt_next();
        }
        bits[5][9] = 1;
        sce_espr3d_on(0, 5142, 0, 4096, 9600, -9450, 5010, 0, 1024, 0, 0);
        return 0;
    }

    main_0A()
    {
        work_set(WK_PLAYER, 0);
        if (game.player == 1)
        {
            pos_set(0, 9187, -7200, 4704);
            member_set(15, 0, 0);
        }
        else
        {
            pos_set(0, 11305, -7200, 4649);
            member_set(15, 0, 0);
        }
        sleep(10, 20);
        if (game.player == 1)
        {
            plc_motion(0, 15, 0);
        }
        else
        {
            plc_motion(0, 15, 1);
        }
        sleep(10, 30);
        if (game.player == 1)
        {
            plc_motion(0, 16, 0);
        }
        else
        {
            plc_motion(0, 16, 1);
        }
        sleep(10, 28);
        se_on(2, 266, 1, 0, 0, 0);
        sleep(10, 22);
        if (game.player == 1)
        {
            plc_motion(0, 17, 0);
        }
        else
        {
            plc_motion(0, 17, 1);
        }
        sleep(10, 18);
        se_on(2, 266, 1, 0, 0, 0);
        sleep(10, 15);
        sleep(10, 12);
        plc_cnt(50);
        plc_motion(0, 16, 192);
        sleep(10, 50);
        plc_cnt(30);
        plc_motion(0, 15, 192);
        sleep(10, 30);
        bits[5][10] = 1;
        plc_ret();
        return 0;
    }

    main_0B()
    {
        work_set(WK_OBJECT, 3);
        pos_set(0, 10067, -9000, 4699);
        sleep(10, 20);
        sleep(10, 30);
        speed_set(3, 0);
        speed_set(9, 1);
        for 10 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(3, 10);
        speed_set(9, 1);
        for 5 times
        {
            add_speed();
            evt_next();
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, 2);
        for 23 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        speed_set(9, -10);
        for 5 times
        {
            add_speed();
            add_aspeed();
            evt_next();
        }
        while (
        {
            sleep(10, 17);
            speed_set(3, 32);
            speed_set(9, 2);
            for 10 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
            speed_set(9, -8);
            for 4 times
            {
                add_speed();
                add_aspeed();
                evt_next();
            }
        }
        while (
        {
            evt_next();
        }
        pos_set(0, 20000, 20000, 20000);
        return 0;
    }

    main_0C()
    {
        evt_next();

off_298F:
        work_set(WK_OBJECT, 1);
        if (arr[26] == 0)
        {
            pos_set(0, -2000, -1620, -20200);
        }
        else
        {
            if (arr[26] == 7)
            {
                pos_set(0, -2000, -1620, -20200);
            }
            else
            {
                pos_set(0, 20000, 20000, 20000);
            }
        }
        evt_next();
        while (
        {
            evt_next();
        }
        goto off_298F;
        return 0;
    }

    main_0D()
    {
        evt_next();

off_29E1:
        work_set(WK_OBJECT, 0);
        switch (var_1A)
        {
        case 0:
        case 7:
        case 9:
            member_set(13, 32, 78);
            break;
        case 13:
            member_set(13, 50, 231);
            break;
        default:
            member_set(13, 178, 243);
            break;
        }
        evt_next();
        while (
        {
            evt_next();
        }
        goto off_29E1;
        return 0;
    }

    main_0E()
    {
        message_on(0, 40, 0, 0, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(4, 6, 0, 0, 0, 0);
            aot_reset(0, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 162, 249, 248, 248, 24, 223);
            aot_on(0);
            evt_next();
            aot_reset(0, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0E, 0, 0);
        }
        else
        {
            se_on(4, 5, 0, 0, 0, 0);
        }
        return 0;
    }

    main_0F()
    {
        message_on(0, 41, 0, 0, 255);
        evt_next();
        if (input.question == 0)
        {
            se_on(4, 6, 0, 0, 0, 0);
            aot_reset(1, SCE_DOOR, SAT_PL | SAT_MANUAL | SAT_FRONT, 27, 152, 0, 0, 178, 157);
            aot_on(1);
            evt_next();
            aot_reset(1, SCE_EVENT, SAT_PL | SAT_MANUAL | SAT_FRONT, 255, 0, I_GOSUB, main_0F, 0, 0);
        }
        else
        {
            se_on(4, 5, 0, 0, 0, 0);
        }
        return 0;
    }
}
